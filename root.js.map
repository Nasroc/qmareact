{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,IMY+B,EAw1QI,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,M,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,O,W,O,C,E,S,C,E,O,E,C,GLz1QnC,IAoBA,EACA,EACA,EAtBI,EAAqB,OAAO,GAAG,CAAC,8BAEpC,SAAS,EAAQ,CAAI,CAAE,CAAM,CAAE,CAAQ,EACrC,IAAI,EAAM,KAGV,GAFA,KAAK,IAAM,GAAa,CAAA,EAAM,GAAK,CAAA,EACnC,KAAK,IAAM,EAAO,GAAG,EAAK,CAAA,EAAM,GAAK,EAAO,GAAE,AAAF,EACxC,QAAS,EAEX,IAAK,IAAI,KADT,EAAW,CAAC,EACS,EACnB,QAAU,GAAa,CAAA,CAAQ,CAAC,EAAS,CAAG,CAAM,CAAC,EAAS,AAAT,OAChD,EAAW,EAElB,MAAO,CACL,SAAU,EACV,KAAM,EACN,IAAK,EACL,IAAK,KAAK,IALZ,CAAA,EAAS,EAAS,GAAG,AAAH,EAKS,EAAS,KAClC,MAAO,CACT,CACF,CACA,EAnBwB,OAAO,GAAG,CAAC,kBAoBnC,EAAc,EACd,EAAe,C,G,E,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Y,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,a,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,kE,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,M,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Q,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,e,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Y,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,a,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,iB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,O,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,O,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,kB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,2B,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,M,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,iB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,c,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,a,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,mB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Y,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Q,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,sB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,qB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,kB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,U,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,a,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,S,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,uB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,gB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,U,W,O,C,E,S,C,E,O,E,C,G,IC6Rf,EAiCA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EAGA,EAKA,EA2BA,EAgBA,EAwBA,EAGA,EAGA,EACA,EAOA,EAOA,EAmBA,EAGA,EAGA,EAGA,EAGA,EAGA,EACA,EAGA,EAGA,EAGA,EAGA,EAGA,EAGA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","sources":["<anon>","node_modules/react/cjs/react-jsx-runtime.production.js","node_modules/react/cjs/react.production.js","node_modules/process/browser.js","src/root.tsx","node_modules/react/jsx-runtime.js","node_modules/react-router/dist/development/chunk-HA7DTUK3.mjs","node_modules/react/index.js","node_modules/turbo-stream/dist/turbo-stream.js","node_modules/turbo-stream/dist/flatten.js","node_modules/turbo-stream/dist/utils.js","node_modules/turbo-stream/dist/unflatten.js","node_modules/cookie/dist/index.js","node_modules/cookie/src/index.ts","node_modules/set-cookie-parser/lib/set-cookie.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1tTUb\", function(module, exports) {\n\n$parcel$export(module.exports, \"Fragment\", function () { return $1143dd7f04075183$export$ffb0004e005737fa; }, function (v) { return $1143dd7f04075183$export$ffb0004e005737fa = v; });\n$parcel$export(module.exports, \"jsx\", function () { return $1143dd7f04075183$export$34b9dba7ce09269b; }, function (v) { return $1143dd7f04075183$export$34b9dba7ce09269b = v; });\n$parcel$export(module.exports, \"jsxs\", function () { return $1143dd7f04075183$export$25062201e9e25d76; }, function (v) { return $1143dd7f04075183$export$25062201e9e25d76 = v; });\n/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var $1143dd7f04075183$export$ffb0004e005737fa;\nvar $1143dd7f04075183$export$34b9dba7ce09269b;\nvar $1143dd7f04075183$export$25062201e9e25d76;\n\"use strict\";\nvar $1143dd7f04075183$var$REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"), $1143dd7f04075183$var$REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction $1143dd7f04075183$var$jsxProd(type, config, maybeKey) {\n    var key = null;\n    void 0 !== maybeKey && (key = \"\" + maybeKey);\n    void 0 !== config.key && (key = \"\" + config.key);\n    if (\"key\" in config) {\n        maybeKey = {};\n        for(var propName in config)\"key\" !== propName && (maybeKey[propName] = config[propName]);\n    } else maybeKey = config;\n    config = maybeKey.ref;\n    return {\n        $$typeof: $1143dd7f04075183$var$REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        ref: void 0 !== config ? config : null,\n        props: maybeKey\n    };\n}\n$1143dd7f04075183$export$ffb0004e005737fa = $1143dd7f04075183$var$REACT_FRAGMENT_TYPE;\n$1143dd7f04075183$export$34b9dba7ce09269b = $1143dd7f04075183$var$jsxProd;\n$1143dd7f04075183$export$25062201e9e25d76 = $1143dd7f04075183$var$jsxProd;\n\n});\n\nparcelRegister(\"gfHYB\", function(module, exports) {\n\n$parcel$export(module.exports, \"Children\", function () { return $bd5028e33dce7343$export$dca3b0875bd9a954; }, function (v) { return $bd5028e33dce7343$export$dca3b0875bd9a954 = v; });\n$parcel$export(module.exports, \"Component\", function () { return $bd5028e33dce7343$export$16fa2f45be04daa8; }, function (v) { return $bd5028e33dce7343$export$16fa2f45be04daa8 = v; });\n$parcel$export(module.exports, \"Fragment\", function () { return $bd5028e33dce7343$export$ffb0004e005737fa; }, function (v) { return $bd5028e33dce7343$export$ffb0004e005737fa = v; });\n$parcel$export(module.exports, \"Profiler\", function () { return $bd5028e33dce7343$export$e2c29f18771995cb; }, function (v) { return $bd5028e33dce7343$export$e2c29f18771995cb = v; });\n$parcel$export(module.exports, \"PureComponent\", function () { return $bd5028e33dce7343$export$221d75b3f55bb0bd; }, function (v) { return $bd5028e33dce7343$export$221d75b3f55bb0bd = v; });\n$parcel$export(module.exports, \"StrictMode\", function () { return $bd5028e33dce7343$export$5f8d39834fd61797; }, function (v) { return $bd5028e33dce7343$export$5f8d39834fd61797 = v; });\n$parcel$export(module.exports, \"Suspense\", function () { return $bd5028e33dce7343$export$74bf444e3cd11ea5; }, function (v) { return $bd5028e33dce7343$export$74bf444e3cd11ea5 = v; });\n$parcel$export(module.exports, \"__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\", function () { return $bd5028e33dce7343$export$1ced07cd6b1985ce; }, function (v) { return $bd5028e33dce7343$export$1ced07cd6b1985ce = v; });\n$parcel$export(module.exports, \"act\", function () { return $bd5028e33dce7343$export$3ba232387fd5d6dd; }, function (v) { return $bd5028e33dce7343$export$3ba232387fd5d6dd = v; });\n$parcel$export(module.exports, \"cache\", function () { return $bd5028e33dce7343$export$69a3209f1a06c04d; }, function (v) { return $bd5028e33dce7343$export$69a3209f1a06c04d = v; });\n$parcel$export(module.exports, \"cloneElement\", function () { return $bd5028e33dce7343$export$e530037191fcd5d7; }, function (v) { return $bd5028e33dce7343$export$e530037191fcd5d7 = v; });\n$parcel$export(module.exports, \"createContext\", function () { return $bd5028e33dce7343$export$fd42f52fd3ae1109; }, function (v) { return $bd5028e33dce7343$export$fd42f52fd3ae1109 = v; });\n$parcel$export(module.exports, \"createElement\", function () { return $bd5028e33dce7343$export$c8a8987d4410bf2d; }, function (v) { return $bd5028e33dce7343$export$c8a8987d4410bf2d = v; });\n$parcel$export(module.exports, \"createRef\", function () { return $bd5028e33dce7343$export$7d1e3a5e95ceca43; }, function (v) { return $bd5028e33dce7343$export$7d1e3a5e95ceca43 = v; });\n$parcel$export(module.exports, \"forwardRef\", function () { return $bd5028e33dce7343$export$257a8862b851cb5b; }, function (v) { return $bd5028e33dce7343$export$257a8862b851cb5b = v; });\n$parcel$export(module.exports, \"isValidElement\", function () { return $bd5028e33dce7343$export$a8257692ac88316c; }, function (v) { return $bd5028e33dce7343$export$a8257692ac88316c = v; });\n$parcel$export(module.exports, \"lazy\", function () { return $bd5028e33dce7343$export$488013bae63b21da; }, function (v) { return $bd5028e33dce7343$export$488013bae63b21da = v; });\n$parcel$export(module.exports, \"memo\", function () { return $bd5028e33dce7343$export$7c73462e0d25e514; }, function (v) { return $bd5028e33dce7343$export$7c73462e0d25e514 = v; });\n$parcel$export(module.exports, \"startTransition\", function () { return $bd5028e33dce7343$export$7568632d0d33d16d; }, function (v) { return $bd5028e33dce7343$export$7568632d0d33d16d = v; });\n$parcel$export(module.exports, \"unstable_useCacheRefresh\", function () { return $bd5028e33dce7343$export$f93f40ac0ca7e3a8; }, function (v) { return $bd5028e33dce7343$export$f93f40ac0ca7e3a8 = v; });\n$parcel$export(module.exports, \"use\", function () { return $bd5028e33dce7343$export$1f96ae73734a86cc; }, function (v) { return $bd5028e33dce7343$export$1f96ae73734a86cc = v; });\n$parcel$export(module.exports, \"useActionState\", function () { return $bd5028e33dce7343$export$9a47ced3238df325; }, function (v) { return $bd5028e33dce7343$export$9a47ced3238df325 = v; });\n$parcel$export(module.exports, \"useCallback\", function () { return $bd5028e33dce7343$export$35808ee640e87ca7; }, function (v) { return $bd5028e33dce7343$export$35808ee640e87ca7 = v; });\n$parcel$export(module.exports, \"useContext\", function () { return $bd5028e33dce7343$export$fae74005e78b1a27; }, function (v) { return $bd5028e33dce7343$export$fae74005e78b1a27 = v; });\n$parcel$export(module.exports, \"useDebugValue\", function () { return $bd5028e33dce7343$export$dc8fbce3eb94dc1e; }, function (v) { return $bd5028e33dce7343$export$dc8fbce3eb94dc1e = v; });\n$parcel$export(module.exports, \"useDeferredValue\", function () { return $bd5028e33dce7343$export$6a7bc4e911dc01cf; }, function (v) { return $bd5028e33dce7343$export$6a7bc4e911dc01cf = v; });\n$parcel$export(module.exports, \"useEffect\", function () { return $bd5028e33dce7343$export$6d9c69b0de29b591; }, function (v) { return $bd5028e33dce7343$export$6d9c69b0de29b591 = v; });\n$parcel$export(module.exports, \"useId\", function () { return $bd5028e33dce7343$export$f680877a34711e37; }, function (v) { return $bd5028e33dce7343$export$f680877a34711e37 = v; });\n$parcel$export(module.exports, \"useImperativeHandle\", function () { return $bd5028e33dce7343$export$d5a552a76deda3c2; }, function (v) { return $bd5028e33dce7343$export$d5a552a76deda3c2 = v; });\n$parcel$export(module.exports, \"useInsertionEffect\", function () { return $bd5028e33dce7343$export$aaabe4eda9ed9969; }, function (v) { return $bd5028e33dce7343$export$aaabe4eda9ed9969 = v; });\n$parcel$export(module.exports, \"useLayoutEffect\", function () { return $bd5028e33dce7343$export$e5c5a5f917a5871c; }, function (v) { return $bd5028e33dce7343$export$e5c5a5f917a5871c = v; });\n$parcel$export(module.exports, \"useMemo\", function () { return $bd5028e33dce7343$export$1538c33de8887b59; }, function (v) { return $bd5028e33dce7343$export$1538c33de8887b59 = v; });\n$parcel$export(module.exports, \"useOptimistic\", function () { return $bd5028e33dce7343$export$fca7f784ae7a249a; }, function (v) { return $bd5028e33dce7343$export$fca7f784ae7a249a = v; });\n$parcel$export(module.exports, \"useReducer\", function () { return $bd5028e33dce7343$export$13e3392192263954; }, function (v) { return $bd5028e33dce7343$export$13e3392192263954 = v; });\n$parcel$export(module.exports, \"useRef\", function () { return $bd5028e33dce7343$export$b8f5890fc79d6aca; }, function (v) { return $bd5028e33dce7343$export$b8f5890fc79d6aca = v; });\n$parcel$export(module.exports, \"useState\", function () { return $bd5028e33dce7343$export$60241385465d0a34; }, function (v) { return $bd5028e33dce7343$export$60241385465d0a34 = v; });\n$parcel$export(module.exports, \"useSyncExternalStore\", function () { return $bd5028e33dce7343$export$306c0aa65ff9ec16; }, function (v) { return $bd5028e33dce7343$export$306c0aa65ff9ec16 = v; });\n$parcel$export(module.exports, \"useTransition\", function () { return $bd5028e33dce7343$export$7b286972b8d8ccbf; }, function (v) { return $bd5028e33dce7343$export$7b286972b8d8ccbf = v; });\n$parcel$export(module.exports, \"version\", function () { return $bd5028e33dce7343$export$83d89fbfd8236492; }, function (v) { return $bd5028e33dce7343$export$83d89fbfd8236492 = v; });\n/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var $bd5028e33dce7343$export$dca3b0875bd9a954;\nvar $bd5028e33dce7343$export$16fa2f45be04daa8;\nvar $bd5028e33dce7343$export$ffb0004e005737fa;\nvar $bd5028e33dce7343$export$e2c29f18771995cb;\nvar $bd5028e33dce7343$export$221d75b3f55bb0bd;\nvar $bd5028e33dce7343$export$5f8d39834fd61797;\nvar $bd5028e33dce7343$export$74bf444e3cd11ea5;\nvar $bd5028e33dce7343$export$1ced07cd6b1985ce;\nvar $bd5028e33dce7343$export$3ba232387fd5d6dd;\nvar $bd5028e33dce7343$export$69a3209f1a06c04d;\nvar $bd5028e33dce7343$export$e530037191fcd5d7;\nvar $bd5028e33dce7343$export$fd42f52fd3ae1109;\nvar $bd5028e33dce7343$export$c8a8987d4410bf2d;\nvar $bd5028e33dce7343$export$7d1e3a5e95ceca43;\nvar $bd5028e33dce7343$export$257a8862b851cb5b;\nvar $bd5028e33dce7343$export$a8257692ac88316c;\nvar $bd5028e33dce7343$export$488013bae63b21da;\nvar $bd5028e33dce7343$export$7c73462e0d25e514;\nvar $bd5028e33dce7343$export$7568632d0d33d16d;\nvar $bd5028e33dce7343$export$f93f40ac0ca7e3a8;\nvar $bd5028e33dce7343$export$1f96ae73734a86cc;\nvar $bd5028e33dce7343$export$9a47ced3238df325;\nvar $bd5028e33dce7343$export$35808ee640e87ca7;\nvar $bd5028e33dce7343$export$fae74005e78b1a27;\nvar $bd5028e33dce7343$export$dc8fbce3eb94dc1e;\nvar $bd5028e33dce7343$export$6a7bc4e911dc01cf;\nvar $bd5028e33dce7343$export$6d9c69b0de29b591;\nvar $bd5028e33dce7343$export$f680877a34711e37;\nvar $bd5028e33dce7343$export$d5a552a76deda3c2;\nvar $bd5028e33dce7343$export$aaabe4eda9ed9969;\nvar $bd5028e33dce7343$export$e5c5a5f917a5871c;\nvar $bd5028e33dce7343$export$1538c33de8887b59;\nvar $bd5028e33dce7343$export$fca7f784ae7a249a;\nvar $bd5028e33dce7343$export$13e3392192263954;\nvar $bd5028e33dce7343$export$b8f5890fc79d6aca;\nvar $bd5028e33dce7343$export$60241385465d0a34;\nvar $bd5028e33dce7343$export$306c0aa65ff9ec16;\nvar $bd5028e33dce7343$export$7b286972b8d8ccbf;\nvar $bd5028e33dce7343$export$83d89fbfd8236492;\n\nvar $6qd2L = parcelRequire(\"6qd2L\");\n\"use strict\";\nvar $bd5028e33dce7343$var$REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"), $bd5028e33dce7343$var$REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"), $bd5028e33dce7343$var$REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"), $bd5028e33dce7343$var$REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"), $bd5028e33dce7343$var$REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"), $bd5028e33dce7343$var$REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"), $bd5028e33dce7343$var$REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"), $bd5028e33dce7343$var$REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"), $bd5028e33dce7343$var$REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"), $bd5028e33dce7343$var$REACT_MEMO_TYPE = Symbol.for(\"react.memo\"), $bd5028e33dce7343$var$REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"), $bd5028e33dce7343$var$MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction $bd5028e33dce7343$var$getIteratorFn(maybeIterable) {\n    if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n    maybeIterable = $bd5028e33dce7343$var$MAYBE_ITERATOR_SYMBOL && maybeIterable[$bd5028e33dce7343$var$MAYBE_ITERATOR_SYMBOL] || maybeIterable[\"@@iterator\"];\n    return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar $bd5028e33dce7343$var$ReactNoopUpdateQueue = {\n    isMounted: function() {\n        return !1;\n    },\n    enqueueForceUpdate: function() {},\n    enqueueReplaceState: function() {},\n    enqueueSetState: function() {}\n}, $bd5028e33dce7343$var$assign = Object.assign, $bd5028e33dce7343$var$emptyObject = {};\nfunction $bd5028e33dce7343$var$Component(props, context, updater) {\n    this.props = props;\n    this.context = context;\n    this.refs = $bd5028e33dce7343$var$emptyObject;\n    this.updater = updater || $bd5028e33dce7343$var$ReactNoopUpdateQueue;\n}\n$bd5028e33dce7343$var$Component.prototype.isReactComponent = {};\n$bd5028e33dce7343$var$Component.prototype.setState = function(partialState, callback) {\n    if (\"object\" !== typeof partialState && \"function\" !== typeof partialState && null != partialState) throw Error(\"takes an object of state variables to update or a function which returns an object of state variables.\");\n    this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\n$bd5028e33dce7343$var$Component.prototype.forceUpdate = function(callback) {\n    this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction $bd5028e33dce7343$var$ComponentDummy() {}\n$bd5028e33dce7343$var$ComponentDummy.prototype = $bd5028e33dce7343$var$Component.prototype;\nfunction $bd5028e33dce7343$var$PureComponent(props, context, updater) {\n    this.props = props;\n    this.context = context;\n    this.refs = $bd5028e33dce7343$var$emptyObject;\n    this.updater = updater || $bd5028e33dce7343$var$ReactNoopUpdateQueue;\n}\nvar $bd5028e33dce7343$var$pureComponentPrototype = $bd5028e33dce7343$var$PureComponent.prototype = new $bd5028e33dce7343$var$ComponentDummy();\n$bd5028e33dce7343$var$pureComponentPrototype.constructor = $bd5028e33dce7343$var$PureComponent;\n$bd5028e33dce7343$var$assign($bd5028e33dce7343$var$pureComponentPrototype, $bd5028e33dce7343$var$Component.prototype);\n$bd5028e33dce7343$var$pureComponentPrototype.isPureReactComponent = !0;\nvar $bd5028e33dce7343$var$isArrayImpl = Array.isArray, $bd5028e33dce7343$var$ReactSharedInternals = {\n    H: null,\n    A: null,\n    T: null,\n    S: null\n}, $bd5028e33dce7343$var$hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction $bd5028e33dce7343$var$ReactElement(type, key, self, source, owner, props) {\n    self = props.ref;\n    return {\n        $$typeof: $bd5028e33dce7343$var$REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        ref: void 0 !== self ? self : null,\n        props: props\n    };\n}\nfunction $bd5028e33dce7343$var$cloneAndReplaceKey(oldElement, newKey) {\n    return $bd5028e33dce7343$var$ReactElement(oldElement.type, newKey, void 0, void 0, void 0, oldElement.props);\n}\nfunction $bd5028e33dce7343$var$isValidElement(object) {\n    return \"object\" === typeof object && null !== object && object.$$typeof === $bd5028e33dce7343$var$REACT_ELEMENT_TYPE;\n}\nfunction $bd5028e33dce7343$var$escape(key) {\n    var escaperLookup = {\n        \"=\": \"=0\",\n        \":\": \"=2\"\n    };\n    return \"$\" + key.replace(/[=:]/g, function(match) {\n        return escaperLookup[match];\n    });\n}\nvar $bd5028e33dce7343$var$userProvidedKeyEscapeRegex = /\\/+/g;\nfunction $bd5028e33dce7343$var$getElementKey(element, index) {\n    return \"object\" === typeof element && null !== element && null != element.key ? $bd5028e33dce7343$var$escape(\"\" + element.key) : index.toString(36);\n}\nfunction $bd5028e33dce7343$var$noop$1() {}\nfunction $bd5028e33dce7343$var$resolveThenable(thenable) {\n    switch(thenable.status){\n        case \"fulfilled\":\n            return thenable.value;\n        case \"rejected\":\n            throw thenable.reason;\n        default:\n            switch(\"string\" === typeof thenable.status ? thenable.then($bd5028e33dce7343$var$noop$1, $bd5028e33dce7343$var$noop$1) : (thenable.status = \"pending\", thenable.then(function(fulfilledValue) {\n                \"pending\" === thenable.status && (thenable.status = \"fulfilled\", thenable.value = fulfilledValue);\n            }, function(error) {\n                \"pending\" === thenable.status && (thenable.status = \"rejected\", thenable.reason = error);\n            })), thenable.status){\n                case \"fulfilled\":\n                    return thenable.value;\n                case \"rejected\":\n                    throw thenable.reason;\n            }\n    }\n    throw thenable;\n}\nfunction $bd5028e33dce7343$var$mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n    var type = typeof children;\n    if (\"undefined\" === type || \"boolean\" === type) children = null;\n    var invokeCallback = !1;\n    if (null === children) invokeCallback = !0;\n    else switch(type){\n        case \"bigint\":\n        case \"string\":\n        case \"number\":\n            invokeCallback = !0;\n            break;\n        case \"object\":\n            switch(children.$$typeof){\n                case $bd5028e33dce7343$var$REACT_ELEMENT_TYPE:\n                case $bd5028e33dce7343$var$REACT_PORTAL_TYPE:\n                    invokeCallback = !0;\n                    break;\n                case $bd5028e33dce7343$var$REACT_LAZY_TYPE:\n                    return invokeCallback = children._init, $bd5028e33dce7343$var$mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);\n            }\n    }\n    if (invokeCallback) return callback = callback(children), invokeCallback = \"\" === nameSoFar ? \".\" + $bd5028e33dce7343$var$getElementKey(children, 0) : nameSoFar, $bd5028e33dce7343$var$isArrayImpl(callback) ? (escapedPrefix = \"\", null != invokeCallback && (escapedPrefix = invokeCallback.replace($bd5028e33dce7343$var$userProvidedKeyEscapeRegex, \"$&/\") + \"/\"), $bd5028e33dce7343$var$mapIntoArray(callback, array, escapedPrefix, \"\", function(c) {\n        return c;\n    })) : null != callback && ($bd5028e33dce7343$var$isValidElement(callback) && (callback = $bd5028e33dce7343$var$cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || children && children.key === callback.key ? \"\" : (\"\" + callback.key).replace($bd5028e33dce7343$var$userProvidedKeyEscapeRegex, \"$&/\") + \"/\") + invokeCallback)), array.push(callback)), 1;\n    invokeCallback = 0;\n    var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n    if ($bd5028e33dce7343$var$isArrayImpl(children)) for(var i = 0; i < children.length; i++)nameSoFar = children[i], type = nextNamePrefix + $bd5028e33dce7343$var$getElementKey(nameSoFar, i), invokeCallback += $bd5028e33dce7343$var$mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);\n    else if (i = $bd5028e33dce7343$var$getIteratorFn(children), \"function\" === typeof i) for(children = i.call(children), i = 0; !(nameSoFar = children.next()).done;)nameSoFar = nameSoFar.value, type = nextNamePrefix + $bd5028e33dce7343$var$getElementKey(nameSoFar, i++), invokeCallback += $bd5028e33dce7343$var$mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);\n    else if (\"object\" === type) {\n        if (\"function\" === typeof children.then) return $bd5028e33dce7343$var$mapIntoArray($bd5028e33dce7343$var$resolveThenable(children), array, escapedPrefix, nameSoFar, callback);\n        array = String(children);\n        throw Error(\"Objects are not valid as a React child (found: \" + (\"[object Object]\" === array ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : array) + \"). If you meant to render a collection of children, use an array instead.\");\n    }\n    return invokeCallback;\n}\nfunction $bd5028e33dce7343$var$mapChildren(children, func, context) {\n    if (null == children) return children;\n    var result = [], count = 0;\n    $bd5028e33dce7343$var$mapIntoArray(children, result, \"\", \"\", function(child) {\n        return func.call(context, child, count++);\n    });\n    return result;\n}\nfunction $bd5028e33dce7343$var$lazyInitializer(payload) {\n    if (-1 === payload._status) {\n        var ctor = payload._result;\n        ctor = ctor();\n        ctor.then(function(moduleObject) {\n            if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;\n        }, function(error) {\n            if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;\n        });\n        -1 === payload._status && (payload._status = 0, payload._result = ctor);\n    }\n    if (1 === payload._status) return payload._result.default;\n    throw payload._result;\n}\nvar $bd5028e33dce7343$var$reportGlobalError = \"function\" === typeof reportError ? reportError : function(error) {\n    if (\"object\" === typeof window && \"function\" === typeof window.ErrorEvent) {\n        var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message: \"object\" === typeof error && null !== error && \"string\" === typeof error.message ? String(error.message) : String(error),\n            error: error\n        });\n        if (!window.dispatchEvent(event)) return;\n    } else if (\"object\" === typeof $6qd2L && \"function\" === typeof $6qd2L.emit) {\n        $6qd2L.emit(\"uncaughtException\", error);\n        return;\n    }\n    console.error(error);\n};\nfunction $bd5028e33dce7343$var$noop() {}\n$bd5028e33dce7343$export$dca3b0875bd9a954 = {\n    map: $bd5028e33dce7343$var$mapChildren,\n    forEach: function(children, forEachFunc, forEachContext) {\n        $bd5028e33dce7343$var$mapChildren(children, function() {\n            forEachFunc.apply(this, arguments);\n        }, forEachContext);\n    },\n    count: function(children) {\n        var n = 0;\n        $bd5028e33dce7343$var$mapChildren(children, function() {\n            n++;\n        });\n        return n;\n    },\n    toArray: function(children) {\n        return $bd5028e33dce7343$var$mapChildren(children, function(child) {\n            return child;\n        }) || [];\n    },\n    only: function(children) {\n        if (!$bd5028e33dce7343$var$isValidElement(children)) throw Error(\"React.Children.only expected to receive a single React element child.\");\n        return children;\n    }\n};\n$bd5028e33dce7343$export$16fa2f45be04daa8 = $bd5028e33dce7343$var$Component;\n$bd5028e33dce7343$export$ffb0004e005737fa = $bd5028e33dce7343$var$REACT_FRAGMENT_TYPE;\n$bd5028e33dce7343$export$e2c29f18771995cb = $bd5028e33dce7343$var$REACT_PROFILER_TYPE;\n$bd5028e33dce7343$export$221d75b3f55bb0bd = $bd5028e33dce7343$var$PureComponent;\n$bd5028e33dce7343$export$5f8d39834fd61797 = $bd5028e33dce7343$var$REACT_STRICT_MODE_TYPE;\n$bd5028e33dce7343$export$74bf444e3cd11ea5 = $bd5028e33dce7343$var$REACT_SUSPENSE_TYPE;\n$bd5028e33dce7343$export$1ced07cd6b1985ce = $bd5028e33dce7343$var$ReactSharedInternals;\n$bd5028e33dce7343$export$3ba232387fd5d6dd = function() {\n    throw Error(\"act(...) is not supported in production builds of React.\");\n};\n$bd5028e33dce7343$export$69a3209f1a06c04d = function(fn) {\n    return function() {\n        return fn.apply(null, arguments);\n    };\n};\n$bd5028e33dce7343$export$e530037191fcd5d7 = function(element, config, children) {\n    if (null === element || void 0 === element) throw Error(\"The argument must be a React element, but you passed \" + element + \".\");\n    var props = $bd5028e33dce7343$var$assign({}, element.props), key = element.key, owner = void 0;\n    if (null != config) for(propName in void 0 !== config.ref && (owner = void 0), void 0 !== config.key && (key = \"\" + config.key), config)!$bd5028e33dce7343$var$hasOwnProperty.call(config, propName) || \"key\" === propName || \"__self\" === propName || \"__source\" === propName || \"ref\" === propName && void 0 === config.ref || (props[propName] = config[propName]);\n    var propName = arguments.length - 2;\n    if (1 === propName) props.children = children;\n    else if (1 < propName) {\n        for(var childArray = Array(propName), i = 0; i < propName; i++)childArray[i] = arguments[i + 2];\n        props.children = childArray;\n    }\n    return $bd5028e33dce7343$var$ReactElement(element.type, key, void 0, void 0, owner, props);\n};\n$bd5028e33dce7343$export$fd42f52fd3ae1109 = function(defaultValue) {\n    defaultValue = {\n        $$typeof: $bd5028e33dce7343$var$REACT_CONTEXT_TYPE,\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        _threadCount: 0,\n        Provider: null,\n        Consumer: null\n    };\n    defaultValue.Provider = defaultValue;\n    defaultValue.Consumer = {\n        $$typeof: $bd5028e33dce7343$var$REACT_CONSUMER_TYPE,\n        _context: defaultValue\n    };\n    return defaultValue;\n};\n$bd5028e33dce7343$export$c8a8987d4410bf2d = function(type, config, children) {\n    var propName, props = {}, key = null;\n    if (null != config) for(propName in void 0 !== config.key && (key = \"\" + config.key), config)$bd5028e33dce7343$var$hasOwnProperty.call(config, propName) && \"key\" !== propName && \"__self\" !== propName && \"__source\" !== propName && (props[propName] = config[propName]);\n    var childrenLength = arguments.length - 2;\n    if (1 === childrenLength) props.children = children;\n    else if (1 < childrenLength) {\n        for(var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];\n        props.children = childArray;\n    }\n    if (type && type.defaultProps) for(propName in childrenLength = type.defaultProps, childrenLength)void 0 === props[propName] && (props[propName] = childrenLength[propName]);\n    return $bd5028e33dce7343$var$ReactElement(type, key, void 0, void 0, null, props);\n};\n$bd5028e33dce7343$export$7d1e3a5e95ceca43 = function() {\n    return {\n        current: null\n    };\n};\n$bd5028e33dce7343$export$257a8862b851cb5b = function(render) {\n    return {\n        $$typeof: $bd5028e33dce7343$var$REACT_FORWARD_REF_TYPE,\n        render: render\n    };\n};\n$bd5028e33dce7343$export$a8257692ac88316c = $bd5028e33dce7343$var$isValidElement;\n$bd5028e33dce7343$export$488013bae63b21da = function(ctor) {\n    return {\n        $$typeof: $bd5028e33dce7343$var$REACT_LAZY_TYPE,\n        _payload: {\n            _status: -1,\n            _result: ctor\n        },\n        _init: $bd5028e33dce7343$var$lazyInitializer\n    };\n};\n$bd5028e33dce7343$export$7c73462e0d25e514 = function(type, compare) {\n    return {\n        $$typeof: $bd5028e33dce7343$var$REACT_MEMO_TYPE,\n        type: type,\n        compare: void 0 === compare ? null : compare\n    };\n};\n$bd5028e33dce7343$export$7568632d0d33d16d = function(scope) {\n    var prevTransition = $bd5028e33dce7343$var$ReactSharedInternals.T, currentTransition = {};\n    $bd5028e33dce7343$var$ReactSharedInternals.T = currentTransition;\n    try {\n        var returnValue = scope(), onStartTransitionFinish = $bd5028e33dce7343$var$ReactSharedInternals.S;\n        null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);\n        \"object\" === typeof returnValue && null !== returnValue && \"function\" === typeof returnValue.then && returnValue.then($bd5028e33dce7343$var$noop, $bd5028e33dce7343$var$reportGlobalError);\n    } catch (error) {\n        $bd5028e33dce7343$var$reportGlobalError(error);\n    } finally{\n        $bd5028e33dce7343$var$ReactSharedInternals.T = prevTransition;\n    }\n};\n$bd5028e33dce7343$export$f93f40ac0ca7e3a8 = function() {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useCacheRefresh();\n};\n$bd5028e33dce7343$export$1f96ae73734a86cc = function(usable) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.use(usable);\n};\n$bd5028e33dce7343$export$9a47ced3238df325 = function(action, initialState, permalink) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\n$bd5028e33dce7343$export$35808ee640e87ca7 = function(callback, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useCallback(callback, deps);\n};\n$bd5028e33dce7343$export$fae74005e78b1a27 = function(Context) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useContext(Context);\n};\n$bd5028e33dce7343$export$dc8fbce3eb94dc1e = function() {};\n$bd5028e33dce7343$export$6a7bc4e911dc01cf = function(value, initialValue) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\n$bd5028e33dce7343$export$6d9c69b0de29b591 = function(create, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useEffect(create, deps);\n};\n$bd5028e33dce7343$export$f680877a34711e37 = function() {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useId();\n};\n$bd5028e33dce7343$export$d5a552a76deda3c2 = function(ref, create, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\n$bd5028e33dce7343$export$aaabe4eda9ed9969 = function(create, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\n$bd5028e33dce7343$export$e5c5a5f917a5871c = function(create, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\n$bd5028e33dce7343$export$1538c33de8887b59 = function(create, deps) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useMemo(create, deps);\n};\n$bd5028e33dce7343$export$fca7f784ae7a249a = function(passthrough, reducer) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\n$bd5028e33dce7343$export$13e3392192263954 = function(reducer, initialArg, init) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\n$bd5028e33dce7343$export$b8f5890fc79d6aca = function(initialValue) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useRef(initialValue);\n};\n$bd5028e33dce7343$export$60241385465d0a34 = function(initialState) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useState(initialState);\n};\n$bd5028e33dce7343$export$306c0aa65ff9ec16 = function(subscribe, getSnapshot, getServerSnapshot) {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n};\n$bd5028e33dce7343$export$7b286972b8d8ccbf = function() {\n    return $bd5028e33dce7343$var$ReactSharedInternals.H.useTransition();\n};\n$bd5028e33dce7343$export$83d89fbfd8236492 = \"19.0.0\";\n\n});\nparcelRegister(\"6qd2L\", function(module, exports) {\n// shim for using process in browser\nvar $4acf49f6c3e67aec$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $4acf49f6c3e67aec$var$cachedSetTimeout;\nvar $4acf49f6c3e67aec$var$cachedClearTimeout;\nfunction $4acf49f6c3e67aec$var$defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction $4acf49f6c3e67aec$var$defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function() {\n    try {\n        if (typeof setTimeout === 'function') $4acf49f6c3e67aec$var$cachedSetTimeout = setTimeout;\n        else $4acf49f6c3e67aec$var$cachedSetTimeout = $4acf49f6c3e67aec$var$defaultSetTimout;\n    } catch (e) {\n        $4acf49f6c3e67aec$var$cachedSetTimeout = $4acf49f6c3e67aec$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') $4acf49f6c3e67aec$var$cachedClearTimeout = clearTimeout;\n        else $4acf49f6c3e67aec$var$cachedClearTimeout = $4acf49f6c3e67aec$var$defaultClearTimeout;\n    } catch (e) {\n        $4acf49f6c3e67aec$var$cachedClearTimeout = $4acf49f6c3e67aec$var$defaultClearTimeout;\n    }\n})();\nfunction $4acf49f6c3e67aec$var$runTimeout(fun) {\n    if ($4acf49f6c3e67aec$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($4acf49f6c3e67aec$var$cachedSetTimeout === $4acf49f6c3e67aec$var$defaultSetTimout || !$4acf49f6c3e67aec$var$cachedSetTimeout) && setTimeout) {\n        $4acf49f6c3e67aec$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $4acf49f6c3e67aec$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $4acf49f6c3e67aec$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $4acf49f6c3e67aec$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $4acf49f6c3e67aec$var$runClearTimeout(marker) {\n    if ($4acf49f6c3e67aec$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($4acf49f6c3e67aec$var$cachedClearTimeout === $4acf49f6c3e67aec$var$defaultClearTimeout || !$4acf49f6c3e67aec$var$cachedClearTimeout) && clearTimeout) {\n        $4acf49f6c3e67aec$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $4acf49f6c3e67aec$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $4acf49f6c3e67aec$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $4acf49f6c3e67aec$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $4acf49f6c3e67aec$var$queue = [];\nvar $4acf49f6c3e67aec$var$draining = false;\nvar $4acf49f6c3e67aec$var$currentQueue;\nvar $4acf49f6c3e67aec$var$queueIndex = -1;\nfunction $4acf49f6c3e67aec$var$cleanUpNextTick() {\n    if (!$4acf49f6c3e67aec$var$draining || !$4acf49f6c3e67aec$var$currentQueue) return;\n    $4acf49f6c3e67aec$var$draining = false;\n    if ($4acf49f6c3e67aec$var$currentQueue.length) $4acf49f6c3e67aec$var$queue = $4acf49f6c3e67aec$var$currentQueue.concat($4acf49f6c3e67aec$var$queue);\n    else $4acf49f6c3e67aec$var$queueIndex = -1;\n    if ($4acf49f6c3e67aec$var$queue.length) $4acf49f6c3e67aec$var$drainQueue();\n}\nfunction $4acf49f6c3e67aec$var$drainQueue() {\n    if ($4acf49f6c3e67aec$var$draining) return;\n    var timeout = $4acf49f6c3e67aec$var$runTimeout($4acf49f6c3e67aec$var$cleanUpNextTick);\n    $4acf49f6c3e67aec$var$draining = true;\n    var len = $4acf49f6c3e67aec$var$queue.length;\n    while(len){\n        $4acf49f6c3e67aec$var$currentQueue = $4acf49f6c3e67aec$var$queue;\n        $4acf49f6c3e67aec$var$queue = [];\n        while(++$4acf49f6c3e67aec$var$queueIndex < len)if ($4acf49f6c3e67aec$var$currentQueue) $4acf49f6c3e67aec$var$currentQueue[$4acf49f6c3e67aec$var$queueIndex].run();\n        $4acf49f6c3e67aec$var$queueIndex = -1;\n        len = $4acf49f6c3e67aec$var$queue.length;\n    }\n    $4acf49f6c3e67aec$var$currentQueue = null;\n    $4acf49f6c3e67aec$var$draining = false;\n    $4acf49f6c3e67aec$var$runClearTimeout(timeout);\n}\n$4acf49f6c3e67aec$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $4acf49f6c3e67aec$var$queue.push(new $4acf49f6c3e67aec$var$Item(fun, args));\n    if ($4acf49f6c3e67aec$var$queue.length === 1 && !$4acf49f6c3e67aec$var$draining) $4acf49f6c3e67aec$var$runTimeout($4acf49f6c3e67aec$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $4acf49f6c3e67aec$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$4acf49f6c3e67aec$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$4acf49f6c3e67aec$var$process.title = 'browser';\n$4acf49f6c3e67aec$var$process.browser = true;\n$4acf49f6c3e67aec$var$process.env = {};\n$4acf49f6c3e67aec$var$process.argv = [];\n$4acf49f6c3e67aec$var$process.version = ''; // empty string to avoid regexp issues\n$4acf49f6c3e67aec$var$process.versions = {};\nfunction $4acf49f6c3e67aec$var$noop() {}\n$4acf49f6c3e67aec$var$process.on = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.addListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.once = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.off = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.removeListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.removeAllListeners = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.emit = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.prependListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.prependOnceListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.listeners = function(name) {\n    return [];\n};\n$4acf49f6c3e67aec$var$process.binding = function(name) {\n    throw new Error('process.binding is not supported');\n};\n$4acf49f6c3e67aec$var$process.cwd = function() {\n    return '/';\n};\n$4acf49f6c3e67aec$var$process.chdir = function(dir) {\n    throw new Error('process.chdir is not supported');\n};\n$4acf49f6c3e67aec$var$process.umask = function() {\n    return 0;\n};\n\n});\n\n\nvar $7ead0b1397a835ed$exports = {};\n'use strict';\n\n$7ead0b1397a835ed$exports = (parcelRequire(\"1tTUb\"));\n\n\n/**\n * react-router v7.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */ // lib/router/history.ts\nvar $a972dfa956833003$exports = {};\n'use strict';\n\n$a972dfa956833003$exports = (parcelRequire(\"gfHYB\"));\n\n\nvar $38eecd17912935e8$exports = {};\n\"use strict\";\nObject.defineProperty($38eecd17912935e8$exports, \"__esModule\", {\n    value: true\n});\n$38eecd17912935e8$exports.encode = $38eecd17912935e8$exports.decode = void 0;\nvar $d1b31b0f03c5a789$exports = {};\n\"use strict\";\nObject.defineProperty($d1b31b0f03c5a789$exports, \"__esModule\", {\n    value: true\n});\n$d1b31b0f03c5a789$exports.flatten = void 0;\nvar $54d317bdb58f6810$exports = {};\n\"use strict\";\nObject.defineProperty($54d317bdb58f6810$exports, \"__esModule\", {\n    value: true\n});\n$54d317bdb58f6810$exports.createLineSplittingTransform = $54d317bdb58f6810$exports.Deferred = $54d317bdb58f6810$exports.TYPE_PREVIOUS_RESOLVED = $54d317bdb58f6810$exports.TYPE_URL = $54d317bdb58f6810$exports.TYPE_SYMBOL = $54d317bdb58f6810$exports.TYPE_SET = $54d317bdb58f6810$exports.TYPE_REGEXP = $54d317bdb58f6810$exports.TYPE_PROMISE = $54d317bdb58f6810$exports.TYPE_NULL_OBJECT = $54d317bdb58f6810$exports.TYPE_MAP = $54d317bdb58f6810$exports.TYPE_ERROR = $54d317bdb58f6810$exports.TYPE_DATE = $54d317bdb58f6810$exports.TYPE_BIGINT = $54d317bdb58f6810$exports.UNDEFINED = $54d317bdb58f6810$exports.POSITIVE_INFINITY = $54d317bdb58f6810$exports.NULL = $54d317bdb58f6810$exports.NEGATIVE_ZERO = $54d317bdb58f6810$exports.NEGATIVE_INFINITY = $54d317bdb58f6810$exports.NAN = $54d317bdb58f6810$exports.HOLE = void 0;\n$54d317bdb58f6810$exports.HOLE = -1;\n$54d317bdb58f6810$exports.NAN = -2;\n$54d317bdb58f6810$exports.NEGATIVE_INFINITY = -3;\n$54d317bdb58f6810$exports.NEGATIVE_ZERO = -4;\n$54d317bdb58f6810$exports.NULL = -5;\n$54d317bdb58f6810$exports.POSITIVE_INFINITY = -6;\n$54d317bdb58f6810$exports.UNDEFINED = -7;\n$54d317bdb58f6810$exports.TYPE_BIGINT = \"B\";\n$54d317bdb58f6810$exports.TYPE_DATE = \"D\";\n$54d317bdb58f6810$exports.TYPE_ERROR = \"E\";\n$54d317bdb58f6810$exports.TYPE_MAP = \"M\";\n$54d317bdb58f6810$exports.TYPE_NULL_OBJECT = \"N\";\n$54d317bdb58f6810$exports.TYPE_PROMISE = \"P\";\n$54d317bdb58f6810$exports.TYPE_REGEXP = \"R\";\n$54d317bdb58f6810$exports.TYPE_SET = \"S\";\n$54d317bdb58f6810$exports.TYPE_SYMBOL = \"Y\";\n$54d317bdb58f6810$exports.TYPE_URL = \"U\";\n$54d317bdb58f6810$exports.TYPE_PREVIOUS_RESOLVED = \"Z\";\nclass $54d317bdb58f6810$var$Deferred {\n    promise;\n    resolve;\n    reject;\n    constructor(){\n        this.promise = new Promise((resolve, reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n$54d317bdb58f6810$exports.Deferred = $54d317bdb58f6810$var$Deferred;\nfunction $54d317bdb58f6810$var$createLineSplittingTransform() {\n    const decoder = new TextDecoder();\n    let leftover = \"\";\n    return new TransformStream({\n        transform (chunk, controller) {\n            const str = decoder.decode(chunk, {\n                stream: true\n            });\n            const parts = (leftover + str).split(\"\\n\");\n            // The last part might be a partial line, so keep it for the next chunk.\n            leftover = parts.pop() || \"\";\n            for (const part of parts)controller.enqueue(part);\n        },\n        flush (controller) {\n            // If there's any leftover data, enqueue it before closing.\n            if (leftover) controller.enqueue(leftover);\n        }\n    });\n}\n$54d317bdb58f6810$exports.createLineSplittingTransform = $54d317bdb58f6810$var$createLineSplittingTransform;\n\n\nfunction $d1b31b0f03c5a789$var$flatten(input) {\n    const { indices: indices } = this;\n    const existing = indices.get(input);\n    if (existing) return [\n        existing\n    ];\n    if (input === undefined) return $54d317bdb58f6810$exports.UNDEFINED;\n    if (input === null) return $54d317bdb58f6810$exports.NULL;\n    if (Number.isNaN(input)) return $54d317bdb58f6810$exports.NAN;\n    if (input === Number.POSITIVE_INFINITY) return $54d317bdb58f6810$exports.POSITIVE_INFINITY;\n    if (input === Number.NEGATIVE_INFINITY) return $54d317bdb58f6810$exports.NEGATIVE_INFINITY;\n    if (input === 0 && 1 / input < 0) return $54d317bdb58f6810$exports.NEGATIVE_ZERO;\n    const index = this.index++;\n    indices.set(input, index);\n    $d1b31b0f03c5a789$var$stringify.call(this, input, index);\n    return index;\n}\n$d1b31b0f03c5a789$exports.flatten = $d1b31b0f03c5a789$var$flatten;\nfunction $d1b31b0f03c5a789$var$stringify(input, index) {\n    const { deferred: deferred, plugins: plugins, postPlugins: postPlugins } = this;\n    const str = this.stringified;\n    const stack = [\n        [\n            input,\n            index\n        ]\n    ];\n    while(stack.length > 0){\n        const [input, index] = stack.pop();\n        const partsForObj = (obj)=>Object.keys(obj).map((k)=>`\"_${$d1b31b0f03c5a789$var$flatten.call(this, k)}\":${$d1b31b0f03c5a789$var$flatten.call(this, obj[k])}`).join(\",\");\n        let error = null;\n        switch(typeof input){\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                str[index] = JSON.stringify(input);\n                break;\n            case \"bigint\":\n                str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_BIGINT}\",\"${input}\"]`;\n                break;\n            case \"symbol\":\n                {\n                    const keyFor = Symbol.keyFor(input);\n                    if (!keyFor) error = new Error(\"Cannot encode symbol unless created with Symbol.for()\");\n                    else str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n                    break;\n                }\n            case \"object\":\n                {\n                    if (!input) {\n                        str[index] = `${$54d317bdb58f6810$exports.NULL}`;\n                        break;\n                    }\n                    const isArray = Array.isArray(input);\n                    let pluginHandled = false;\n                    if (!isArray && plugins) for (const plugin of plugins){\n                        const pluginResult = plugin(input);\n                        if (Array.isArray(pluginResult)) {\n                            pluginHandled = true;\n                            const [pluginIdentifier, ...rest] = pluginResult;\n                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                            if (rest.length > 0) str[index] += `,${rest.map((v)=>$d1b31b0f03c5a789$var$flatten.call(this, v)).join(\",\")}`;\n                            str[index] += \"]\";\n                            break;\n                        }\n                    }\n                    if (!pluginHandled) {\n                        let result = isArray ? \"[\" : \"{\";\n                        if (isArray) {\n                            for(let i = 0; i < input.length; i++)result += (i ? \",\" : \"\") + (i in input ? $d1b31b0f03c5a789$var$flatten.call(this, input[i]) : $54d317bdb58f6810$exports.HOLE);\n                            str[index] = `${result}]`;\n                        } else if (input instanceof Date) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_DATE}\",${input.getTime()}]`;\n                        else if (input instanceof URL) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_URL}\",${JSON.stringify(input.href)}]`;\n                        else if (input instanceof RegExp) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_REGEXP}\",${JSON.stringify(input.source)},${JSON.stringify(input.flags)}]`;\n                        else if (input instanceof Set) {\n                            if (input.size > 0) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_SET}\",${[\n                                ...input\n                            ].map((val)=>$d1b31b0f03c5a789$var$flatten.call(this, val)).join(\",\")}]`;\n                            else str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_SET}\"]`;\n                        } else if (input instanceof Map) {\n                            if (input.size > 0) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_MAP}\",${[\n                                ...input\n                            ].flatMap(([k, v])=>[\n                                    $d1b31b0f03c5a789$var$flatten.call(this, k),\n                                    $d1b31b0f03c5a789$var$flatten.call(this, v)\n                                ]).join(\",\")}]`;\n                            else str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_MAP}\"]`;\n                        } else if (input instanceof Promise) {\n                            str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_PROMISE}\",${index}]`;\n                            deferred[index] = input;\n                        } else if (input instanceof Error) {\n                            str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_ERROR}\",${JSON.stringify(input.message)}`;\n                            if (input.name !== \"Error\") str[index] += `,${JSON.stringify(input.name)}`;\n                            str[index] += \"]\";\n                        } else if (Object.getPrototypeOf(input) === null) str[index] = `[\"${$54d317bdb58f6810$exports.TYPE_NULL_OBJECT}\",{${partsForObj(input)}}]`;\n                        else if ($d1b31b0f03c5a789$var$isPlainObject(input)) str[index] = `{${partsForObj(input)}}`;\n                        else error = new Error(\"Cannot encode object with prototype\");\n                    }\n                    break;\n                }\n            default:\n                {\n                    const isArray = Array.isArray(input);\n                    let pluginHandled = false;\n                    if (!isArray && plugins) for (const plugin of plugins){\n                        const pluginResult = plugin(input);\n                        if (Array.isArray(pluginResult)) {\n                            pluginHandled = true;\n                            const [pluginIdentifier, ...rest] = pluginResult;\n                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                            if (rest.length > 0) str[index] += `,${rest.map((v)=>$d1b31b0f03c5a789$var$flatten.call(this, v)).join(\",\")}`;\n                            str[index] += \"]\";\n                            break;\n                        }\n                    }\n                    if (!pluginHandled) error = new Error(\"Cannot encode function or unexpected type\");\n                }\n        }\n        if (error) {\n            let pluginHandled = false;\n            if (postPlugins) for (const plugin of postPlugins){\n                const pluginResult = plugin(input);\n                if (Array.isArray(pluginResult)) {\n                    pluginHandled = true;\n                    const [pluginIdentifier, ...rest] = pluginResult;\n                    str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                    if (rest.length > 0) str[index] += `,${rest.map((v)=>$d1b31b0f03c5a789$var$flatten.call(this, v)).join(\",\")}`;\n                    str[index] += \"]\";\n                    break;\n                }\n            }\n            if (!pluginHandled) throw error;\n        }\n    }\n}\nconst $d1b31b0f03c5a789$var$objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction $d1b31b0f03c5a789$var$isPlainObject(thing) {\n    const proto = Object.getPrototypeOf(thing);\n    return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === $d1b31b0f03c5a789$var$objectProtoNames;\n}\n\n\nvar $0eb00b0aa785b1a2$exports = {};\n\"use strict\";\nObject.defineProperty($0eb00b0aa785b1a2$exports, \"__esModule\", {\n    value: true\n});\n$0eb00b0aa785b1a2$exports.unflatten = void 0;\n\nconst $0eb00b0aa785b1a2$var$globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : undefined;\nfunction $0eb00b0aa785b1a2$var$unflatten(parsed) {\n    const { hydrated: hydrated, values: values } = this;\n    if (typeof parsed === \"number\") return $0eb00b0aa785b1a2$var$hydrate.call(this, parsed);\n    if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n    const startIndex = values.length;\n    for (const value of parsed)values.push(value);\n    hydrated.length = values.length;\n    return $0eb00b0aa785b1a2$var$hydrate.call(this, startIndex);\n}\n$0eb00b0aa785b1a2$exports.unflatten = $0eb00b0aa785b1a2$var$unflatten;\nfunction $0eb00b0aa785b1a2$var$hydrate(index) {\n    const { hydrated: hydrated, values: values, deferred: deferred, plugins: plugins } = this;\n    let result;\n    const stack = [\n        [\n            index,\n            (v)=>{\n                result = v;\n            }\n        ]\n    ];\n    let postRun = [];\n    while(stack.length > 0){\n        const [index, set] = stack.pop();\n        switch(index){\n            case $54d317bdb58f6810$exports.UNDEFINED:\n                set(undefined);\n                continue;\n            case $54d317bdb58f6810$exports.NULL:\n                set(null);\n                continue;\n            case $54d317bdb58f6810$exports.NAN:\n                set(NaN);\n                continue;\n            case $54d317bdb58f6810$exports.POSITIVE_INFINITY:\n                set(Infinity);\n                continue;\n            case $54d317bdb58f6810$exports.NEGATIVE_INFINITY:\n                set(-Infinity);\n                continue;\n            case $54d317bdb58f6810$exports.NEGATIVE_ZERO:\n                set(-0);\n                continue;\n        }\n        if (hydrated[index]) {\n            set(hydrated[index]);\n            continue;\n        }\n        const value = values[index];\n        if (!value || typeof value !== \"object\") {\n            hydrated[index] = value;\n            set(value);\n            continue;\n        }\n        if (Array.isArray(value)) {\n            if (typeof value[0] === \"string\") {\n                const [type, b, c] = value;\n                switch(type){\n                    case $54d317bdb58f6810$exports.TYPE_DATE:\n                        set(hydrated[index] = new Date(b));\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_URL:\n                        set(hydrated[index] = new URL(b));\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_BIGINT:\n                        set(hydrated[index] = BigInt(b));\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_REGEXP:\n                        set(hydrated[index] = new RegExp(b, c));\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_SYMBOL:\n                        set(hydrated[index] = Symbol.for(b));\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_SET:\n                        const newSet = new Set();\n                        hydrated[index] = newSet;\n                        for(let i = 1; i < value.length; i++)stack.push([\n                            value[i],\n                            (v)=>{\n                                newSet.add(v);\n                            }\n                        ]);\n                        set(newSet);\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_MAP:\n                        const map = new Map();\n                        hydrated[index] = map;\n                        for(let i = 1; i < value.length; i += 2){\n                            const r = [];\n                            stack.push([\n                                value[i + 1],\n                                (v)=>{\n                                    r[1] = v;\n                                }\n                            ]);\n                            stack.push([\n                                value[i],\n                                (k)=>{\n                                    r[0] = k;\n                                }\n                            ]);\n                            postRun.push(()=>{\n                                map.set(r[0], r[1]);\n                            });\n                        }\n                        set(map);\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_NULL_OBJECT:\n                        const obj = Object.create(null);\n                        hydrated[index] = obj;\n                        for (const key of Object.keys(b).reverse()){\n                            const r = [];\n                            stack.push([\n                                b[key],\n                                (v)=>{\n                                    r[1] = v;\n                                }\n                            ]);\n                            stack.push([\n                                Number(key.slice(1)),\n                                (k)=>{\n                                    r[0] = k;\n                                }\n                            ]);\n                            postRun.push(()=>{\n                                obj[r[0]] = r[1];\n                            });\n                        }\n                        set(obj);\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_PROMISE:\n                        if (hydrated[b]) set(hydrated[index] = hydrated[b]);\n                        else {\n                            const d = new $54d317bdb58f6810$exports.Deferred();\n                            deferred[b] = d;\n                            set(hydrated[index] = d.promise);\n                        }\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_ERROR:\n                        const [, message, errorType] = value;\n                        let error = errorType && $0eb00b0aa785b1a2$var$globalObj && $0eb00b0aa785b1a2$var$globalObj[errorType] ? new $0eb00b0aa785b1a2$var$globalObj[errorType](message) : new Error(message);\n                        hydrated[index] = error;\n                        set(error);\n                        continue;\n                    case $54d317bdb58f6810$exports.TYPE_PREVIOUS_RESOLVED:\n                        set(hydrated[index] = hydrated[b]);\n                        continue;\n                    default:\n                        // Run plugins at the end so we have a chance to resolve primitives\n                        // without running into a loop\n                        if (Array.isArray(plugins)) {\n                            const r = [];\n                            const vals = value.slice(1);\n                            for(let i = 0; i < vals.length; i++){\n                                const v = vals[i];\n                                stack.push([\n                                    v,\n                                    (v)=>{\n                                        r[i] = v;\n                                    }\n                                ]);\n                            }\n                            postRun.push(()=>{\n                                for (const plugin of plugins){\n                                    const result = plugin(value[0], ...r);\n                                    if (result) {\n                                        set(hydrated[index] = result.value);\n                                        return;\n                                    }\n                                }\n                                throw new SyntaxError();\n                            });\n                            continue;\n                        }\n                        throw new SyntaxError();\n                }\n            } else {\n                const array = [];\n                hydrated[index] = array;\n                for(let i = 0; i < value.length; i++){\n                    const n = value[i];\n                    if (n !== $54d317bdb58f6810$exports.HOLE) stack.push([\n                        n,\n                        (v)=>{\n                            array[i] = v;\n                        }\n                    ]);\n                }\n                set(array);\n                continue;\n            }\n        } else {\n            const object = {};\n            hydrated[index] = object;\n            for (const key of Object.keys(value).reverse()){\n                const r = [];\n                stack.push([\n                    value[key],\n                    (v)=>{\n                        r[1] = v;\n                    }\n                ]);\n                stack.push([\n                    Number(key.slice(1)),\n                    (k)=>{\n                        r[0] = k;\n                    }\n                ]);\n                postRun.push(()=>{\n                    object[r[0]] = r[1];\n                });\n            }\n            set(object);\n            continue;\n        }\n    }\n    while(postRun.length > 0)postRun.pop()();\n    return result;\n}\n\n\n\nasync function $38eecd17912935e8$var$decode(readable, options) {\n    const { plugins: plugins } = options ?? {};\n    const done = new $54d317bdb58f6810$exports.Deferred();\n    const reader = readable.pipeThrough((0, $54d317bdb58f6810$exports.createLineSplittingTransform)()).getReader();\n    const decoder = {\n        values: [],\n        hydrated: [],\n        deferred: {},\n        plugins: plugins\n    };\n    const decoded = await $38eecd17912935e8$var$decodeInitial.call(decoder, reader);\n    let donePromise = done.promise;\n    if (decoded.done) done.resolve();\n    else donePromise = $38eecd17912935e8$var$decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason)=>{\n        for (const deferred of Object.values(decoder.deferred))deferred.reject(reason);\n        done.reject(reason);\n    });\n    return {\n        done: donePromise.then(()=>reader.closed),\n        value: decoded.value\n    };\n}\n$38eecd17912935e8$exports.decode = $38eecd17912935e8$var$decode;\nasync function $38eecd17912935e8$var$decodeInitial(reader) {\n    const read = await reader.read();\n    if (!read.value) throw new SyntaxError();\n    let line;\n    try {\n        line = JSON.parse(read.value);\n    } catch (reason) {\n        throw new SyntaxError();\n    }\n    return {\n        done: read.done,\n        value: $0eb00b0aa785b1a2$exports.unflatten.call(this, line)\n    };\n}\nasync function $38eecd17912935e8$var$decodeDeferred(reader) {\n    let read = await reader.read();\n    while(!read.done){\n        if (!read.value) continue;\n        const line = read.value;\n        switch(line[0]){\n            case $54d317bdb58f6810$exports.TYPE_PROMISE:\n                {\n                    const colonIndex = line.indexOf(\":\");\n                    const deferredId = Number(line.slice(1, colonIndex));\n                    const deferred = this.deferred[deferredId];\n                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                    const lineData = line.slice(colonIndex + 1);\n                    let jsonLine;\n                    try {\n                        jsonLine = JSON.parse(lineData);\n                    } catch (reason) {\n                        throw new SyntaxError();\n                    }\n                    const value = $0eb00b0aa785b1a2$exports.unflatten.call(this, jsonLine);\n                    deferred.resolve(value);\n                    break;\n                }\n            case $54d317bdb58f6810$exports.TYPE_ERROR:\n                {\n                    const colonIndex = line.indexOf(\":\");\n                    const deferredId = Number(line.slice(1, colonIndex));\n                    const deferred = this.deferred[deferredId];\n                    if (!deferred) throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                    const lineData = line.slice(colonIndex + 1);\n                    let jsonLine;\n                    try {\n                        jsonLine = JSON.parse(lineData);\n                    } catch (reason) {\n                        throw new SyntaxError();\n                    }\n                    const value = $0eb00b0aa785b1a2$exports.unflatten.call(this, jsonLine);\n                    deferred.reject(value);\n                    break;\n                }\n            default:\n                throw new SyntaxError();\n        }\n        read = await reader.read();\n    }\n}\nfunction $38eecd17912935e8$var$encode(input, options) {\n    const { plugins: plugins, postPlugins: postPlugins, signal: signal } = options ?? {};\n    const encoder = {\n        deferred: {},\n        index: 0,\n        indices: new Map(),\n        stringified: [],\n        plugins: plugins,\n        postPlugins: postPlugins,\n        signal: signal\n    };\n    const textEncoder = new TextEncoder();\n    let lastSentIndex = 0;\n    const readable = new ReadableStream({\n        async start (controller) {\n            const id = $d1b31b0f03c5a789$exports.flatten.call(encoder, input);\n            if (Array.isArray(id)) throw new Error(\"This should never happen\");\n            if (id < 0) controller.enqueue(textEncoder.encode(`${id}\\n`));\n            else {\n                controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(\",\")}]\\n`));\n                lastSentIndex = encoder.stringified.length - 1;\n            }\n            const seenPromises = new WeakSet();\n            while(Object.keys(encoder.deferred).length > 0){\n                for (const [deferredId, deferred] of Object.entries(encoder.deferred)){\n                    if (seenPromises.has(deferred)) continue;\n                    seenPromises.add(encoder.deferred[Number(deferredId)] = $38eecd17912935e8$var$raceSignal(deferred, encoder.signal).then((resolved)=>{\n                        const id = $d1b31b0f03c5a789$exports.flatten.call(encoder, resolved);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_PROMISE}${deferredId}:[[\"${$54d317bdb58f6810$exports.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_PROMISE}${deferredId}:${id}\\n`));\n                        else {\n                            const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                            controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_PROMISE}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    }, (reason)=>{\n                        if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) reason = new Error(\"An unknown error occurred\");\n                        const id = $d1b31b0f03c5a789$exports.flatten.call(encoder, reason);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_ERROR}${deferredId}:[[\"${$54d317bdb58f6810$exports.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        } else if (id < 0) controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_ERROR}${deferredId}:${id}\\n`));\n                        else {\n                            const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                            controller.enqueue(textEncoder.encode(`${$54d317bdb58f6810$exports.TYPE_ERROR}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    }).finally(()=>{\n                        delete encoder.deferred[Number(deferredId)];\n                    }));\n                }\n                await Promise.race(Object.values(encoder.deferred));\n            }\n            await Promise.all(Object.values(encoder.deferred));\n            controller.close();\n        }\n    });\n    return readable;\n}\n$38eecd17912935e8$exports.encode = $38eecd17912935e8$var$encode;\nfunction $38eecd17912935e8$var$raceSignal(promise, signal) {\n    if (!signal) return promise;\n    if (signal.aborted) return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n    const abort = new Promise((resolve, reject)=>{\n        signal.addEventListener(\"abort\", (event)=>{\n            reject(signal.reason || new Error(\"Signal was aborted.\"));\n        });\n        promise.then(resolve).catch(reject);\n    });\n    abort.catch(()=>{});\n    return Promise.race([\n        abort,\n        promise\n    ]);\n}\n\n\nvar $70f23939d76c0480$exports = {};\n\"use strict\";\nObject.defineProperty($70f23939d76c0480$exports, \"__esModule\", {\n    value: true\n});\n$70f23939d76c0480$exports.parse = $70f23939d76c0480$var$parse;\n$70f23939d76c0480$exports.serialize = $70f23939d76c0480$var$serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */ const $70f23939d76c0480$var$cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */ const $70f23939d76c0480$var$cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */ const $70f23939d76c0480$var$domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */ const $70f23939d76c0480$var$pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst $70f23939d76c0480$var$__toString = Object.prototype.toString;\nconst $70f23939d76c0480$var$NullObject = /* @__PURE__ */ (()=>{\n    const C = function() {};\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */ function $70f23939d76c0480$var$parse(str, options) {\n    const obj = new $70f23939d76c0480$var$NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2) return obj;\n    const dec = options?.decode || $70f23939d76c0480$var$decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = $70f23939d76c0480$var$startIndex(str, index, eqIdx);\n        const keyEndIdx = $70f23939d76c0480$var$endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = $70f23939d76c0480$var$startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = $70f23939d76c0480$var$endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    }while (index < len);\n    return obj;\n}\nfunction $70f23939d76c0480$var$startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */  && code !== 0x09 /* \\t */ ) return index;\n    }while (++index < max);\n    return max;\n}\nfunction $70f23939d76c0480$var$endIndex(str, index, min) {\n    while(index > min){\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */  && code !== 0x09 /* \\t */ ) return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */ function $70f23939d76c0480$var$serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!$70f23939d76c0480$var$cookieNameRegExp.test(name)) throw new TypeError(`argument name is invalid: ${name}`);\n    const value = enc(val);\n    if (!$70f23939d76c0480$var$cookieValueRegExp.test(value)) throw new TypeError(`argument val is invalid: ${val}`);\n    let str = name + \"=\" + value;\n    if (!options) return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!$70f23939d76c0480$var$domainValueRegExp.test(options.domain)) throw new TypeError(`option domain is invalid: ${options.domain}`);\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!$70f23939d76c0480$var$pathValueRegExp.test(options.path)) throw new TypeError(`option path is invalid: ${options.path}`);\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!$70f23939d76c0480$var$isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) throw new TypeError(`option expires is invalid: ${options.expires}`);\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) str += \"; HttpOnly\";\n    if (options.secure) str += \"; Secure\";\n    if (options.partitioned) str += \"; Partitioned\";\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\" ? options.priority.toLowerCase() : undefined;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\" ? options.sameSite.toLowerCase() : options.sameSite;\n        switch(sameSite){\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */ function $70f23939d76c0480$var$decode(str) {\n    if (str.indexOf(\"%\") === -1) return str;\n    try {\n        return decodeURIComponent(str);\n    } catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */ function $70f23939d76c0480$var$isDate(val) {\n    return $70f23939d76c0480$var$__toString.call(val) === \"[object Date]\";\n}\n\n\nvar $5638fb5bd871bb7d$exports = {};\n\"use strict\";\nvar $5638fb5bd871bb7d$var$defaultParseOptions = {\n    decodeValues: true,\n    map: false,\n    silent: false\n};\nfunction $5638fb5bd871bb7d$var$isNonEmptyString(str) {\n    return typeof str === \"string\" && !!str.trim();\n}\nfunction $5638fb5bd871bb7d$var$parseString(setCookieValue, options) {\n    var parts = setCookieValue.split(\";\").filter($5638fb5bd871bb7d$var$isNonEmptyString);\n    var nameValuePairStr = parts.shift();\n    var parsed = $5638fb5bd871bb7d$var$parseNameValuePair(nameValuePairStr);\n    var name = parsed.name;\n    var value = parsed.value;\n    options = options ? Object.assign({}, $5638fb5bd871bb7d$var$defaultParseOptions, options) : $5638fb5bd871bb7d$var$defaultParseOptions;\n    try {\n        value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n    } catch (e) {\n        console.error(\"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\", e);\n    }\n    var cookie = {\n        name: name,\n        value: value\n    };\n    parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value = sides.join(\"=\");\n        if (key === \"expires\") cookie.expires = new Date(value);\n        else if (key === \"max-age\") cookie.maxAge = parseInt(value, 10);\n        else if (key === \"secure\") cookie.secure = true;\n        else if (key === \"httponly\") cookie.httpOnly = true;\n        else if (key === \"samesite\") cookie.sameSite = value;\n        else if (key === \"partitioned\") cookie.partitioned = true;\n        else cookie[key] = value;\n    });\n    return cookie;\n}\nfunction $5638fb5bd871bb7d$var$parseNameValuePair(nameValuePairStr) {\n    // Parses name-value-pair according to rfc6265bis draft\n    var name = \"\";\n    var value = \"\";\n    var nameValueArr = nameValuePairStr.split(\"=\");\n    if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n    } else value = nameValuePairStr;\n    return {\n        name: name,\n        value: value\n    };\n}\nfunction $5638fb5bd871bb7d$var$parse(input, options) {\n    options = options ? Object.assign({}, $5638fb5bd871bb7d$var$defaultParseOptions, options) : $5638fb5bd871bb7d$var$defaultParseOptions;\n    if (!input) {\n        if (!options.map) return [];\n        else return {};\n    }\n    if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") // for fetch responses - they combine headers of the same type in the headers array,\n        // but getSetCookie returns an uncombined array\n        input = input.headers.getSetCookie();\n        else if (input.headers[\"set-cookie\"]) // fast-path for node.js (which automatically normalizes header names to lower-case\n        input = input.headers[\"set-cookie\"];\n        else {\n            // slow-path for other environments - see #25\n            var sch = input.headers[Object.keys(input.headers).find(function(key) {\n                return key.toLowerCase() === \"set-cookie\";\n            })];\n            // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n            if (!sch && input.headers.cookie && !options.silent) console.warn(\"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\");\n            input = sch;\n        }\n    }\n    if (!Array.isArray(input)) input = [\n        input\n    ];\n    if (!options.map) return input.filter($5638fb5bd871bb7d$var$isNonEmptyString).map(function(str) {\n        return $5638fb5bd871bb7d$var$parseString(str, options);\n    });\n    else {\n        var cookies = {};\n        return input.filter($5638fb5bd871bb7d$var$isNonEmptyString).reduce(function(cookies, str) {\n            var cookie = $5638fb5bd871bb7d$var$parseString(str, options);\n            cookies[cookie.name] = cookie;\n            return cookies;\n        }, cookies);\n    }\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function $5638fb5bd871bb7d$var$splitCookiesString(cookiesString) {\n    if (Array.isArray(cookiesString)) return cookiesString;\n    if (typeof cookiesString !== \"string\") return [];\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos)))pos += 1;\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar())pos += 1;\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else // in param ',' or param separator ';',\n                // we continue from that comma\n                pos = lastComma + 1;\n            } else pos += 1;\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n    return cookiesStrings;\n}\n$5638fb5bd871bb7d$exports = $5638fb5bd871bb7d$var$parse;\n$5638fb5bd871bb7d$exports.parse = $5638fb5bd871bb7d$var$parse;\n$5638fb5bd871bb7d$exports.parseString = $5638fb5bd871bb7d$var$parseString;\n$5638fb5bd871bb7d$exports.splitCookiesString = $5638fb5bd871bb7d$var$splitCookiesString;\n\n\nvar $c5b33ec0dccca72b$import_meta = Object.assign(Object.create(null), {\n    url: \"file:///node_modules/react-router/dist/development/chunk-HA7DTUK3.mjs\"\n});\nvar $c5b33ec0dccca72b$export$e19cd5f9376f8cee = /* @__PURE__ */ ((Action2)=>{\n    Action2[\"Pop\"] = \"POP\";\n    Action2[\"Push\"] = \"PUSH\";\n    Action2[\"Replace\"] = \"REPLACE\";\n    return Action2;\n})($c5b33ec0dccca72b$export$e19cd5f9376f8cee || {});\nvar $c5b33ec0dccca72b$var$PopStateEventType = \"popstate\";\nfunction $c5b33ec0dccca72b$var$createMemoryHistory(options = {}) {\n    let { initialEntries: initialEntries = [\n        \"/\"\n    ], initialIndex: initialIndex, v5Compat: v5Compat = false } = options;\n    let entries;\n    entries = initialEntries.map((entry, index2)=>createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index2 === 0 ? \"default\" : void 0));\n    let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n    let action = \"POP\" /* Pop */ ;\n    let listener = null;\n    function clampIndex(n) {\n        return Math.min(Math.max(n, 0), entries.length - 1);\n    }\n    function getCurrentLocation() {\n        return entries[index];\n    }\n    function createMemoryLocation(to, state = null, key) {\n        let location = $c5b33ec0dccca72b$var$createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n        $c5b33ec0dccca72b$var$warning(location.pathname.charAt(0) === \"/\", `relative pathnames are not supported in memory history: ${JSON.stringify(to)}`);\n        return location;\n    }\n    function createHref2(to) {\n        return typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to);\n    }\n    let history = {\n        get index () {\n            return index;\n        },\n        get action () {\n            return action;\n        },\n        get location () {\n            return getCurrentLocation();\n        },\n        createHref: createHref2,\n        createURL (to) {\n            return new URL(createHref2(to), \"http://localhost\");\n        },\n        encodeLocation (to) {\n            let path = typeof to === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(to) : to;\n            return {\n                pathname: path.pathname || \"\",\n                search: path.search || \"\",\n                hash: path.hash || \"\"\n            };\n        },\n        push (to, state) {\n            action = \"PUSH\" /* Push */ ;\n            let nextLocation = createMemoryLocation(to, state);\n            index += 1;\n            entries.splice(index, entries.length, nextLocation);\n            if (v5Compat && listener) listener({\n                action: action,\n                location: nextLocation,\n                delta: 1\n            });\n        },\n        replace (to, state) {\n            action = \"REPLACE\" /* Replace */ ;\n            let nextLocation = createMemoryLocation(to, state);\n            entries[index] = nextLocation;\n            if (v5Compat && listener) listener({\n                action: action,\n                location: nextLocation,\n                delta: 0\n            });\n        },\n        go (delta) {\n            action = \"POP\" /* Pop */ ;\n            let nextIndex = clampIndex(index + delta);\n            let nextLocation = entries[nextIndex];\n            index = nextIndex;\n            if (listener) listener({\n                action: action,\n                location: nextLocation,\n                delta: delta\n            });\n        },\n        listen (fn) {\n            listener = fn;\n            return ()=>{\n                listener = null;\n            };\n        }\n    };\n    return history;\n}\nfunction $c5b33ec0dccca72b$export$719fc203c4e16dee(options = {}) {\n    function createBrowserLocation(window2, globalHistory) {\n        let { pathname: pathname, search: search, hash: hash } = window2.location;\n        return $c5b33ec0dccca72b$var$createLocation(\"\", {\n            pathname: pathname,\n            search: search,\n            hash: hash\n        }, // state defaults to `null` because `window.history.state` does\n        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n    }\n    function createBrowserHref(window2, to) {\n        return typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to);\n    }\n    return $c5b33ec0dccca72b$var$getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction $c5b33ec0dccca72b$var$createHashHistory(options = {}) {\n    function createHashLocation(window2, globalHistory) {\n        let { pathname: pathname = \"/\", search: search = \"\", hash: hash = \"\" } = $c5b33ec0dccca72b$export$8ccf933b0513f8d0(window2.location.hash.substring(1));\n        if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) pathname = \"/\" + pathname;\n        return $c5b33ec0dccca72b$var$createLocation(\"\", {\n            pathname: pathname,\n            search: search,\n            hash: hash\n        }, // state defaults to `null` because `window.history.state` does\n        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n    }\n    function createHashHref(window2, to) {\n        let base = window2.document.querySelector(\"base\");\n        let href2 = \"\";\n        if (base && base.getAttribute(\"href\")) {\n            let url = window2.location.href;\n            let hashIndex = url.indexOf(\"#\");\n            href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\n        }\n        return href2 + \"#\" + (typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to));\n    }\n    function validateHashLocation(location, to) {\n        $c5b33ec0dccca72b$var$warning(location.pathname.charAt(0) === \"/\", `relative pathnames are not supported in hash history.push(${JSON.stringify(to)})`);\n    }\n    return $c5b33ec0dccca72b$var$getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction $c5b33ec0dccca72b$export$f5708dca728d7177(value, message) {\n    if (value === false || value === null || typeof value === \"undefined\") throw new Error(message);\n}\nfunction $c5b33ec0dccca72b$var$warning(cond, message) {\n    if (!cond) {\n        if (typeof console !== \"undefined\") console.warn(message);\n        try {\n            throw new Error(message);\n        } catch (e) {}\n    }\n}\nfunction $c5b33ec0dccca72b$var$createKey() {\n    return Math.random().toString(36).substring(2, 10);\n}\nfunction $c5b33ec0dccca72b$var$getHistoryState(location, index) {\n    return {\n        usr: location.state,\n        key: location.key,\n        idx: index\n    };\n}\nfunction $c5b33ec0dccca72b$var$createLocation(current, to, state = null, key) {\n    let location = {\n        pathname: typeof current === \"string\" ? current : current.pathname,\n        search: \"\",\n        hash: \"\",\n        ...typeof to === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(to) : to,\n        state: state,\n        // TODO: This could be cleaned up.  push/replace should probably just take\n        // full Locations now and avoid the need to run through this flow at all\n        // But that's a pretty big refactor to the current test suite so going to\n        // keep as is for the time being and just let any incoming keys take precedence\n        key: to && to.key || key || $c5b33ec0dccca72b$var$createKey()\n    };\n    return location;\n}\nfunction $c5b33ec0dccca72b$export$fe53371bee54353d({ pathname: pathname = \"/\", search: search = \"\", hash: hash = \"\" }) {\n    if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n    if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n    return pathname;\n}\nfunction $c5b33ec0dccca72b$export$8ccf933b0513f8d0(path) {\n    let parsedPath = {};\n    if (path) {\n        let hashIndex = path.indexOf(\"#\");\n        if (hashIndex >= 0) {\n            parsedPath.hash = path.substring(hashIndex);\n            path = path.substring(0, hashIndex);\n        }\n        let searchIndex = path.indexOf(\"?\");\n        if (searchIndex >= 0) {\n            parsedPath.search = path.substring(searchIndex);\n            path = path.substring(0, searchIndex);\n        }\n        if (path) parsedPath.pathname = path;\n    }\n    return parsedPath;\n}\nfunction $c5b33ec0dccca72b$var$getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n    let { window: window2 = document.defaultView, v5Compat: v5Compat = false } = options;\n    let globalHistory = window2.history;\n    let action = \"POP\" /* Pop */ ;\n    let listener = null;\n    let index = getIndex();\n    if (index == null) {\n        index = 0;\n        globalHistory.replaceState({\n            ...globalHistory.state,\n            idx: index\n        }, \"\");\n    }\n    function getIndex() {\n        let state = globalHistory.state || {\n            idx: null\n        };\n        return state.idx;\n    }\n    function handlePop() {\n        action = \"POP\" /* Pop */ ;\n        let nextIndex = getIndex();\n        let delta = nextIndex == null ? null : nextIndex - index;\n        index = nextIndex;\n        if (listener) listener({\n            action: action,\n            location: history.location,\n            delta: delta\n        });\n    }\n    function push(to, state) {\n        action = \"PUSH\" /* Push */ ;\n        let location = $c5b33ec0dccca72b$var$createLocation(history.location, to, state);\n        if (validateLocation) validateLocation(location, to);\n        index = getIndex() + 1;\n        let historyState = $c5b33ec0dccca72b$var$getHistoryState(location, index);\n        let url = history.createHref(location);\n        try {\n            globalHistory.pushState(historyState, \"\", url);\n        } catch (error) {\n            if (error instanceof DOMException && error.name === \"DataCloneError\") throw error;\n            window2.location.assign(url);\n        }\n        if (v5Compat && listener) listener({\n            action: action,\n            location: history.location,\n            delta: 1\n        });\n    }\n    function replace2(to, state) {\n        action = \"REPLACE\" /* Replace */ ;\n        let location = $c5b33ec0dccca72b$var$createLocation(history.location, to, state);\n        if (validateLocation) validateLocation(location, to);\n        index = getIndex();\n        let historyState = $c5b33ec0dccca72b$var$getHistoryState(location, index);\n        let url = history.createHref(location);\n        globalHistory.replaceState(historyState, \"\", url);\n        if (v5Compat && listener) listener({\n            action: action,\n            location: history.location,\n            delta: 0\n        });\n    }\n    function createURL(to) {\n        let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n        let href2 = typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to);\n        href2 = href2.replace(/ $/, \"%20\");\n        $c5b33ec0dccca72b$export$f5708dca728d7177(base, `No window.location.(origin|href) available to create URL for href: ${href2}`);\n        return new URL(href2, base);\n    }\n    let history = {\n        get action () {\n            return action;\n        },\n        get location () {\n            return getLocation(window2, globalHistory);\n        },\n        listen (fn) {\n            if (listener) throw new Error(\"A history only accepts one active listener\");\n            window2.addEventListener($c5b33ec0dccca72b$var$PopStateEventType, handlePop);\n            listener = fn;\n            return ()=>{\n                window2.removeEventListener($c5b33ec0dccca72b$var$PopStateEventType, handlePop);\n                listener = null;\n            };\n        },\n        createHref (to) {\n            return createHref2(window2, to);\n        },\n        createURL: createURL,\n        encodeLocation (to) {\n            let url = createURL(to);\n            return {\n                pathname: url.pathname,\n                search: url.search,\n                hash: url.hash\n            };\n        },\n        push: push,\n        replace: replace2,\n        go (n) {\n            return globalHistory.go(n);\n        }\n    };\n    return history;\n}\n// lib/router/utils.ts\nvar $c5b33ec0dccca72b$var$immutableRouteKeys = /* @__PURE__ */ new Set([\n    \"lazy\",\n    \"caseSensitive\",\n    \"path\",\n    \"id\",\n    \"index\",\n    \"children\"\n]);\nfunction $c5b33ec0dccca72b$var$isIndexRoute(route) {\n    return route.index === true;\n}\nfunction $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n    return routes.map((route, index)=>{\n        let treePath = [\n            ...parentPath,\n            String(index)\n        ];\n        let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n        $c5b33ec0dccca72b$export$f5708dca728d7177(route.index !== true || !route.children, `Cannot specify children on an index route`);\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!manifest[id], `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`);\n        if ($c5b33ec0dccca72b$var$isIndexRoute(route)) {\n            let indexRoute = {\n                ...route,\n                ...mapRouteProperties2(route),\n                id: id\n            };\n            manifest[id] = indexRoute;\n            return indexRoute;\n        } else {\n            let pathOrLayoutRoute = {\n                ...route,\n                ...mapRouteProperties2(route),\n                id: id,\n                children: void 0\n            };\n            manifest[id] = pathOrLayoutRoute;\n            if (route.children) pathOrLayoutRoute.children = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);\n            return pathOrLayoutRoute;\n        }\n    });\n}\nfunction $c5b33ec0dccca72b$export$2708184779ceb39d(routes, locationArg, basename = \"/\") {\n    return $c5b33ec0dccca72b$var$matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction $c5b33ec0dccca72b$var$matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n    let location = typeof locationArg === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(locationArg) : locationArg;\n    let pathname = $c5b33ec0dccca72b$var$stripBasename(location.pathname || \"/\", basename);\n    if (pathname == null) return null;\n    let branches = $c5b33ec0dccca72b$var$flattenRoutes(routes);\n    $c5b33ec0dccca72b$var$rankRouteBranches(branches);\n    let matches = null;\n    for(let i = 0; matches == null && i < branches.length; ++i){\n        let decoded = $c5b33ec0dccca72b$var$decodePath(pathname);\n        matches = $c5b33ec0dccca72b$var$matchRouteBranch(branches[i], decoded, allowPartial);\n    }\n    return matches;\n}\nfunction $c5b33ec0dccca72b$var$convertRouteMatchToUiMatch(match, loaderData) {\n    let { route: route, pathname: pathname, params: params } = match;\n    return {\n        id: route.id,\n        pathname: pathname,\n        params: params,\n        data: loaderData[route.id],\n        handle: route.handle\n    };\n}\nfunction $c5b33ec0dccca72b$var$flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n    let flattenRoute = (route, index, relativePath)=>{\n        let meta = {\n            relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n            caseSensitive: route.caseSensitive === true,\n            childrenIndex: index,\n            route: route\n        };\n        if (meta.relativePath.startsWith(\"/\")) {\n            $c5b33ec0dccca72b$export$f5708dca728d7177(meta.relativePath.startsWith(parentPath), `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);\n            meta.relativePath = meta.relativePath.slice(parentPath.length);\n        }\n        let path = $c5b33ec0dccca72b$var$joinPaths([\n            parentPath,\n            meta.relativePath\n        ]);\n        let routesMeta = parentsMeta.concat(meta);\n        if (route.children && route.children.length > 0) {\n            $c5b33ec0dccca72b$export$f5708dca728d7177(// Our types know better, but runtime JS may not!\n            // @ts-expect-error\n            route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`);\n            $c5b33ec0dccca72b$var$flattenRoutes(route.children, branches, routesMeta, path);\n        }\n        if (route.path == null && !route.index) return;\n        branches.push({\n            path: path,\n            score: $c5b33ec0dccca72b$var$computeScore(path, route.index),\n            routesMeta: routesMeta\n        });\n    };\n    routes.forEach((route, index)=>{\n        if (route.path === \"\" || !route.path?.includes(\"?\")) flattenRoute(route, index);\n        else for (let exploded of $c5b33ec0dccca72b$var$explodeOptionalSegments(route.path))flattenRoute(route, index, exploded);\n    });\n    return branches;\n}\nfunction $c5b33ec0dccca72b$var$explodeOptionalSegments(path) {\n    let segments = path.split(\"/\");\n    if (segments.length === 0) return [];\n    let [first, ...rest] = segments;\n    let isOptional = first.endsWith(\"?\");\n    let required = first.replace(/\\?$/, \"\");\n    if (rest.length === 0) return isOptional ? [\n        required,\n        \"\"\n    ] : [\n        required\n    ];\n    let restExploded = $c5b33ec0dccca72b$var$explodeOptionalSegments(rest.join(\"/\"));\n    let result = [];\n    result.push(...restExploded.map((subpath)=>subpath === \"\" ? required : [\n            required,\n            subpath\n        ].join(\"/\")));\n    if (isOptional) result.push(...restExploded);\n    return result.map((exploded)=>path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction $c5b33ec0dccca72b$var$rankRouteBranches(branches) {\n    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score : $c5b33ec0dccca72b$var$compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex), b.routesMeta.map((meta)=>meta.childrenIndex)));\n}\nvar $c5b33ec0dccca72b$var$paramRe = /^:[\\w-]+$/;\nvar $c5b33ec0dccca72b$var$dynamicSegmentValue = 3;\nvar $c5b33ec0dccca72b$var$indexRouteValue = 2;\nvar $c5b33ec0dccca72b$var$emptySegmentValue = 1;\nvar $c5b33ec0dccca72b$var$staticSegmentValue = 10;\nvar $c5b33ec0dccca72b$var$splatPenalty = -2;\nvar $c5b33ec0dccca72b$var$isSplat = (s)=>s === \"*\";\nfunction $c5b33ec0dccca72b$var$computeScore(path, index) {\n    let segments = path.split(\"/\");\n    let initialScore = segments.length;\n    if (segments.some($c5b33ec0dccca72b$var$isSplat)) initialScore += $c5b33ec0dccca72b$var$splatPenalty;\n    if (index) initialScore += $c5b33ec0dccca72b$var$indexRouteValue;\n    return segments.filter((s)=>!$c5b33ec0dccca72b$var$isSplat(s)).reduce((score, segment)=>score + ($c5b33ec0dccca72b$var$paramRe.test(segment) ? $c5b33ec0dccca72b$var$dynamicSegmentValue : segment === \"\" ? $c5b33ec0dccca72b$var$emptySegmentValue : $c5b33ec0dccca72b$var$staticSegmentValue), initialScore);\n}\nfunction $c5b33ec0dccca72b$var$compareIndexes(a, b) {\n    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]);\n    return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0;\n}\nfunction $c5b33ec0dccca72b$var$matchRouteBranch(branch, pathname, allowPartial = false) {\n    let { routesMeta: routesMeta } = branch;\n    let matchedParams = {};\n    let matchedPathname = \"/\";\n    let matches = [];\n    for(let i = 0; i < routesMeta.length; ++i){\n        let meta = routesMeta[i];\n        let end = i === routesMeta.length - 1;\n        let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n        let match = $c5b33ec0dccca72b$export$81336c211d5ff295({\n            path: meta.relativePath,\n            caseSensitive: meta.caseSensitive,\n            end: end\n        }, remainingPathname);\n        let route = meta.route;\n        if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) match = $c5b33ec0dccca72b$export$81336c211d5ff295({\n            path: meta.relativePath,\n            caseSensitive: meta.caseSensitive,\n            end: false\n        }, remainingPathname);\n        if (!match) return null;\n        Object.assign(matchedParams, match.params);\n        matches.push({\n            // TODO: Can this as be avoided?\n            params: matchedParams,\n            pathname: $c5b33ec0dccca72b$var$joinPaths([\n                matchedPathname,\n                match.pathname\n            ]),\n            pathnameBase: $c5b33ec0dccca72b$var$normalizePathname($c5b33ec0dccca72b$var$joinPaths([\n                matchedPathname,\n                match.pathnameBase\n            ])),\n            route: route\n        });\n        if (match.pathnameBase !== \"/\") matchedPathname = $c5b33ec0dccca72b$var$joinPaths([\n            matchedPathname,\n            match.pathnameBase\n        ]);\n    }\n    return matches;\n}\nfunction $c5b33ec0dccca72b$export$82476f982757e71e(originalPath, params = {}) {\n    let path = originalPath;\n    if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n        $c5b33ec0dccca72b$var$warning(false, `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n        path = path.replace(/\\*$/, \"/*\");\n    }\n    const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n    const stringify = (p)=>p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n    const segments = path.split(/\\/+/).map((segment, index, array)=>{\n        const isLastSegment = index === array.length - 1;\n        if (isLastSegment && segment === \"*\") {\n            const star = \"*\";\n            return stringify(params[star]);\n        }\n        const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n        if (keyMatch) {\n            const [, key, optional] = keyMatch;\n            let param = params[key];\n            $c5b33ec0dccca72b$export$f5708dca728d7177(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n            return stringify(param);\n        }\n        return segment.replace(/\\?$/g, \"\");\n    }).filter((segment)=>!!segment);\n    return prefix + segments.join(\"/\");\n}\nfunction $c5b33ec0dccca72b$export$81336c211d5ff295(pattern, pathname) {\n    if (typeof pattern === \"string\") pattern = {\n        path: pattern,\n        caseSensitive: false,\n        end: true\n    };\n    let [matcher, compiledParams] = $c5b33ec0dccca72b$var$compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n    let match = pathname.match(matcher);\n    if (!match) return null;\n    let matchedPathname = match[0];\n    let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n    let captureGroups = match.slice(1);\n    let params = compiledParams.reduce((memo2, { paramName: paramName, isOptional: isOptional }, index)=>{\n        if (paramName === \"*\") {\n            let splatValue = captureGroups[index] || \"\";\n            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n        }\n        const value = captureGroups[index];\n        if (isOptional && !value) memo2[paramName] = void 0;\n        else memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n        return memo2;\n    }, {});\n    return {\n        params: params,\n        pathname: matchedPathname,\n        pathnameBase: pathnameBase,\n        pattern: pattern\n    };\n}\nfunction $c5b33ec0dccca72b$var$compilePath(path, caseSensitive = false, end = true) {\n    $c5b33ec0dccca72b$var$warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n    let params = [];\n    let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional)=>{\n        params.push({\n            paramName: paramName,\n            isOptional: isOptional != null\n        });\n        return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    });\n    if (path.endsWith(\"*\")) {\n        params.push({\n            paramName: \"*\"\n        });\n        regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n    } else if (end) regexpSource += \"\\\\/*$\";\n    else if (path !== \"\" && path !== \"/\") regexpSource += \"(?:(?=\\\\/|$))\";\n    let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n    return [\n        matcher,\n        params\n    ];\n}\nfunction $c5b33ec0dccca72b$var$decodePath(value) {\n    try {\n        return value.split(\"/\").map((v)=>decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n    } catch (error) {\n        $c5b33ec0dccca72b$var$warning(false, `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);\n        return value;\n    }\n}\nfunction $c5b33ec0dccca72b$var$stripBasename(pathname, basename) {\n    if (basename === \"/\") return pathname;\n    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;\n    let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n    let nextChar = pathname.charAt(startIndex);\n    if (nextChar && nextChar !== \"/\") return null;\n    return pathname.slice(startIndex) || \"/\";\n}\nfunction $c5b33ec0dccca72b$export$b09f2ff0bbcb43c7(to, fromPathname = \"/\") {\n    let { pathname: toPathname, search: search = \"\", hash: hash = \"\" } = typeof to === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(to) : to;\n    let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : $c5b33ec0dccca72b$var$resolvePathname(toPathname, fromPathname) : fromPathname;\n    return {\n        pathname: pathname,\n        search: $c5b33ec0dccca72b$var$normalizeSearch(search),\n        hash: $c5b33ec0dccca72b$var$normalizeHash(hash)\n    };\n}\nfunction $c5b33ec0dccca72b$var$resolvePathname(relativePath, fromPathname) {\n    let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n    let relativeSegments = relativePath.split(\"/\");\n    relativeSegments.forEach((segment)=>{\n        if (segment === \"..\") {\n            if (segments.length > 1) segments.pop();\n        } else if (segment !== \".\") segments.push(segment);\n    });\n    return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction $c5b33ec0dccca72b$var$getInvalidPathError(char, field, dest, path) {\n    return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(path)}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction $c5b33ec0dccca72b$var$getPathContributingMatches(matches) {\n    return matches.filter((match, index)=>index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction $c5b33ec0dccca72b$var$getResolveToMatches(matches) {\n    let pathMatches = $c5b33ec0dccca72b$var$getPathContributingMatches(matches);\n    return pathMatches.map((match, idx)=>idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n}\nfunction $c5b33ec0dccca72b$var$resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n    let to;\n    if (typeof toArg === \"string\") to = $c5b33ec0dccca72b$export$8ccf933b0513f8d0(toArg);\n    else {\n        to = {\n            ...toArg\n        };\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!to.pathname || !to.pathname.includes(\"?\"), $c5b33ec0dccca72b$var$getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!to.pathname || !to.pathname.includes(\"#\"), $c5b33ec0dccca72b$var$getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!to.search || !to.search.includes(\"#\"), $c5b33ec0dccca72b$var$getInvalidPathError(\"#\", \"search\", \"hash\", to));\n    }\n    let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n    let toPathname = isEmptyPath ? \"/\" : to.pathname;\n    let from;\n    if (toPathname == null) from = locationPathname;\n    else {\n        let routePathnameIndex = routePathnames.length - 1;\n        if (!isPathRelative && toPathname.startsWith(\"..\")) {\n            let toSegments = toPathname.split(\"/\");\n            while(toSegments[0] === \"..\"){\n                toSegments.shift();\n                routePathnameIndex -= 1;\n            }\n            to.pathname = toSegments.join(\"/\");\n        }\n        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n    }\n    let path = $c5b33ec0dccca72b$export$b09f2ff0bbcb43c7(to, from);\n    let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n    let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n    if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) path.pathname += \"/\";\n    return path;\n}\nvar $c5b33ec0dccca72b$var$joinPaths = (paths)=>paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar $c5b33ec0dccca72b$var$normalizePathname = (pathname)=>pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar $c5b33ec0dccca72b$var$normalizeSearch = (search)=>!search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar $c5b33ec0dccca72b$var$normalizeHash = (hash)=>!hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar $c5b33ec0dccca72b$var$DataWithResponseInit = class {\n    constructor(data2, init){\n        this.type = \"DataWithResponseInit\";\n        this.data = data2;\n        this.init = init || null;\n    }\n};\nfunction $c5b33ec0dccca72b$export$4051a07651545597(data2, init) {\n    return new $c5b33ec0dccca72b$var$DataWithResponseInit(data2, typeof init === \"number\" ? {\n        status: init\n    } : init);\n}\nvar $c5b33ec0dccca72b$export$89e12c5b50f7529d = (url, init = 302)=>{\n    let responseInit = init;\n    if (typeof responseInit === \"number\") responseInit = {\n        status: responseInit\n    };\n    else if (typeof responseInit.status === \"undefined\") responseInit.status = 302;\n    let headers = new Headers(responseInit.headers);\n    headers.set(\"Location\", url);\n    return new Response(null, {\n        ...responseInit,\n        headers: headers\n    });\n};\nvar $c5b33ec0dccca72b$export$a6cd19cd1951a23c = (url, init)=>{\n    let response = $c5b33ec0dccca72b$export$89e12c5b50f7529d(url, init);\n    response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n    return response;\n};\nvar $c5b33ec0dccca72b$export$77ad94ebf1c2b9ed = (url, init)=>{\n    let response = $c5b33ec0dccca72b$export$89e12c5b50f7529d(url, init);\n    response.headers.set(\"X-Remix-Replace\", \"true\");\n    return response;\n};\nvar $c5b33ec0dccca72b$export$f2680fa305b734ca = class {\n    constructor(status, statusText, data2, internal = false){\n        this.status = status;\n        this.statusText = statusText || \"\";\n        this.internal = internal;\n        if (data2 instanceof Error) {\n            this.data = data2.toString();\n            this.error = data2;\n        } else this.data = data2;\n    }\n};\nfunction $c5b33ec0dccca72b$export$972111febbeef05b(error) {\n    return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n// lib/router/router.ts\nvar $c5b33ec0dccca72b$var$validMutationMethodsArr = [\n    \"POST\",\n    \"PUT\",\n    \"PATCH\",\n    \"DELETE\"\n];\nvar $c5b33ec0dccca72b$var$validMutationMethods = new Set($c5b33ec0dccca72b$var$validMutationMethodsArr);\nvar $c5b33ec0dccca72b$var$validRequestMethodsArr = [\n    \"GET\",\n    ...$c5b33ec0dccca72b$var$validMutationMethodsArr\n];\nvar $c5b33ec0dccca72b$var$validRequestMethods = new Set($c5b33ec0dccca72b$var$validRequestMethodsArr);\nvar $c5b33ec0dccca72b$var$redirectStatusCodes = /* @__PURE__ */ new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nvar $c5b33ec0dccca72b$var$redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([\n    307,\n    308\n]);\nvar $c5b33ec0dccca72b$export$ed3e14b2f9e105d0 = {\n    state: \"idle\",\n    location: void 0,\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0\n};\nvar $c5b33ec0dccca72b$export$52eace9c284d3585 = {\n    state: \"idle\",\n    data: void 0,\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0\n};\nvar $c5b33ec0dccca72b$export$386d57f03f0b2883 = {\n    state: \"unblocked\",\n    proceed: void 0,\n    reset: void 0,\n    location: void 0\n};\nvar $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar $c5b33ec0dccca72b$var$defaultMapRouteProperties = (route)=>({\n        hasErrorBoundary: Boolean(route.hasErrorBoundary)\n    });\nvar $c5b33ec0dccca72b$var$TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar $c5b33ec0dccca72b$var$ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction $c5b33ec0dccca72b$export$baddd0131ee8c05b(init) {\n    const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n    const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n    $c5b33ec0dccca72b$export$f5708dca728d7177(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n    let mapRouteProperties2 = init.mapRouteProperties || $c5b33ec0dccca72b$var$defaultMapRouteProperties;\n    let manifest = {};\n    let dataRoutes = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);\n    let inFlightDataRoutes;\n    let basename = init.basename || \"/\";\n    let dataStrategyImpl = init.dataStrategy || $c5b33ec0dccca72b$var$defaultDataStrategy;\n    let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n    let future = {\n        ...init.future\n    };\n    let unlistenHistory = null;\n    let subscribers = /* @__PURE__ */ new Set();\n    let savedScrollPositions2 = null;\n    let getScrollRestorationKey2 = null;\n    let getScrollPosition = null;\n    let initialScrollRestored = init.hydrationData != null;\n    let initialMatches = $c5b33ec0dccca72b$export$2708184779ceb39d(dataRoutes, init.history.location, basename);\n    let initialMatchesIsFOW = false;\n    let initialErrors = null;\n    if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n        let error = $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n            pathname: init.history.location.pathname\n        });\n        let { matches: matches, route: route } = $c5b33ec0dccca72b$var$getShortCircuitMatches(dataRoutes);\n        initialMatches = matches;\n        initialErrors = {\n            [route.id]: error\n        };\n    }\n    if (initialMatches && !init.hydrationData) {\n        let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n        if (fogOfWar.active) initialMatches = null;\n    }\n    let initialized;\n    if (!initialMatches) {\n        initialized = false;\n        initialMatches = [];\n        let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n        if (fogOfWar.active && fogOfWar.matches) {\n            initialMatchesIsFOW = true;\n            initialMatches = fogOfWar.matches;\n        }\n    } else if (initialMatches.some((m)=>m.route.lazy)) initialized = false;\n    else if (!initialMatches.some((m)=>m.route.loader)) initialized = true;\n    else {\n        let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n        let errors = init.hydrationData ? init.hydrationData.errors : null;\n        if (errors) {\n            let idx = initialMatches.findIndex((m)=>errors[m.route.id] !== void 0);\n            initialized = initialMatches.slice(0, idx + 1).every((m)=>!$c5b33ec0dccca72b$var$shouldLoadRouteOnHydration(m.route, loaderData, errors));\n        } else initialized = initialMatches.every((m)=>!$c5b33ec0dccca72b$var$shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n    let router;\n    let state = {\n        historyAction: init.history.action,\n        location: init.history.location,\n        matches: initialMatches,\n        initialized: initialized,\n        navigation: $c5b33ec0dccca72b$export$ed3e14b2f9e105d0,\n        // Don't restore on initial updateState() if we were SSR'd\n        restoreScrollPosition: init.hydrationData != null ? false : null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n        actionData: init.hydrationData && init.hydrationData.actionData || null,\n        errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n    };\n    let pendingAction = \"POP\" /* Pop */ ;\n    let pendingPreventScrollReset = false;\n    let pendingNavigationController;\n    let pendingViewTransitionEnabled = false;\n    let appliedViewTransitions = /* @__PURE__ */ new Map();\n    let removePageHideEventListener = null;\n    let isUninterruptedRevalidation = false;\n    let isRevalidationRequired = false;\n    let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n    let fetchControllers = /* @__PURE__ */ new Map();\n    let incrementingLoadId = 0;\n    let pendingNavigationLoadId = -1;\n    let fetchReloadIds = /* @__PURE__ */ new Map();\n    let fetchRedirectIds = /* @__PURE__ */ new Set();\n    let fetchLoadMatches = /* @__PURE__ */ new Map();\n    let activeFetchers = /* @__PURE__ */ new Map();\n    let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n    let blockerFunctions = /* @__PURE__ */ new Map();\n    let unblockBlockerHistoryUpdate = void 0;\n    let pendingRevalidationDfd = null;\n    function initialize() {\n        unlistenHistory = init.history.listen(({ action: historyAction, location: location, delta: delta })=>{\n            if (unblockBlockerHistoryUpdate) {\n                unblockBlockerHistoryUpdate();\n                unblockBlockerHistoryUpdate = void 0;\n                return;\n            }\n            $c5b33ec0dccca72b$var$warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n            let blockerKey = shouldBlockNavigation({\n                currentLocation: state.location,\n                nextLocation: location,\n                historyAction: historyAction\n            });\n            if (blockerKey && delta != null) {\n                let nextHistoryUpdatePromise = new Promise((resolve)=>{\n                    unblockBlockerHistoryUpdate = resolve;\n                });\n                init.history.go(delta * -1);\n                updateBlocker(blockerKey, {\n                    state: \"blocked\",\n                    location: location,\n                    proceed () {\n                        updateBlocker(blockerKey, {\n                            state: \"proceeding\",\n                            proceed: void 0,\n                            reset: void 0,\n                            location: location\n                        });\n                        nextHistoryUpdatePromise.then(()=>init.history.go(delta));\n                    },\n                    reset () {\n                        let blockers = new Map(state.blockers);\n                        blockers.set(blockerKey, $c5b33ec0dccca72b$export$386d57f03f0b2883);\n                        updateState({\n                            blockers: blockers\n                        });\n                    }\n                });\n                return;\n            }\n            return startNavigation(historyAction, location);\n        });\n        if (isBrowser2) {\n            $c5b33ec0dccca72b$var$restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n            let _saveAppliedTransitions = ()=>$c5b33ec0dccca72b$var$persistAppliedTransitions(routerWindow, appliedViewTransitions);\n            routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n            removePageHideEventListener = ()=>routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n        }\n        if (!state.initialized) startNavigation(\"POP\" /* Pop */ , state.location, {\n            initialHydration: true\n        });\n        return router;\n    }\n    function dispose() {\n        if (unlistenHistory) unlistenHistory();\n        if (removePageHideEventListener) removePageHideEventListener();\n        subscribers.clear();\n        pendingNavigationController && pendingNavigationController.abort();\n        state.fetchers.forEach((_, key)=>deleteFetcher(key));\n        state.blockers.forEach((_, key)=>deleteBlocker(key));\n    }\n    function subscribe(fn) {\n        subscribers.add(fn);\n        return ()=>subscribers.delete(fn);\n    }\n    function updateState(newState, opts = {}) {\n        state = {\n            ...state,\n            ...newState\n        };\n        let unmountedFetchers = [];\n        let mountedFetchers = [];\n        state.fetchers.forEach((fetcher, key)=>{\n            if (fetcher.state === \"idle\") {\n                if (fetchersQueuedForDeletion.has(key)) unmountedFetchers.push(key);\n                else mountedFetchers.push(key);\n            }\n        });\n        fetchersQueuedForDeletion.forEach((key)=>{\n            if (!state.fetchers.has(key) && !fetchControllers.has(key)) unmountedFetchers.push(key);\n        });\n        [\n            ...subscribers\n        ].forEach((subscriber)=>subscriber(state, {\n                deletedFetchers: unmountedFetchers,\n                viewTransitionOpts: opts.viewTransitionOpts,\n                flushSync: opts.flushSync === true\n            }));\n        unmountedFetchers.forEach((key)=>deleteFetcher(key));\n        mountedFetchers.forEach((key)=>state.fetchers.delete(key));\n    }\n    function completeNavigation(location, newState, { flushSync: flushSync } = {}) {\n        let isActionReload = state.actionData != null && state.navigation.formMethod != null && $c5b33ec0dccca72b$var$isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n        let actionData;\n        if (newState.actionData) {\n            if (Object.keys(newState.actionData).length > 0) actionData = newState.actionData;\n            else actionData = null;\n        } else if (isActionReload) actionData = state.actionData;\n        else actionData = null;\n        let loaderData = newState.loaderData ? $c5b33ec0dccca72b$var$mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n        let blockers = state.blockers;\n        if (blockers.size > 0) {\n            blockers = new Map(blockers);\n            blockers.forEach((_, k)=>blockers.set(k, $c5b33ec0dccca72b$export$386d57f03f0b2883));\n        }\n        let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && $c5b33ec0dccca72b$var$isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n        if (inFlightDataRoutes) {\n            dataRoutes = inFlightDataRoutes;\n            inFlightDataRoutes = void 0;\n        }\n        if (isUninterruptedRevalidation) ;\n        else if (pendingAction === \"POP\" /* Pop */ ) ;\n        else if (pendingAction === \"PUSH\" /* Push */ ) init.history.push(location, location.state);\n        else if (pendingAction === \"REPLACE\" /* Replace */ ) init.history.replace(location, location.state);\n        let viewTransitionOpts;\n        if (pendingAction === \"POP\" /* Pop */ ) {\n            let priorPaths = appliedViewTransitions.get(state.location.pathname);\n            if (priorPaths && priorPaths.has(location.pathname)) viewTransitionOpts = {\n                currentLocation: state.location,\n                nextLocation: location\n            };\n            else if (appliedViewTransitions.has(location.pathname)) viewTransitionOpts = {\n                currentLocation: location,\n                nextLocation: state.location\n            };\n        } else if (pendingViewTransitionEnabled) {\n            let toPaths = appliedViewTransitions.get(state.location.pathname);\n            if (toPaths) toPaths.add(location.pathname);\n            else {\n                toPaths = /* @__PURE__ */ new Set([\n                    location.pathname\n                ]);\n                appliedViewTransitions.set(state.location.pathname, toPaths);\n            }\n            viewTransitionOpts = {\n                currentLocation: state.location,\n                nextLocation: location\n            };\n        }\n        updateState({\n            ...newState,\n            actionData: // matches, errors, fetchers go through as-is\n            actionData,\n            loaderData: loaderData,\n            historyAction: pendingAction,\n            location: location,\n            initialized: true,\n            navigation: $c5b33ec0dccca72b$export$ed3e14b2f9e105d0,\n            revalidation: \"idle\",\n            restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n            preventScrollReset: preventScrollReset,\n            blockers: blockers\n        }, {\n            viewTransitionOpts: viewTransitionOpts,\n            flushSync: flushSync === true\n        });\n        pendingAction = \"POP\" /* Pop */ ;\n        pendingPreventScrollReset = false;\n        pendingViewTransitionEnabled = false;\n        isUninterruptedRevalidation = false;\n        isRevalidationRequired = false;\n        pendingRevalidationDfd?.resolve();\n        pendingRevalidationDfd = null;\n    }\n    async function navigate(to, opts) {\n        if (typeof to === \"number\") {\n            init.history.go(to);\n            return;\n        }\n        let normalizedPath = $c5b33ec0dccca72b$var$normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);\n        let { path: path, submission: submission, error: error } = $c5b33ec0dccca72b$var$normalizeNavigateOptions(false, normalizedPath, opts);\n        let currentLocation = state.location;\n        let nextLocation = $c5b33ec0dccca72b$var$createLocation(state.location, path, opts && opts.state);\n        nextLocation = {\n            ...nextLocation,\n            ...init.history.encodeLocation(nextLocation)\n        };\n        let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n        let historyAction = \"PUSH\" /* Push */ ;\n        if (userReplace === true) historyAction = \"REPLACE\" /* Replace */ ;\n        else if (userReplace === false) ;\n        else if (submission != null && $c5b33ec0dccca72b$var$isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) historyAction = \"REPLACE\" /* Replace */ ;\n        let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n        let flushSync = (opts && opts.flushSync) === true;\n        let blockerKey = shouldBlockNavigation({\n            currentLocation: currentLocation,\n            nextLocation: nextLocation,\n            historyAction: historyAction\n        });\n        if (blockerKey) {\n            updateBlocker(blockerKey, {\n                state: \"blocked\",\n                location: nextLocation,\n                proceed () {\n                    updateBlocker(blockerKey, {\n                        state: \"proceeding\",\n                        proceed: void 0,\n                        reset: void 0,\n                        location: nextLocation\n                    });\n                    navigate(to, opts);\n                },\n                reset () {\n                    let blockers = new Map(state.blockers);\n                    blockers.set(blockerKey, $c5b33ec0dccca72b$export$386d57f03f0b2883);\n                    updateState({\n                        blockers: blockers\n                    });\n                }\n            });\n            return;\n        }\n        await startNavigation(historyAction, nextLocation, {\n            submission: submission,\n            // Send through the formData serialization error if we have one so we can\n            // render at the right error boundary after we match routes\n            pendingError: error,\n            preventScrollReset: preventScrollReset,\n            replace: opts && opts.replace,\n            enableViewTransition: opts && opts.viewTransition,\n            flushSync: flushSync\n        });\n    }\n    function revalidate() {\n        if (!pendingRevalidationDfd) pendingRevalidationDfd = $c5b33ec0dccca72b$var$createDeferred();\n        interruptActiveLoads();\n        updateState({\n            revalidation: \"loading\"\n        });\n        let promise = pendingRevalidationDfd.promise;\n        if (state.navigation.state === \"submitting\") return promise;\n        if (state.navigation.state === \"idle\") {\n            startNavigation(state.historyAction, state.location, {\n                startUninterruptedRevalidation: true\n            });\n            return promise;\n        }\n        startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n            overrideNavigation: state.navigation,\n            // Proxy through any rending view transition\n            enableViewTransition: pendingViewTransitionEnabled === true\n        });\n        return promise;\n    }\n    async function startNavigation(historyAction, location, opts) {\n        pendingNavigationController && pendingNavigationController.abort();\n        pendingNavigationController = null;\n        pendingAction = historyAction;\n        isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n        saveScrollPosition(state.location, state.matches);\n        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n        pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        let loadingNavigation = opts && opts.overrideNavigation;\n        let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n        state.matches : $c5b33ec0dccca72b$export$2708184779ceb39d(routesToUse, location, basename);\n        let flushSync = (opts && opts.flushSync) === true;\n        if (matches && state.initialized && !isRevalidationRequired && $c5b33ec0dccca72b$var$isHashChangeOnly(state.location, location) && !(opts && opts.submission && $c5b33ec0dccca72b$var$isMutationMethod(opts.submission.formMethod))) {\n            completeNavigation(location, {\n                matches: matches\n            }, {\n                flushSync: flushSync\n            });\n            return;\n        }\n        let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;\n        if (!matches) {\n            let { error: error, notFoundMatches: notFoundMatches, route: route } = handleNavigational404(location.pathname);\n            completeNavigation(location, {\n                matches: notFoundMatches,\n                loaderData: {},\n                errors: {\n                    [route.id]: error\n                }\n            }, {\n                flushSync: flushSync\n            });\n            return;\n        }\n        pendingNavigationController = new AbortController();\n        let request = $c5b33ec0dccca72b$var$createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n        let pendingActionResult;\n        if (opts && opts.pendingError) pendingActionResult = [\n            $c5b33ec0dccca72b$var$findNearestBoundary(matches).route.id,\n            {\n                type: \"error\" /* error */ ,\n                error: opts.pendingError\n            }\n        ];\n        else if (opts && opts.submission && $c5b33ec0dccca72b$var$isMutationMethod(opts.submission.formMethod)) {\n            let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n                replace: opts.replace,\n                flushSync: flushSync\n            });\n            if (actionResult.shortCircuited) return;\n            if (actionResult.pendingActionResult) {\n                let [routeId, result] = actionResult.pendingActionResult;\n                if ($c5b33ec0dccca72b$var$isErrorResult(result) && $c5b33ec0dccca72b$export$972111febbeef05b(result.error) && result.error.status === 404) {\n                    pendingNavigationController = null;\n                    completeNavigation(location, {\n                        matches: actionResult.matches,\n                        loaderData: {},\n                        errors: {\n                            [routeId]: result.error\n                        }\n                    });\n                    return;\n                }\n            }\n            matches = actionResult.matches || matches;\n            pendingActionResult = actionResult.pendingActionResult;\n            loadingNavigation = $c5b33ec0dccca72b$var$getLoadingNavigation(location, opts.submission);\n            flushSync = false;\n            fogOfWar.active = false;\n            request = $c5b33ec0dccca72b$var$createClientSideRequest(init.history, request.url, request.signal);\n        }\n        let { shortCircuited: shortCircuited, matches: updatedMatches, loaderData: loaderData, errors: errors } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n        if (shortCircuited) return;\n        pendingNavigationController = null;\n        completeNavigation(location, {\n            matches: updatedMatches || matches,\n            ...$c5b33ec0dccca72b$var$getActionDataForCommit(pendingActionResult),\n            loaderData: loaderData,\n            errors: errors\n        });\n    }\n    async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\n        interruptActiveLoads();\n        let navigation = $c5b33ec0dccca72b$var$getSubmittingNavigation(location, submission);\n        updateState({\n            navigation: navigation\n        }, {\n            flushSync: opts.flushSync === true\n        });\n        if (isFogOfWar) {\n            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n            if (discoverResult.type === \"aborted\") return {\n                shortCircuited: true\n            };\n            else if (discoverResult.type === \"error\") {\n                let boundaryId = $c5b33ec0dccca72b$var$findNearestBoundary(discoverResult.partialMatches).route.id;\n                return {\n                    matches: discoverResult.partialMatches,\n                    pendingActionResult: [\n                        boundaryId,\n                        {\n                            type: \"error\" /* error */ ,\n                            error: discoverResult.error\n                        }\n                    ]\n                };\n            } else if (!discoverResult.matches) {\n                let { notFoundMatches: notFoundMatches, error: error, route: route } = handleNavigational404(location.pathname);\n                return {\n                    matches: notFoundMatches,\n                    pendingActionResult: [\n                        route.id,\n                        {\n                            type: \"error\" /* error */ ,\n                            error: error\n                        }\n                    ]\n                };\n            } else matches = discoverResult.matches;\n        }\n        let result;\n        let actionMatch = $c5b33ec0dccca72b$var$getTargetMatch(matches, location);\n        if (!actionMatch.route.action && !actionMatch.route.lazy) result = {\n            type: \"error\" /* error */ ,\n            error: $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n                method: request.method,\n                pathname: location.pathname,\n                routeId: actionMatch.route.id\n            })\n        };\n        else {\n            let results = await callDataStrategy(\"action\", state, request, [\n                actionMatch\n            ], matches, null);\n            result = results[actionMatch.route.id];\n            if (request.signal.aborted) return {\n                shortCircuited: true\n            };\n        }\n        if ($c5b33ec0dccca72b$var$isRedirectResult(result)) {\n            let replace2;\n            if (opts && opts.replace != null) replace2 = opts.replace;\n            else {\n                let location2 = $c5b33ec0dccca72b$var$normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n                replace2 = location2 === state.location.pathname + state.location.search;\n            }\n            await startRedirectNavigation(request, result, true, {\n                submission: submission,\n                replace: replace2\n            });\n            return {\n                shortCircuited: true\n            };\n        }\n        if ($c5b33ec0dccca72b$var$isErrorResult(result)) {\n            let boundaryMatch = $c5b33ec0dccca72b$var$findNearestBoundary(matches, actionMatch.route.id);\n            if ((opts && opts.replace) !== true) pendingAction = \"PUSH\" /* Push */ ;\n            return {\n                matches: matches,\n                pendingActionResult: [\n                    boundaryMatch.route.id,\n                    result\n                ]\n            };\n        }\n        return {\n            matches: matches,\n            pendingActionResult: [\n                actionMatch.route.id,\n                result\n            ]\n        };\n    }\n    async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n        let loadingNavigation = overrideNavigation || $c5b33ec0dccca72b$var$getLoadingNavigation(location, submission);\n        let activeSubmission = submission || fetcherSubmission || $c5b33ec0dccca72b$var$getSubmissionFromNavigation(loadingNavigation);\n        let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n        if (isFogOfWar) {\n            if (shouldUpdateNavigationState) {\n                let actionData = getUpdatedActionData(pendingActionResult);\n                updateState({\n                    navigation: loadingNavigation,\n                    ...actionData !== void 0 ? {\n                        actionData: actionData\n                    } : {}\n                }, {\n                    flushSync: flushSync\n                });\n            }\n            let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n            if (discoverResult.type === \"aborted\") return {\n                shortCircuited: true\n            };\n            else if (discoverResult.type === \"error\") {\n                let boundaryId = $c5b33ec0dccca72b$var$findNearestBoundary(discoverResult.partialMatches).route.id;\n                return {\n                    matches: discoverResult.partialMatches,\n                    loaderData: {},\n                    errors: {\n                        [boundaryId]: discoverResult.error\n                    }\n                };\n            } else if (!discoverResult.matches) {\n                let { error: error, notFoundMatches: notFoundMatches, route: route } = handleNavigational404(location.pathname);\n                return {\n                    matches: notFoundMatches,\n                    loaderData: {},\n                    errors: {\n                        [route.id]: error\n                    }\n                };\n            } else matches = discoverResult.matches;\n        }\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        let [matchesToLoad, revalidatingFetchers] = $c5b33ec0dccca72b$var$getMatchesToLoad(init.history, state, matches, activeSubmission, location, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n        pendingNavigationLoadId = ++incrementingLoadId;\n        if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n            let updatedFetchers2 = markFetchRedirectsDone();\n            completeNavigation(location, {\n                matches: matches,\n                loaderData: {},\n                // Commit pending error if we're short circuiting\n                errors: pendingActionResult && $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? {\n                    [pendingActionResult[0]]: pendingActionResult[1].error\n                } : null,\n                ...$c5b33ec0dccca72b$var$getActionDataForCommit(pendingActionResult),\n                ...updatedFetchers2 ? {\n                    fetchers: new Map(state.fetchers)\n                } : {}\n            }, {\n                flushSync: flushSync\n            });\n            return {\n                shortCircuited: true\n            };\n        }\n        if (shouldUpdateNavigationState) {\n            let updates = {};\n            if (!isFogOfWar) {\n                updates.navigation = loadingNavigation;\n                let actionData = getUpdatedActionData(pendingActionResult);\n                if (actionData !== void 0) updates.actionData = actionData;\n            }\n            if (revalidatingFetchers.length > 0) updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n            updateState(updates, {\n                flushSync: flushSync\n            });\n        }\n        revalidatingFetchers.forEach((rf)=>{\n            abortFetcher(rf.key);\n            if (rf.controller) fetchControllers.set(rf.key, rf.controller);\n        });\n        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((f)=>abortFetcher(f.key));\n        if (pendingNavigationController) pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n        let { loaderResults: loaderResults, fetcherResults: fetcherResults } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n        if (request.signal.aborted) return {\n            shortCircuited: true\n        };\n        if (pendingNavigationController) pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n        revalidatingFetchers.forEach((rf)=>fetchControllers.delete(rf.key));\n        let redirect2 = $c5b33ec0dccca72b$var$findRedirect(loaderResults);\n        if (redirect2) {\n            await startRedirectNavigation(request, redirect2.result, true, {\n                replace: replace2\n            });\n            return {\n                shortCircuited: true\n            };\n        }\n        redirect2 = $c5b33ec0dccca72b$var$findRedirect(fetcherResults);\n        if (redirect2) {\n            fetchRedirectIds.add(redirect2.key);\n            await startRedirectNavigation(request, redirect2.result, true, {\n                replace: replace2\n            });\n            return {\n                shortCircuited: true\n            };\n        }\n        let { loaderData: loaderData, errors: errors } = $c5b33ec0dccca72b$var$processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);\n        if (initialHydration && state.errors) errors = {\n            ...state.errors,\n            ...errors\n        };\n        let updatedFetchers = markFetchRedirectsDone();\n        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n        let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n        return {\n            matches: matches,\n            loaderData: loaderData,\n            errors: errors,\n            ...shouldUpdateFetchers ? {\n                fetchers: new Map(state.fetchers)\n            } : {}\n        };\n    }\n    function getUpdatedActionData(pendingActionResult) {\n        if (pendingActionResult && !$c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1])) return {\n            [pendingActionResult[0]]: pendingActionResult[1].data\n        };\n        else if (state.actionData) {\n            if (Object.keys(state.actionData).length === 0) return null;\n            else return state.actionData;\n        }\n    }\n    function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n        revalidatingFetchers.forEach((rf)=>{\n            let fetcher = state.fetchers.get(rf.key);\n            let revalidatingFetcher = $c5b33ec0dccca72b$var$getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n            state.fetchers.set(rf.key, revalidatingFetcher);\n        });\n        return new Map(state.fetchers);\n    }\n    async function fetch2(key, routeId, href2, opts) {\n        abortFetcher(key);\n        let flushSync = (opts && opts.flushSync) === true;\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        let normalizedPath = $c5b33ec0dccca72b$var$normalizeTo(state.location, state.matches, basename, href2, routeId, opts?.relative);\n        let matches = $c5b33ec0dccca72b$export$2708184779ceb39d(routesToUse, normalizedPath, basename);\n        let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n        if (fogOfWar.active && fogOfWar.matches) matches = fogOfWar.matches;\n        if (!matches) {\n            setFetcherError(key, routeId, $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                pathname: normalizedPath\n            }), {\n                flushSync: flushSync\n            });\n            return;\n        }\n        let { path: path, submission: submission, error: error } = $c5b33ec0dccca72b$var$normalizeNavigateOptions(true, normalizedPath, opts);\n        if (error) {\n            setFetcherError(key, routeId, error, {\n                flushSync: flushSync\n            });\n            return;\n        }\n        let match = $c5b33ec0dccca72b$var$getTargetMatch(matches, path);\n        let preventScrollReset = (opts && opts.preventScrollReset) === true;\n        if (submission && $c5b33ec0dccca72b$var$isMutationMethod(submission.formMethod)) {\n            await handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n            return;\n        }\n        fetchLoadMatches.set(key, {\n            routeId: routeId,\n            path: path\n        });\n        await handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n    }\n    async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n        interruptActiveLoads();\n        fetchLoadMatches.delete(key);\n        function detectAndHandle405Error(m) {\n            if (!m.route.action && !m.route.lazy) {\n                let error = $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n                    method: submission.formMethod,\n                    pathname: path,\n                    routeId: routeId\n                });\n                setFetcherError(key, routeId, error, {\n                    flushSync: flushSync\n                });\n                return true;\n            }\n            return false;\n        }\n        if (!isFogOfWar && detectAndHandle405Error(match)) return;\n        let existingFetcher = state.fetchers.get(key);\n        updateFetcherState(key, $c5b33ec0dccca72b$var$getSubmittingFetcher(submission, existingFetcher), {\n            flushSync: flushSync\n        });\n        let abortController = new AbortController();\n        let fetchRequest = $c5b33ec0dccca72b$var$createClientSideRequest(init.history, path, abortController.signal, submission);\n        if (isFogOfWar) {\n            let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n            if (discoverResult.type === \"aborted\") return;\n            else if (discoverResult.type === \"error\") {\n                setFetcherError(key, routeId, discoverResult.error, {\n                    flushSync: flushSync\n                });\n                return;\n            } else if (!discoverResult.matches) {\n                setFetcherError(key, routeId, $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                    pathname: path\n                }), {\n                    flushSync: flushSync\n                });\n                return;\n            } else {\n                requestMatches = discoverResult.matches;\n                match = $c5b33ec0dccca72b$var$getTargetMatch(requestMatches, path);\n                if (detectAndHandle405Error(match)) return;\n            }\n        }\n        fetchControllers.set(key, abortController);\n        let originatingLoadId = incrementingLoadId;\n        let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [\n            match\n        ], requestMatches, key);\n        let actionResult = actionResults[match.route.id];\n        if (fetchRequest.signal.aborted) {\n            if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);\n            return;\n        }\n        if (fetchersQueuedForDeletion.has(key)) {\n            if ($c5b33ec0dccca72b$var$isRedirectResult(actionResult) || $c5b33ec0dccca72b$var$isErrorResult(actionResult)) {\n                updateFetcherState(key, $c5b33ec0dccca72b$var$getDoneFetcher(void 0));\n                return;\n            }\n        } else {\n            if ($c5b33ec0dccca72b$var$isRedirectResult(actionResult)) {\n                fetchControllers.delete(key);\n                if (pendingNavigationLoadId > originatingLoadId) {\n                    updateFetcherState(key, $c5b33ec0dccca72b$var$getDoneFetcher(void 0));\n                    return;\n                } else {\n                    fetchRedirectIds.add(key);\n                    updateFetcherState(key, $c5b33ec0dccca72b$var$getLoadingFetcher(submission));\n                    return startRedirectNavigation(fetchRequest, actionResult, false, {\n                        fetcherSubmission: submission,\n                        preventScrollReset: preventScrollReset\n                    });\n                }\n            }\n            if ($c5b33ec0dccca72b$var$isErrorResult(actionResult)) {\n                setFetcherError(key, routeId, actionResult.error);\n                return;\n            }\n        }\n        let nextLocation = state.navigation.location || state.location;\n        let revalidationRequest = $c5b33ec0dccca72b$var$createClientSideRequest(init.history, nextLocation, abortController.signal);\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        let matches = state.navigation.state !== \"idle\" ? $c5b33ec0dccca72b$export$2708184779ceb39d(routesToUse, state.navigation.location, basename) : state.matches;\n        $c5b33ec0dccca72b$export$f5708dca728d7177(matches, \"Didn't find any matches after fetcher action\");\n        let loadId = ++incrementingLoadId;\n        fetchReloadIds.set(key, loadId);\n        let loadFetcher = $c5b33ec0dccca72b$var$getLoadingFetcher(submission, actionResult.data);\n        state.fetchers.set(key, loadFetcher);\n        let [matchesToLoad, revalidatingFetchers] = $c5b33ec0dccca72b$var$getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [\n            match.route.id,\n            actionResult\n        ]);\n        revalidatingFetchers.filter((rf)=>rf.key !== key).forEach((rf)=>{\n            let staleKey = rf.key;\n            let existingFetcher2 = state.fetchers.get(staleKey);\n            let revalidatingFetcher = $c5b33ec0dccca72b$var$getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n            state.fetchers.set(staleKey, revalidatingFetcher);\n            abortFetcher(staleKey);\n            if (rf.controller) fetchControllers.set(staleKey, rf.controller);\n        });\n        updateState({\n            fetchers: new Map(state.fetchers)\n        });\n        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((rf)=>abortFetcher(rf.key));\n        abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n        let { loaderResults: loaderResults, fetcherResults: fetcherResults } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n        if (abortController.signal.aborted) return;\n        abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n        fetchReloadIds.delete(key);\n        fetchControllers.delete(key);\n        revalidatingFetchers.forEach((r)=>fetchControllers.delete(r.key));\n        let redirect2 = $c5b33ec0dccca72b$var$findRedirect(loaderResults);\n        if (redirect2) return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n            preventScrollReset: preventScrollReset\n        });\n        redirect2 = $c5b33ec0dccca72b$var$findRedirect(fetcherResults);\n        if (redirect2) {\n            fetchRedirectIds.add(redirect2.key);\n            return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n                preventScrollReset: preventScrollReset\n            });\n        }\n        let { loaderData: loaderData, errors: errors } = $c5b33ec0dccca72b$var$processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);\n        if (state.fetchers.has(key)) {\n            let doneFetcher = $c5b33ec0dccca72b$var$getDoneFetcher(actionResult.data);\n            state.fetchers.set(key, doneFetcher);\n        }\n        abortStaleFetchLoads(loadId);\n        if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n            $c5b33ec0dccca72b$export$f5708dca728d7177(pendingAction, \"Expected pending action\");\n            pendingNavigationController && pendingNavigationController.abort();\n            completeNavigation(state.navigation.location, {\n                matches: matches,\n                loaderData: loaderData,\n                errors: errors,\n                fetchers: new Map(state.fetchers)\n            });\n        } else {\n            updateState({\n                errors: errors,\n                loaderData: $c5b33ec0dccca72b$var$mergeLoaderData(state.loaderData, loaderData, matches, errors),\n                fetchers: new Map(state.fetchers)\n            });\n            isRevalidationRequired = false;\n        }\n    }\n    async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n        let existingFetcher = state.fetchers.get(key);\n        updateFetcherState(key, $c5b33ec0dccca72b$var$getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {\n            flushSync: flushSync\n        });\n        let abortController = new AbortController();\n        let fetchRequest = $c5b33ec0dccca72b$var$createClientSideRequest(init.history, path, abortController.signal);\n        if (isFogOfWar) {\n            let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n            if (discoverResult.type === \"aborted\") return;\n            else if (discoverResult.type === \"error\") {\n                setFetcherError(key, routeId, discoverResult.error, {\n                    flushSync: flushSync\n                });\n                return;\n            } else if (!discoverResult.matches) {\n                setFetcherError(key, routeId, $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                    pathname: path\n                }), {\n                    flushSync: flushSync\n                });\n                return;\n            } else {\n                matches = discoverResult.matches;\n                match = $c5b33ec0dccca72b$var$getTargetMatch(matches, path);\n            }\n        }\n        fetchControllers.set(key, abortController);\n        let originatingLoadId = incrementingLoadId;\n        let results = await callDataStrategy(\"loader\", state, fetchRequest, [\n            match\n        ], matches, key);\n        let result = results[match.route.id];\n        if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);\n        if (fetchRequest.signal.aborted) return;\n        if (fetchersQueuedForDeletion.has(key)) {\n            updateFetcherState(key, $c5b33ec0dccca72b$var$getDoneFetcher(void 0));\n            return;\n        }\n        if ($c5b33ec0dccca72b$var$isRedirectResult(result)) {\n            if (pendingNavigationLoadId > originatingLoadId) {\n                updateFetcherState(key, $c5b33ec0dccca72b$var$getDoneFetcher(void 0));\n                return;\n            } else {\n                fetchRedirectIds.add(key);\n                await startRedirectNavigation(fetchRequest, result, false, {\n                    preventScrollReset: preventScrollReset\n                });\n                return;\n            }\n        }\n        if ($c5b33ec0dccca72b$var$isErrorResult(result)) {\n            setFetcherError(key, routeId, result.error);\n            return;\n        }\n        updateFetcherState(key, $c5b33ec0dccca72b$var$getDoneFetcher(result.data));\n    }\n    async function startRedirectNavigation(request, redirect2, isNavigation, { submission: submission, fetcherSubmission: fetcherSubmission, preventScrollReset: preventScrollReset, replace: replace2 } = {}) {\n        if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) isRevalidationRequired = true;\n        let location = redirect2.response.headers.get(\"Location\");\n        $c5b33ec0dccca72b$export$f5708dca728d7177(location, \"Expected a Location header on the redirect Response\");\n        location = $c5b33ec0dccca72b$var$normalizeRedirectLocation(location, new URL(request.url), basename);\n        let redirectLocation = $c5b33ec0dccca72b$var$createLocation(state.location, location, {\n            _isRedirect: true\n        });\n        if (isBrowser2) {\n            let isDocumentReload = false;\n            if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) isDocumentReload = true;\n            else if ($c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX.test(location)) {\n                const url = init.history.createURL(location);\n                isDocumentReload = url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n                $c5b33ec0dccca72b$var$stripBasename(url.pathname, basename) == null;\n            }\n            if (isDocumentReload) {\n                if (replace2) routerWindow.location.replace(location);\n                else routerWindow.location.assign(location);\n                return;\n            }\n        }\n        pendingNavigationController = null;\n        let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */  : \"PUSH\" /* Push */ ;\n        let { formMethod: formMethod, formAction: formAction, formEncType: formEncType } = state.navigation;\n        if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) submission = $c5b33ec0dccca72b$var$getSubmissionFromNavigation(state.navigation);\n        let activeSubmission = submission || fetcherSubmission;\n        if ($c5b33ec0dccca72b$var$redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && $c5b33ec0dccca72b$var$isMutationMethod(activeSubmission.formMethod)) await startNavigation(redirectNavigationType, redirectLocation, {\n            submission: {\n                ...activeSubmission,\n                formAction: location\n            },\n            // Preserve these flags across redirects\n            preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n            enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n        });\n        else {\n            let overrideNavigation = $c5b33ec0dccca72b$var$getLoadingNavigation(redirectLocation, submission);\n            await startNavigation(redirectNavigationType, redirectLocation, {\n                overrideNavigation: overrideNavigation,\n                fetcherSubmission: // Send fetcher submissions through for shouldRevalidate\n                fetcherSubmission,\n                // Preserve these flags across redirects\n                preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n                enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n            });\n        }\n    }\n    async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\n        let results;\n        let dataResults = {};\n        try {\n            results = await $c5b33ec0dccca72b$var$callDataStrategyImpl(dataStrategyImpl, type, state2, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2);\n        } catch (e) {\n            matchesToLoad.forEach((m)=>{\n                dataResults[m.route.id] = {\n                    type: \"error\" /* error */ ,\n                    error: e\n                };\n            });\n            return dataResults;\n        }\n        for (let [routeId, result] of Object.entries(results))if ($c5b33ec0dccca72b$var$isRedirectDataStrategyResult(result)) {\n            let response = result.result;\n            dataResults[routeId] = {\n                type: \"redirect\" /* redirect */ ,\n                response: $c5b33ec0dccca72b$var$normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)\n            };\n        } else dataResults[routeId] = await $c5b33ec0dccca72b$var$convertDataStrategyResultToDataResult(result);\n        return dataResults;\n    }\n    async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\n        let loaderResultsPromise = callDataStrategy(\"loader\", state2, request, matchesToLoad, matches, null);\n        let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async (f)=>{\n            if (f.matches && f.match && f.controller) {\n                let results = await callDataStrategy(\"loader\", state2, $c5b33ec0dccca72b$var$createClientSideRequest(init.history, f.path, f.controller.signal), [\n                    f.match\n                ], f.matches, f.key);\n                let result = results[f.match.route.id];\n                return {\n                    [f.key]: result\n                };\n            } else return Promise.resolve({\n                [f.key]: {\n                    type: \"error\" /* error */ ,\n                    error: $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                        pathname: f.path\n                    })\n                }\n            });\n        }));\n        let loaderResults = await loaderResultsPromise;\n        let fetcherResults = (await fetcherResultsPromise).reduce((acc, r)=>Object.assign(acc, r), {});\n        return {\n            loaderResults: loaderResults,\n            fetcherResults: fetcherResults\n        };\n    }\n    function interruptActiveLoads() {\n        isRevalidationRequired = true;\n        fetchLoadMatches.forEach((_, key)=>{\n            if (fetchControllers.has(key)) cancelledFetcherLoads.add(key);\n            abortFetcher(key);\n        });\n    }\n    function updateFetcherState(key, fetcher, opts = {}) {\n        state.fetchers.set(key, fetcher);\n        updateState({\n            fetchers: new Map(state.fetchers)\n        }, {\n            flushSync: (opts && opts.flushSync) === true\n        });\n    }\n    function setFetcherError(key, routeId, error, opts = {}) {\n        let boundaryMatch = $c5b33ec0dccca72b$var$findNearestBoundary(state.matches, routeId);\n        deleteFetcher(key);\n        updateState({\n            errors: {\n                [boundaryMatch.route.id]: error\n            },\n            fetchers: new Map(state.fetchers)\n        }, {\n            flushSync: (opts && opts.flushSync) === true\n        });\n    }\n    function getFetcher(key) {\n        activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n        if (fetchersQueuedForDeletion.has(key)) fetchersQueuedForDeletion.delete(key);\n        return state.fetchers.get(key) || $c5b33ec0dccca72b$export$52eace9c284d3585;\n    }\n    function deleteFetcher(key) {\n        let fetcher = state.fetchers.get(key);\n        if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) abortFetcher(key);\n        fetchLoadMatches.delete(key);\n        fetchReloadIds.delete(key);\n        fetchRedirectIds.delete(key);\n        fetchersQueuedForDeletion.delete(key);\n        cancelledFetcherLoads.delete(key);\n        state.fetchers.delete(key);\n    }\n    function queueFetcherForDeletion(key) {\n        let count = (activeFetchers.get(key) || 0) - 1;\n        if (count <= 0) {\n            activeFetchers.delete(key);\n            fetchersQueuedForDeletion.add(key);\n        } else activeFetchers.set(key, count);\n        updateState({\n            fetchers: new Map(state.fetchers)\n        });\n    }\n    function abortFetcher(key) {\n        let controller = fetchControllers.get(key);\n        if (controller) {\n            controller.abort();\n            fetchControllers.delete(key);\n        }\n    }\n    function markFetchersDone(keys) {\n        for (let key of keys){\n            let fetcher = getFetcher(key);\n            let doneFetcher = $c5b33ec0dccca72b$var$getDoneFetcher(fetcher.data);\n            state.fetchers.set(key, doneFetcher);\n        }\n    }\n    function markFetchRedirectsDone() {\n        let doneKeys = [];\n        let updatedFetchers = false;\n        for (let key of fetchRedirectIds){\n            let fetcher = state.fetchers.get(key);\n            $c5b33ec0dccca72b$export$f5708dca728d7177(fetcher, `Expected fetcher: ${key}`);\n            if (fetcher.state === \"loading\") {\n                fetchRedirectIds.delete(key);\n                doneKeys.push(key);\n                updatedFetchers = true;\n            }\n        }\n        markFetchersDone(doneKeys);\n        return updatedFetchers;\n    }\n    function abortStaleFetchLoads(landedId) {\n        let yeetedKeys = [];\n        for (let [key, id] of fetchReloadIds)if (id < landedId) {\n            let fetcher = state.fetchers.get(key);\n            $c5b33ec0dccca72b$export$f5708dca728d7177(fetcher, `Expected fetcher: ${key}`);\n            if (fetcher.state === \"loading\") {\n                abortFetcher(key);\n                fetchReloadIds.delete(key);\n                yeetedKeys.push(key);\n            }\n        }\n        markFetchersDone(yeetedKeys);\n        return yeetedKeys.length > 0;\n    }\n    function getBlocker(key, fn) {\n        let blocker = state.blockers.get(key) || $c5b33ec0dccca72b$export$386d57f03f0b2883;\n        if (blockerFunctions.get(key) !== fn) blockerFunctions.set(key, fn);\n        return blocker;\n    }\n    function deleteBlocker(key) {\n        state.blockers.delete(key);\n        blockerFunctions.delete(key);\n    }\n    function updateBlocker(key, newBlocker) {\n        let blocker = state.blockers.get(key) || $c5b33ec0dccca72b$export$386d57f03f0b2883;\n        $c5b33ec0dccca72b$export$f5708dca728d7177(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);\n        let blockers = new Map(state.blockers);\n        blockers.set(key, newBlocker);\n        updateState({\n            blockers: blockers\n        });\n    }\n    function shouldBlockNavigation({ currentLocation: currentLocation, nextLocation: nextLocation, historyAction: historyAction }) {\n        if (blockerFunctions.size === 0) return;\n        if (blockerFunctions.size > 1) $c5b33ec0dccca72b$var$warning(false, \"A router only supports one blocker at a time\");\n        let entries = Array.from(blockerFunctions.entries());\n        let [blockerKey, blockerFunction] = entries[entries.length - 1];\n        let blocker = state.blockers.get(blockerKey);\n        if (blocker && blocker.state === \"proceeding\") return;\n        if (blockerFunction({\n            currentLocation: currentLocation,\n            nextLocation: nextLocation,\n            historyAction: historyAction\n        })) return blockerKey;\n    }\n    function handleNavigational404(pathname) {\n        let error = $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n            pathname: pathname\n        });\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        let { matches: matches, route: route } = $c5b33ec0dccca72b$var$getShortCircuitMatches(routesToUse);\n        return {\n            notFoundMatches: matches,\n            route: route,\n            error: error\n        };\n    }\n    function enableScrollRestoration(positions, getPosition, getKey) {\n        savedScrollPositions2 = positions;\n        getScrollPosition = getPosition;\n        getScrollRestorationKey2 = getKey || null;\n        if (!initialScrollRestored && state.navigation === $c5b33ec0dccca72b$export$ed3e14b2f9e105d0) {\n            initialScrollRestored = true;\n            let y = getSavedScrollPosition(state.location, state.matches);\n            if (y != null) updateState({\n                restoreScrollPosition: y\n            });\n        }\n        return ()=>{\n            savedScrollPositions2 = null;\n            getScrollPosition = null;\n            getScrollRestorationKey2 = null;\n        };\n    }\n    function getScrollKey(location, matches) {\n        if (getScrollRestorationKey2) {\n            let key = getScrollRestorationKey2(location, matches.map((m)=>$c5b33ec0dccca72b$var$convertRouteMatchToUiMatch(m, state.loaderData)));\n            return key || location.key;\n        }\n        return location.key;\n    }\n    function saveScrollPosition(location, matches) {\n        if (savedScrollPositions2 && getScrollPosition) {\n            let key = getScrollKey(location, matches);\n            savedScrollPositions2[key] = getScrollPosition();\n        }\n    }\n    function getSavedScrollPosition(location, matches) {\n        if (savedScrollPositions2) {\n            let key = getScrollKey(location, matches);\n            let y = savedScrollPositions2[key];\n            if (typeof y === \"number\") return y;\n        }\n        return null;\n    }\n    function checkFogOfWar(matches, routesToUse, pathname) {\n        if (patchRoutesOnNavigationImpl) {\n            if (!matches) {\n                let fogMatches = $c5b33ec0dccca72b$var$matchRoutesImpl(routesToUse, pathname, basename, true);\n                return {\n                    active: true,\n                    matches: fogMatches || []\n                };\n            } else if (Object.keys(matches[0].params).length > 0) {\n                let partialMatches = $c5b33ec0dccca72b$var$matchRoutesImpl(routesToUse, pathname, basename, true);\n                return {\n                    active: true,\n                    matches: partialMatches\n                };\n            }\n        }\n        return {\n            active: false,\n            matches: null\n        };\n    }\n    async function discoverRoutes(matches, pathname, signal) {\n        if (!patchRoutesOnNavigationImpl) return {\n            type: \"success\",\n            matches: matches\n        };\n        let partialMatches = matches;\n        while(true){\n            let isNonHMR = inFlightDataRoutes == null;\n            let routesToUse = inFlightDataRoutes || dataRoutes;\n            let localManifest = manifest;\n            try {\n                await patchRoutesOnNavigationImpl({\n                    signal: signal,\n                    path: pathname,\n                    matches: partialMatches,\n                    patch: (routeId, children)=>{\n                        if (signal.aborted) return;\n                        $c5b33ec0dccca72b$var$patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);\n                    }\n                });\n            } catch (e) {\n                return {\n                    type: \"error\",\n                    error: e,\n                    partialMatches: partialMatches\n                };\n            } finally{\n                if (isNonHMR && !signal.aborted) dataRoutes = [\n                    ...dataRoutes\n                ];\n            }\n            if (signal.aborted) return {\n                type: \"aborted\"\n            };\n            let newMatches = $c5b33ec0dccca72b$export$2708184779ceb39d(routesToUse, pathname, basename);\n            if (newMatches) return {\n                type: \"success\",\n                matches: newMatches\n            };\n            let newPartialMatches = $c5b33ec0dccca72b$var$matchRoutesImpl(routesToUse, pathname, basename, true);\n            if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i)=>m.route.id === newPartialMatches[i].route.id)) return {\n                type: \"success\",\n                matches: null\n            };\n            partialMatches = newPartialMatches;\n        }\n    }\n    function _internalSetRoutes(newRoutes) {\n        manifest = {};\n        inFlightDataRoutes = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);\n    }\n    function patchRoutes(routeId, children) {\n        let isNonHMR = inFlightDataRoutes == null;\n        let routesToUse = inFlightDataRoutes || dataRoutes;\n        $c5b33ec0dccca72b$var$patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);\n        if (isNonHMR) {\n            dataRoutes = [\n                ...dataRoutes\n            ];\n            updateState({});\n        }\n    }\n    router = {\n        get basename () {\n            return basename;\n        },\n        get future () {\n            return future;\n        },\n        get state () {\n            return state;\n        },\n        get routes () {\n            return dataRoutes;\n        },\n        get window () {\n            return routerWindow;\n        },\n        initialize: initialize,\n        subscribe: subscribe,\n        enableScrollRestoration: enableScrollRestoration,\n        navigate: navigate,\n        fetch: fetch2,\n        revalidate: revalidate,\n        // Passthrough to history-aware createHref used by useHref so we get proper\n        // hash-aware URLs in DOM paths\n        createHref: (to)=>init.history.createHref(to),\n        encodeLocation: (to)=>init.history.encodeLocation(to),\n        getFetcher: getFetcher,\n        deleteFetcher: queueFetcherForDeletion,\n        dispose: dispose,\n        getBlocker: getBlocker,\n        deleteBlocker: deleteBlocker,\n        patchRoutes: patchRoutes,\n        _internalFetchControllers: fetchControllers,\n        _internalSetRoutes: // TODO: Remove setRoutes, it's temporary to avoid dealing with\n        // updating the tree while validating the update algorithm.\n        _internalSetRoutes\n    };\n    return router;\n}\nfunction $c5b33ec0dccca72b$var$createStaticHandler(routes, opts) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n    let manifest = {};\n    let basename = (opts ? opts.basename : null) || \"/\";\n    let mapRouteProperties2 = opts?.mapRouteProperties || $c5b33ec0dccca72b$var$defaultMapRouteProperties;\n    let dataRoutes = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(routes, mapRouteProperties2, void 0, manifest);\n    async function query(request, { requestContext: requestContext, skipLoaderErrorBubbling: skipLoaderErrorBubbling, dataStrategy: dataStrategy } = {}) {\n        let url = new URL(request.url);\n        let method = request.method;\n        let location = $c5b33ec0dccca72b$var$createLocation(\"\", $c5b33ec0dccca72b$export$fe53371bee54353d(url), null, \"default\");\n        let matches = $c5b33ec0dccca72b$export$2708184779ceb39d(dataRoutes, location, basename);\n        if (!$c5b33ec0dccca72b$var$isValidMethod(method) && method !== \"HEAD\") {\n            let error = $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n                method: method\n            });\n            let { matches: methodNotAllowedMatches, route: route } = $c5b33ec0dccca72b$var$getShortCircuitMatches(dataRoutes);\n            return {\n                basename: basename,\n                location: location,\n                matches: methodNotAllowedMatches,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                    [route.id]: error\n                },\n                statusCode: error.status,\n                loaderHeaders: {},\n                actionHeaders: {}\n            };\n        } else if (!matches) {\n            let error = $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                pathname: location.pathname\n            });\n            let { matches: notFoundMatches, route: route } = $c5b33ec0dccca72b$var$getShortCircuitMatches(dataRoutes);\n            return {\n                basename: basename,\n                location: location,\n                matches: notFoundMatches,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                    [route.id]: error\n                },\n                statusCode: error.status,\n                loaderHeaders: {},\n                actionHeaders: {}\n            };\n        }\n        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n        if ($c5b33ec0dccca72b$var$isResponse(result)) return result;\n        return {\n            location: location,\n            basename: basename,\n            ...result\n        };\n    }\n    async function queryRoute(request, { routeId: routeId, requestContext: requestContext, dataStrategy: dataStrategy } = {}) {\n        let url = new URL(request.url);\n        let method = request.method;\n        let location = $c5b33ec0dccca72b$var$createLocation(\"\", $c5b33ec0dccca72b$export$fe53371bee54353d(url), null, \"default\");\n        let matches = $c5b33ec0dccca72b$export$2708184779ceb39d(dataRoutes, location, basename);\n        if (!$c5b33ec0dccca72b$var$isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") throw $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n            method: method\n        });\n        else if (!matches) throw $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n            pathname: location.pathname\n        });\n        let match = routeId ? matches.find((m)=>m.route.id === routeId) : $c5b33ec0dccca72b$var$getTargetMatch(matches, location);\n        if (routeId && !match) throw $c5b33ec0dccca72b$var$getInternalRouterError(403, {\n            pathname: location.pathname,\n            routeId: routeId\n        });\n        else if (!match) throw $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n            pathname: location.pathname\n        });\n        let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n        if ($c5b33ec0dccca72b$var$isResponse(result)) return result;\n        let error = result.errors ? Object.values(result.errors)[0] : void 0;\n        if (error !== void 0) throw error;\n        if (result.actionData) return Object.values(result.actionData)[0];\n        if (result.loaderData) return Object.values(result.loaderData)[0];\n        return void 0;\n    }\n    async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n        $c5b33ec0dccca72b$export$f5708dca728d7177(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n        try {\n            if ($c5b33ec0dccca72b$var$isMutationMethod(request.method)) {\n                let result2 = await submit(request, matches, routeMatch || $c5b33ec0dccca72b$var$getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n                return result2;\n            }\n            let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n            return $c5b33ec0dccca72b$var$isResponse(result) ? result : {\n                ...result,\n                actionData: null,\n                actionHeaders: {}\n            };\n        } catch (e) {\n            if ($c5b33ec0dccca72b$var$isDataStrategyResult(e) && $c5b33ec0dccca72b$var$isResponse(e.result)) {\n                if (e.type === \"error\" /* error */ ) throw e.result;\n                return e.result;\n            }\n            if ($c5b33ec0dccca72b$var$isRedirectResponse(e)) return e;\n            throw e;\n        }\n    }\n    async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n        let result;\n        if (!actionMatch.route.action && !actionMatch.route.lazy) {\n            let error = $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n                method: request.method,\n                pathname: new URL(request.url).pathname,\n                routeId: actionMatch.route.id\n            });\n            if (isRouteRequest) throw error;\n            result = {\n                type: \"error\" /* error */ ,\n                error: error\n            };\n        } else {\n            let results = await callDataStrategy(\"action\", request, [\n                actionMatch\n            ], matches, isRouteRequest, requestContext, dataStrategy);\n            result = results[actionMatch.route.id];\n            if (request.signal.aborted) $c5b33ec0dccca72b$var$throwStaticHandlerAbortedError(request, isRouteRequest);\n        }\n        if ($c5b33ec0dccca72b$var$isRedirectResult(result)) throw new Response(null, {\n            status: result.response.status,\n            headers: {\n                Location: result.response.headers.get(\"Location\")\n            }\n        });\n        if (isRouteRequest) {\n            if ($c5b33ec0dccca72b$var$isErrorResult(result)) throw result.error;\n            return {\n                matches: [\n                    actionMatch\n                ],\n                loaderData: {},\n                actionData: {\n                    [actionMatch.route.id]: result.data\n                },\n                errors: null,\n                // Note: statusCode + headers are unused here since queryRoute will\n                // return the raw Response or value\n                statusCode: 200,\n                loaderHeaders: {},\n                actionHeaders: {}\n            };\n        }\n        let loaderRequest = new Request(request.url, {\n            headers: request.headers,\n            redirect: request.redirect,\n            signal: request.signal\n        });\n        if ($c5b33ec0dccca72b$var$isErrorResult(result)) {\n            let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : $c5b33ec0dccca72b$var$findNearestBoundary(matches, actionMatch.route.id);\n            let context2 = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [\n                boundaryMatch.route.id,\n                result\n            ]);\n            return {\n                ...context2,\n                statusCode: $c5b33ec0dccca72b$export$972111febbeef05b(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n                actionData: null,\n                actionHeaders: {\n                    ...result.headers ? {\n                        [actionMatch.route.id]: result.headers\n                    } : {}\n                }\n            };\n        }\n        let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n        return {\n            ...context,\n            actionData: {\n                [actionMatch.route.id]: result.data\n            },\n            // action status codes take precedence over loader status codes\n            ...result.statusCode ? {\n                statusCode: result.statusCode\n            } : {},\n            actionHeaders: result.headers ? {\n                [actionMatch.route.id]: result.headers\n            } : {}\n        };\n    }\n    async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n        let isRouteRequest = routeMatch != null;\n        if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) throw $c5b33ec0dccca72b$var$getInternalRouterError(400, {\n            method: request.method,\n            pathname: new URL(request.url).pathname,\n            routeId: routeMatch?.route.id\n        });\n        let requestMatches = routeMatch ? [\n            routeMatch\n        ] : pendingActionResult && $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? $c5b33ec0dccca72b$var$getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n        let matchesToLoad = requestMatches.filter((m)=>m.route.loader || m.route.lazy);\n        if (matchesToLoad.length === 0) return {\n            matches: matches,\n            // Add a null for all matched routes for proper revalidation on the client\n            loaderData: matches.reduce((acc, m)=>Object.assign(acc, {\n                    [m.route.id]: null\n                }), {}),\n            errors: pendingActionResult && $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error\n            } : null,\n            statusCode: 200,\n            loaderHeaders: {}\n        };\n        let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n        if (request.signal.aborted) $c5b33ec0dccca72b$var$throwStaticHandlerAbortedError(request, isRouteRequest);\n        let context = $c5b33ec0dccca72b$var$processRouteLoaderData(matches, results, pendingActionResult, true, skipLoaderErrorBubbling);\n        let executedLoaders = new Set(matchesToLoad.map((match)=>match.route.id));\n        matches.forEach((match)=>{\n            if (!executedLoaders.has(match.route.id)) context.loaderData[match.route.id] = null;\n        });\n        return {\n            ...context,\n            matches: matches\n        };\n    }\n    async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n        let results = await $c5b33ec0dccca72b$var$callDataStrategyImpl(dataStrategy || $c5b33ec0dccca72b$var$defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties2, requestContext);\n        let dataResults = {};\n        await Promise.all(matches.map(async (match)=>{\n            if (!(match.route.id in results)) return;\n            let result = results[match.route.id];\n            if ($c5b33ec0dccca72b$var$isRedirectDataStrategyResult(result)) {\n                let response = result.result;\n                throw $c5b33ec0dccca72b$var$normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename);\n            }\n            if ($c5b33ec0dccca72b$var$isResponse(result.result) && isRouteRequest) throw result;\n            dataResults[match.route.id] = await $c5b33ec0dccca72b$var$convertDataStrategyResultToDataResult(result);\n        }));\n        return dataResults;\n    }\n    return {\n        dataRoutes: dataRoutes,\n        query: query,\n        queryRoute: queryRoute\n    };\n}\nfunction $c5b33ec0dccca72b$var$getStaticContextFromError(routes, context, error) {\n    let newContext = {\n        ...context,\n        statusCode: $c5b33ec0dccca72b$export$972111febbeef05b(error) ? error.status : 500,\n        errors: {\n            [context._deepestRenderedBoundaryId || routes[0].id]: error\n        }\n    };\n    return newContext;\n}\nfunction $c5b33ec0dccca72b$var$throwStaticHandlerAbortedError(request, isRouteRequest) {\n    if (request.signal.reason !== void 0) throw request.signal.reason;\n    let method = isRouteRequest ? \"queryRoute\" : \"query\";\n    throw new Error(`${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`);\n}\nfunction $c5b33ec0dccca72b$var$isSubmissionNavigation(opts) {\n    return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction $c5b33ec0dccca72b$var$normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n    let contextualMatches;\n    let activeRouteMatch;\n    if (fromRouteId) {\n        contextualMatches = [];\n        for (let match of matches){\n            contextualMatches.push(match);\n            if (match.route.id === fromRouteId) {\n                activeRouteMatch = match;\n                break;\n            }\n        }\n    } else {\n        contextualMatches = matches;\n        activeRouteMatch = matches[matches.length - 1];\n    }\n    let path = $c5b33ec0dccca72b$var$resolveTo(to ? to : \".\", $c5b33ec0dccca72b$var$getResolveToMatches(contextualMatches), $c5b33ec0dccca72b$var$stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n    if (to == null) {\n        path.search = location.search;\n        path.hash = location.hash;\n    }\n    if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n        let nakedIndex = $c5b33ec0dccca72b$var$hasNakedIndexQuery(path.search);\n        if (activeRouteMatch.route.index && !nakedIndex) path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n        else if (!activeRouteMatch.route.index && nakedIndex) {\n            let params = new URLSearchParams(path.search);\n            let indexValues = params.getAll(\"index\");\n            params.delete(\"index\");\n            indexValues.filter((v)=>v).forEach((v)=>params.append(\"index\", v));\n            let qs = params.toString();\n            path.search = qs ? `?${qs}` : \"\";\n        }\n    }\n    if (basename !== \"/\") path.pathname = path.pathname === \"/\" ? basename : $c5b33ec0dccca72b$var$joinPaths([\n        basename,\n        path.pathname\n    ]);\n    return $c5b33ec0dccca72b$export$fe53371bee54353d(path);\n}\nfunction $c5b33ec0dccca72b$var$normalizeNavigateOptions(isFetcher, path, opts) {\n    if (!opts || !$c5b33ec0dccca72b$var$isSubmissionNavigation(opts)) return {\n        path: path\n    };\n    if (opts.formMethod && !$c5b33ec0dccca72b$var$isValidMethod(opts.formMethod)) return {\n        path: path,\n        error: $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n            method: opts.formMethod\n        })\n    };\n    let getInvalidBodyError = ()=>({\n            path: path,\n            error: $c5b33ec0dccca72b$var$getInternalRouterError(400, {\n                type: \"invalid-body\"\n            })\n        });\n    let rawFormMethod = opts.formMethod || \"get\";\n    let formMethod = rawFormMethod.toUpperCase();\n    let formAction = $c5b33ec0dccca72b$var$stripHashFromPath(path);\n    if (opts.body !== void 0) {\n        if (opts.formEncType === \"text/plain\") {\n            if (!$c5b33ec0dccca72b$var$isMutationMethod(formMethod)) return getInvalidBodyError();\n            let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce((acc, [name, value])=>`${acc}${name}=${value}\n`, \"\") : String(opts.body);\n            return {\n                path: path,\n                submission: {\n                    formMethod: formMethod,\n                    formAction: formAction,\n                    formEncType: opts.formEncType,\n                    formData: void 0,\n                    json: void 0,\n                    text: text\n                }\n            };\n        } else if (opts.formEncType === \"application/json\") {\n            if (!$c5b33ec0dccca72b$var$isMutationMethod(formMethod)) return getInvalidBodyError();\n            try {\n                let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n                return {\n                    path: path,\n                    submission: {\n                        formMethod: formMethod,\n                        formAction: formAction,\n                        formEncType: opts.formEncType,\n                        formData: void 0,\n                        json: json,\n                        text: void 0\n                    }\n                };\n            } catch (e) {\n                return getInvalidBodyError();\n            }\n        }\n    }\n    $c5b33ec0dccca72b$export$f5708dca728d7177(typeof FormData === \"function\", \"FormData is not available in this environment\");\n    let searchParams;\n    let formData;\n    if (opts.formData) {\n        searchParams = $c5b33ec0dccca72b$var$convertFormDataToSearchParams(opts.formData);\n        formData = opts.formData;\n    } else if (opts.body instanceof FormData) {\n        searchParams = $c5b33ec0dccca72b$var$convertFormDataToSearchParams(opts.body);\n        formData = opts.body;\n    } else if (opts.body instanceof URLSearchParams) {\n        searchParams = opts.body;\n        formData = $c5b33ec0dccca72b$var$convertSearchParamsToFormData(searchParams);\n    } else if (opts.body == null) {\n        searchParams = new URLSearchParams();\n        formData = new FormData();\n    } else try {\n        searchParams = new URLSearchParams(opts.body);\n        formData = $c5b33ec0dccca72b$var$convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n        return getInvalidBodyError();\n    }\n    let submission = {\n        formMethod: formMethod,\n        formAction: formAction,\n        formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n        formData: formData,\n        json: void 0,\n        text: void 0\n    };\n    if ($c5b33ec0dccca72b$var$isMutationMethod(submission.formMethod)) return {\n        path: path,\n        submission: submission\n    };\n    let parsedPath = $c5b33ec0dccca72b$export$8ccf933b0513f8d0(path);\n    if (isFetcher && parsedPath.search && $c5b33ec0dccca72b$var$hasNakedIndexQuery(parsedPath.search)) searchParams.append(\"index\", \"\");\n    parsedPath.search = `?${searchParams}`;\n    return {\n        path: $c5b33ec0dccca72b$export$fe53371bee54353d(parsedPath),\n        submission: submission\n    };\n}\nfunction $c5b33ec0dccca72b$var$getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\n    let index = matches.findIndex((m)=>m.route.id === boundaryId);\n    if (index >= 0) return matches.slice(0, includeBoundary ? index + 1 : index);\n    return matches;\n}\nfunction $c5b33ec0dccca72b$var$getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n    let actionResult = pendingActionResult ? $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n    let currentUrl = history.createURL(state.location);\n    let nextUrl = history.createURL(location);\n    let boundaryMatches = matches;\n    if (initialHydration && state.errors) boundaryMatches = $c5b33ec0dccca72b$var$getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n    else if (pendingActionResult && $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1])) boundaryMatches = $c5b33ec0dccca72b$var$getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n    let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n    let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n    let navigationMatches = boundaryMatches.filter((match, index)=>{\n        let { route: route } = match;\n        if (route.lazy) return true;\n        if (route.loader == null) return false;\n        if (initialHydration) return $c5b33ec0dccca72b$var$shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n        if ($c5b33ec0dccca72b$var$isNewLoader(state.loaderData, state.matches[index], match)) return true;\n        let currentRouteMatch = state.matches[index];\n        let nextRouteMatch = match;\n        return $c5b33ec0dccca72b$var$shouldRevalidateLoader(match, {\n            currentUrl: currentUrl,\n            currentParams: currentRouteMatch.params,\n            nextUrl: nextUrl,\n            nextParams: nextRouteMatch.params,\n            ...submission,\n            actionResult: actionResult,\n            actionStatus: actionStatus,\n            defaultShouldRevalidate: shouldSkipRevalidation ? false : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n            isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n            currentUrl.search !== nextUrl.search || $c5b33ec0dccca72b$var$isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n        });\n    });\n    let revalidatingFetchers = [];\n    fetchLoadMatches.forEach((f, key)=>{\n        if (initialHydration || !matches.some((m)=>m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) return;\n        let fetcherMatches = $c5b33ec0dccca72b$export$2708184779ceb39d(routesToUse, f.path, basename);\n        if (!fetcherMatches) {\n            revalidatingFetchers.push({\n                key: key,\n                routeId: f.routeId,\n                path: f.path,\n                matches: null,\n                match: null,\n                controller: null\n            });\n            return;\n        }\n        let fetcher = state.fetchers.get(key);\n        let fetcherMatch = $c5b33ec0dccca72b$var$getTargetMatch(fetcherMatches, f.path);\n        let shouldRevalidate = false;\n        if (fetchRedirectIds.has(key)) shouldRevalidate = false;\n        else if (cancelledFetcherLoads.has(key)) {\n            cancelledFetcherLoads.delete(key);\n            shouldRevalidate = true;\n        } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) shouldRevalidate = isRevalidationRequired;\n        else shouldRevalidate = $c5b33ec0dccca72b$var$shouldRevalidateLoader(fetcherMatch, {\n            currentUrl: currentUrl,\n            currentParams: state.matches[state.matches.length - 1].params,\n            nextUrl: nextUrl,\n            nextParams: matches[matches.length - 1].params,\n            ...submission,\n            actionResult: actionResult,\n            actionStatus: actionStatus,\n            defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n        });\n        if (shouldRevalidate) revalidatingFetchers.push({\n            key: key,\n            routeId: f.routeId,\n            path: f.path,\n            matches: fetcherMatches,\n            match: fetcherMatch,\n            controller: new AbortController()\n        });\n    });\n    return [\n        navigationMatches,\n        revalidatingFetchers\n    ];\n}\nfunction $c5b33ec0dccca72b$var$shouldLoadRouteOnHydration(route, loaderData, errors) {\n    if (route.lazy) return true;\n    if (!route.loader) return false;\n    let hasData = loaderData != null && loaderData[route.id] !== void 0;\n    let hasError = errors != null && errors[route.id] !== void 0;\n    if (!hasData && hasError) return false;\n    if (typeof route.loader === \"function\" && route.loader.hydrate === true) return true;\n    return !hasData && !hasError;\n}\nfunction $c5b33ec0dccca72b$var$isNewLoader(currentLoaderData, currentMatch, match) {\n    let isNew = // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n    let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n    return isNew || isMissingData;\n}\nfunction $c5b33ec0dccca72b$var$isNewRouteInstance(currentMatch, match) {\n    let currentPath = currentMatch.route.path;\n    return(// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]);\n}\nfunction $c5b33ec0dccca72b$var$shouldRevalidateLoader(loaderMatch, arg) {\n    if (loaderMatch.route.shouldRevalidate) {\n        let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n        if (typeof routeChoice === \"boolean\") return routeChoice;\n    }\n    return arg.defaultShouldRevalidate;\n}\nfunction $c5b33ec0dccca72b$var$patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n    let childrenToPatch;\n    if (routeId) {\n        let route = manifest[routeId];\n        $c5b33ec0dccca72b$export$f5708dca728d7177(route, `No route found to patch children into: routeId = ${routeId}`);\n        if (!route.children) route.children = [];\n        childrenToPatch = route.children;\n    } else childrenToPatch = routesToUse;\n    let uniqueChildren = children.filter((newRoute)=>!childrenToPatch.some((existingRoute)=>$c5b33ec0dccca72b$var$isSameRoute(newRoute, existingRoute)));\n    let newRoutes = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [\n        routeId || \"_\",\n        \"patch\",\n        String(childrenToPatch?.length || \"0\")\n    ], manifest);\n    childrenToPatch.push(...newRoutes);\n}\nfunction $c5b33ec0dccca72b$var$isSameRoute(newRoute, existingRoute) {\n    if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) return true;\n    if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) return false;\n    if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) return true;\n    return newRoute.children.every((aChild, i)=>existingRoute.children?.some((bChild)=>$c5b33ec0dccca72b$var$isSameRoute(aChild, bChild)));\n}\nasync function $c5b33ec0dccca72b$var$loadLazyRouteModule(route, mapRouteProperties2, manifest) {\n    if (!route.lazy) return;\n    let lazyRoute = await route.lazy();\n    if (!route.lazy) return;\n    let routeToUpdate = manifest[route.id];\n    $c5b33ec0dccca72b$export$f5708dca728d7177(routeToUpdate, \"No route found in manifest\");\n    let routeUpdates = {};\n    for(let lazyRouteProperty in lazyRoute){\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        $c5b33ec0dccca72b$var$warning(!isPropertyStaticallyDefined, `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`);\n        if (!isPropertyStaticallyDefined && !$c5b33ec0dccca72b$var$immutableRouteKeys.has(lazyRouteProperty)) routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n    Object.assign(routeToUpdate, routeUpdates);\n    Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n    });\n}\nasync function $c5b33ec0dccca72b$var$defaultDataStrategy({ matches: matches }) {\n    let matchesToLoad = matches.filter((m)=>m.shouldLoad);\n    let results = await Promise.all(matchesToLoad.map((m)=>m.resolve()));\n    return results.reduce((acc, result, i)=>Object.assign(acc, {\n            [matchesToLoad[i].route.id]: result\n        }), {});\n}\nasync function $c5b33ec0dccca72b$var$callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\n    let loadRouteDefinitionsPromises = matches.map((m)=>m.route.lazy ? $c5b33ec0dccca72b$var$loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0);\n    let dsMatches = matches.map((match, i)=>{\n        let loadRoutePromise = loadRouteDefinitionsPromises[i];\n        let shouldLoad = matchesToLoad.some((m)=>m.route.id === match.route.id);\n        let resolve = async (handlerOverride)=>{\n            if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) shouldLoad = true;\n            return shouldLoad ? $c5b33ec0dccca72b$var$callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n                type: \"data\" /* data */ ,\n                result: void 0\n            });\n        };\n        return {\n            ...match,\n            shouldLoad: shouldLoad,\n            resolve: resolve\n        };\n    });\n    let results = await dataStrategyImpl({\n        matches: dsMatches,\n        request: request,\n        params: matches[0].params,\n        fetcherKey: fetcherKey,\n        context: requestContext\n    });\n    try {\n        await Promise.all(loadRouteDefinitionsPromises);\n    } catch (e) {}\n    return results;\n}\nasync function $c5b33ec0dccca72b$var$callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n    let result;\n    let onReject;\n    let runHandler = (handler)=>{\n        let reject;\n        let abortPromise = new Promise((_, r)=>reject = r);\n        onReject = ()=>reject();\n        request.signal.addEventListener(\"abort\", onReject);\n        let actualHandler = (ctx)=>{\n            if (typeof handler !== \"function\") return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`));\n            return handler({\n                request: request,\n                params: match.params,\n                context: staticContext\n            }, ...ctx !== void 0 ? [\n                ctx\n            ] : []);\n        };\n        let handlerPromise = (async ()=>{\n            try {\n                let val = await (handlerOverride ? handlerOverride((ctx)=>actualHandler(ctx)) : actualHandler());\n                return {\n                    type: \"data\",\n                    result: val\n                };\n            } catch (e) {\n                return {\n                    type: \"error\",\n                    result: e\n                };\n            }\n        })();\n        return Promise.race([\n            handlerPromise,\n            abortPromise\n        ]);\n    };\n    try {\n        let handler = match.route[type];\n        if (loadRoutePromise) {\n            if (handler) {\n                let handlerError;\n                let [value] = await Promise.all([\n                    // If the handler throws, don't let it immediately bubble out,\n                    // since we need to let the lazy() execution finish so we know if this\n                    // route has a boundary that can handle the error\n                    runHandler(handler).catch((e)=>{\n                        handlerError = e;\n                    }),\n                    loadRoutePromise\n                ]);\n                if (handlerError !== void 0) throw handlerError;\n                result = value;\n            } else {\n                await loadRoutePromise;\n                handler = match.route[type];\n                if (handler) result = await runHandler(handler);\n                else if (type === \"action\") {\n                    let url = new URL(request.url);\n                    let pathname = url.pathname + url.search;\n                    throw $c5b33ec0dccca72b$var$getInternalRouterError(405, {\n                        method: request.method,\n                        pathname: pathname,\n                        routeId: match.route.id\n                    });\n                } else return {\n                    type: \"data\" /* data */ ,\n                    result: void 0\n                };\n            }\n        } else if (!handler) {\n            let url = new URL(request.url);\n            let pathname = url.pathname + url.search;\n            throw $c5b33ec0dccca72b$var$getInternalRouterError(404, {\n                pathname: pathname\n            });\n        } else result = await runHandler(handler);\n    } catch (e) {\n        return {\n            type: \"error\" /* error */ ,\n            result: e\n        };\n    } finally{\n        if (onReject) request.signal.removeEventListener(\"abort\", onReject);\n    }\n    return result;\n}\nasync function $c5b33ec0dccca72b$var$convertDataStrategyResultToDataResult(dataStrategyResult) {\n    let { result: result, type: type } = dataStrategyResult;\n    if ($c5b33ec0dccca72b$var$isResponse(result)) {\n        let data2;\n        try {\n            let contentType = result.headers.get(\"Content-Type\");\n            if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n                if (result.body == null) data2 = null;\n                else data2 = await result.json();\n            } else data2 = await result.text();\n        } catch (e) {\n            return {\n                type: \"error\" /* error */ ,\n                error: e\n            };\n        }\n        if (type === \"error\" /* error */ ) return {\n            type: \"error\" /* error */ ,\n            error: new $c5b33ec0dccca72b$export$f2680fa305b734ca(result.status, result.statusText, data2),\n            statusCode: result.status,\n            headers: result.headers\n        };\n        return {\n            type: \"data\" /* data */ ,\n            data: data2,\n            statusCode: result.status,\n            headers: result.headers\n        };\n    }\n    if (type === \"error\" /* error */ ) {\n        if ($c5b33ec0dccca72b$var$isDataWithResponseInit(result)) {\n            if (result.data instanceof Error) return {\n                type: \"error\" /* error */ ,\n                error: result.data,\n                statusCode: result.init?.status,\n                headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n            };\n            return {\n                type: \"error\" /* error */ ,\n                error: new $c5b33ec0dccca72b$export$f2680fa305b734ca(result.init?.status || 500, void 0, result.data),\n                statusCode: $c5b33ec0dccca72b$export$972111febbeef05b(result) ? result.status : void 0,\n                headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n            };\n        }\n        return {\n            type: \"error\" /* error */ ,\n            error: result,\n            statusCode: $c5b33ec0dccca72b$export$972111febbeef05b(result) ? result.status : void 0\n        };\n    }\n    if ($c5b33ec0dccca72b$var$isDataWithResponseInit(result)) return {\n        type: \"data\" /* data */ ,\n        data: result.data,\n        statusCode: result.init?.status,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n    return {\n        type: \"data\" /* data */ ,\n        data: result\n    };\n}\nfunction $c5b33ec0dccca72b$var$normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n    let location = response.headers.get(\"Location\");\n    $c5b33ec0dccca72b$export$f5708dca728d7177(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n    if (!$c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX.test(location)) {\n        let trimmedMatches = matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1);\n        location = $c5b33ec0dccca72b$var$normalizeTo(new URL(request.url), trimmedMatches, basename, location);\n        response.headers.set(\"Location\", location);\n    }\n    return response;\n}\nfunction $c5b33ec0dccca72b$var$normalizeRedirectLocation(location, currentUrl, basename) {\n    if ($c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX.test(location)) {\n        let normalizedLocation = location;\n        let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n        let isSameBasename = $c5b33ec0dccca72b$var$stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) return url.pathname + url.search + url.hash;\n    }\n    return location;\n}\nfunction $c5b33ec0dccca72b$var$createClientSideRequest(history, location, signal, submission) {\n    let url = history.createURL($c5b33ec0dccca72b$var$stripHashFromPath(location)).toString();\n    let init = {\n        signal: signal\n    };\n    if (submission && $c5b33ec0dccca72b$var$isMutationMethod(submission.formMethod)) {\n        let { formMethod: formMethod, formEncType: formEncType } = submission;\n        init.method = formMethod.toUpperCase();\n        if (formEncType === \"application/json\") {\n            init.headers = new Headers({\n                \"Content-Type\": formEncType\n            });\n            init.body = JSON.stringify(submission.json);\n        } else if (formEncType === \"text/plain\") init.body = submission.text;\n        else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) init.body = $c5b33ec0dccca72b$var$convertFormDataToSearchParams(submission.formData);\n        else init.body = submission.formData;\n    }\n    return new Request(url, init);\n}\nfunction $c5b33ec0dccca72b$var$convertFormDataToSearchParams(formData) {\n    let searchParams = new URLSearchParams();\n    for (let [key, value] of formData.entries())searchParams.append(key, typeof value === \"string\" ? value : value.name);\n    return searchParams;\n}\nfunction $c5b33ec0dccca72b$var$convertSearchParamsToFormData(searchParams) {\n    let formData = new FormData();\n    for (let [key, value] of searchParams.entries())formData.append(key, value);\n    return formData;\n}\nfunction $c5b33ec0dccca72b$var$processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n    let loaderData = {};\n    let errors = null;\n    let statusCode;\n    let foundError = false;\n    let loaderHeaders = {};\n    let pendingError = pendingActionResult && $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n    matches.forEach((match)=>{\n        if (!(match.route.id in results)) return;\n        let id = match.route.id;\n        let result = results[id];\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!$c5b33ec0dccca72b$var$isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n        if ($c5b33ec0dccca72b$var$isErrorResult(result)) {\n            let error = result.error;\n            if (pendingError !== void 0) {\n                error = pendingError;\n                pendingError = void 0;\n            }\n            errors = errors || {};\n            if (skipLoaderErrorBubbling) errors[id] = error;\n            else {\n                let boundaryMatch = $c5b33ec0dccca72b$var$findNearestBoundary(matches, id);\n                if (errors[boundaryMatch.route.id] == null) errors[boundaryMatch.route.id] = error;\n            }\n            if (!isStaticHandler) loaderData[id] = $c5b33ec0dccca72b$var$ResetLoaderDataSymbol;\n            if (!foundError) {\n                foundError = true;\n                statusCode = $c5b33ec0dccca72b$export$972111febbeef05b(result.error) ? result.error.status : 500;\n            }\n            if (result.headers) loaderHeaders[id] = result.headers;\n        } else {\n            loaderData[id] = result.data;\n            if (result.statusCode && result.statusCode !== 200 && !foundError) statusCode = result.statusCode;\n            if (result.headers) loaderHeaders[id] = result.headers;\n        }\n    });\n    if (pendingError !== void 0 && pendingActionResult) {\n        errors = {\n            [pendingActionResult[0]]: pendingError\n        };\n        loaderData[pendingActionResult[0]] = void 0;\n    }\n    return {\n        loaderData: loaderData,\n        errors: errors,\n        statusCode: statusCode || 200,\n        loaderHeaders: loaderHeaders\n    };\n}\nfunction $c5b33ec0dccca72b$var$processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n    let { loaderData: loaderData, errors: errors } = $c5b33ec0dccca72b$var$processRouteLoaderData(matches, results, pendingActionResult);\n    revalidatingFetchers.forEach((rf)=>{\n        let { key: key, match: match, controller: controller } = rf;\n        let result = fetcherResults[key];\n        $c5b33ec0dccca72b$export$f5708dca728d7177(result, \"Did not find corresponding fetcher result\");\n        if (controller && controller.signal.aborted) return;\n        else if ($c5b33ec0dccca72b$var$isErrorResult(result)) {\n            let boundaryMatch = $c5b33ec0dccca72b$var$findNearestBoundary(state.matches, match?.route.id);\n            if (!(errors && errors[boundaryMatch.route.id])) errors = {\n                ...errors,\n                [boundaryMatch.route.id]: result.error\n            };\n            state.fetchers.delete(key);\n        } else if ($c5b33ec0dccca72b$var$isRedirectResult(result)) $c5b33ec0dccca72b$export$f5708dca728d7177(false, \"Unhandled fetcher revalidation redirect\");\n        else {\n            let doneFetcher = $c5b33ec0dccca72b$var$getDoneFetcher(result.data);\n            state.fetchers.set(key, doneFetcher);\n        }\n    });\n    return {\n        loaderData: loaderData,\n        errors: errors\n    };\n}\nfunction $c5b33ec0dccca72b$var$mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n    let mergedLoaderData = Object.entries(newLoaderData).filter(([, v])=>v !== $c5b33ec0dccca72b$var$ResetLoaderDataSymbol).reduce((merged, [k, v])=>{\n        merged[k] = v;\n        return merged;\n    }, {});\n    for (let match of matches){\n        let id = match.route.id;\n        if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) mergedLoaderData[id] = loaderData[id];\n        if (errors && errors.hasOwnProperty(id)) break;\n    }\n    return mergedLoaderData;\n}\nfunction $c5b33ec0dccca72b$var$getActionDataForCommit(pendingActionResult) {\n    if (!pendingActionResult) return {};\n    return $c5b33ec0dccca72b$var$isErrorResult(pendingActionResult[1]) ? {\n        // Clear out prior actionData on errors\n        actionData: {}\n    } : {\n        actionData: {\n            [pendingActionResult[0]]: pendingActionResult[1].data\n        }\n    };\n}\nfunction $c5b33ec0dccca72b$var$findNearestBoundary(matches, routeId) {\n    let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1) : [\n        ...matches\n    ];\n    return eligibleMatches.reverse().find((m)=>m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction $c5b33ec0dccca72b$var$getShortCircuitMatches(routes) {\n    let route = routes.length === 1 ? routes[0] : routes.find((r)=>r.index || !r.path || r.path === \"/\") || {\n        id: `__shim-error-route__`\n    };\n    return {\n        matches: [\n            {\n                params: {},\n                pathname: \"\",\n                pathnameBase: \"\",\n                route: route\n            }\n        ],\n        route: route\n    };\n}\nfunction $c5b33ec0dccca72b$var$getInternalRouterError(status, { pathname: pathname, routeId: routeId, method: method, type: type, message: message } = {}) {\n    let statusText = \"Unknown Server Error\";\n    let errorMessage = \"Unknown @remix-run/router error\";\n    if (status === 400) {\n        statusText = \"Bad Request\";\n        if (method && pathname && routeId) errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n        else if (type === \"invalid-body\") errorMessage = \"Unable to encode submission body\";\n    } else if (status === 403) {\n        statusText = \"Forbidden\";\n        errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n    } else if (status === 404) {\n        statusText = \"Not Found\";\n        errorMessage = `No route matches URL \"${pathname}\"`;\n    } else if (status === 405) {\n        statusText = \"Method Not Allowed\";\n        if (method && pathname && routeId) errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n        else if (method) errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n    return new $c5b33ec0dccca72b$export$f2680fa305b734ca(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction $c5b33ec0dccca72b$var$findRedirect(results) {\n    let entries = Object.entries(results);\n    for(let i = entries.length - 1; i >= 0; i--){\n        let [key, result] = entries[i];\n        if ($c5b33ec0dccca72b$var$isRedirectResult(result)) return {\n            key: key,\n            result: result\n        };\n    }\n}\nfunction $c5b33ec0dccca72b$var$stripHashFromPath(path) {\n    let parsedPath = typeof path === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(path) : path;\n    return $c5b33ec0dccca72b$export$fe53371bee54353d({\n        ...parsedPath,\n        hash: \"\"\n    });\n}\nfunction $c5b33ec0dccca72b$var$isHashChangeOnly(a, b) {\n    if (a.pathname !== b.pathname || a.search !== b.search) return false;\n    if (a.hash === \"\") return b.hash !== \"\";\n    else if (a.hash === b.hash) return true;\n    else if (b.hash !== \"\") return true;\n    return false;\n}\nfunction $c5b33ec0dccca72b$var$isDataStrategyResult(result) {\n    return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */  || result.type === \"error\" /* error */ );\n}\nfunction $c5b33ec0dccca72b$var$isRedirectDataStrategyResult(result) {\n    return $c5b33ec0dccca72b$var$isResponse(result.result) && $c5b33ec0dccca72b$var$redirectStatusCodes.has(result.result.status);\n}\nfunction $c5b33ec0dccca72b$var$isErrorResult(result) {\n    return result.type === \"error\" /* error */ ;\n}\nfunction $c5b33ec0dccca72b$var$isRedirectResult(result) {\n    return (result && result.type) === \"redirect\" /* redirect */ ;\n}\nfunction $c5b33ec0dccca72b$var$isDataWithResponseInit(value) {\n    return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction $c5b33ec0dccca72b$var$isResponse(value) {\n    return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction $c5b33ec0dccca72b$var$isRedirectStatusCode(statusCode) {\n    return $c5b33ec0dccca72b$var$redirectStatusCodes.has(statusCode);\n}\nfunction $c5b33ec0dccca72b$var$isRedirectResponse(result) {\n    return $c5b33ec0dccca72b$var$isResponse(result) && $c5b33ec0dccca72b$var$isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction $c5b33ec0dccca72b$var$isValidMethod(method) {\n    return $c5b33ec0dccca72b$var$validRequestMethods.has(method.toUpperCase());\n}\nfunction $c5b33ec0dccca72b$var$isMutationMethod(method) {\n    return $c5b33ec0dccca72b$var$validMutationMethods.has(method.toUpperCase());\n}\nfunction $c5b33ec0dccca72b$var$hasNakedIndexQuery(search) {\n    return new URLSearchParams(search).getAll(\"index\").some((v)=>v === \"\");\n}\nfunction $c5b33ec0dccca72b$var$getTargetMatch(matches, location) {\n    let search = typeof location === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(location).search : location.search;\n    if (matches[matches.length - 1].route.index && $c5b33ec0dccca72b$var$hasNakedIndexQuery(search || \"\")) return matches[matches.length - 1];\n    let pathMatches = $c5b33ec0dccca72b$var$getPathContributingMatches(matches);\n    return pathMatches[pathMatches.length - 1];\n}\nfunction $c5b33ec0dccca72b$var$getSubmissionFromNavigation(navigation) {\n    let { formMethod: formMethod, formAction: formAction, formEncType: formEncType, text: text, formData: formData, json: json } = navigation;\n    if (!formMethod || !formAction || !formEncType) return;\n    if (text != null) return {\n        formMethod: formMethod,\n        formAction: formAction,\n        formEncType: formEncType,\n        formData: void 0,\n        json: void 0,\n        text: text\n    };\n    else if (formData != null) return {\n        formMethod: formMethod,\n        formAction: formAction,\n        formEncType: formEncType,\n        formData: formData,\n        json: void 0,\n        text: void 0\n    };\n    else if (json !== void 0) return {\n        formMethod: formMethod,\n        formAction: formAction,\n        formEncType: formEncType,\n        formData: void 0,\n        json: json,\n        text: void 0\n    };\n}\nfunction $c5b33ec0dccca72b$var$getLoadingNavigation(location, submission) {\n    if (submission) {\n        let navigation = {\n            state: \"loading\",\n            location: location,\n            formMethod: submission.formMethod,\n            formAction: submission.formAction,\n            formEncType: submission.formEncType,\n            formData: submission.formData,\n            json: submission.json,\n            text: submission.text\n        };\n        return navigation;\n    } else {\n        let navigation = {\n            state: \"loading\",\n            location: location,\n            formMethod: void 0,\n            formAction: void 0,\n            formEncType: void 0,\n            formData: void 0,\n            json: void 0,\n            text: void 0\n        };\n        return navigation;\n    }\n}\nfunction $c5b33ec0dccca72b$var$getSubmittingNavigation(location, submission) {\n    let navigation = {\n        state: \"submitting\",\n        location: location,\n        formMethod: submission.formMethod,\n        formAction: submission.formAction,\n        formEncType: submission.formEncType,\n        formData: submission.formData,\n        json: submission.json,\n        text: submission.text\n    };\n    return navigation;\n}\nfunction $c5b33ec0dccca72b$var$getLoadingFetcher(submission, data2) {\n    if (submission) {\n        let fetcher = {\n            state: \"loading\",\n            formMethod: submission.formMethod,\n            formAction: submission.formAction,\n            formEncType: submission.formEncType,\n            formData: submission.formData,\n            json: submission.json,\n            text: submission.text,\n            data: data2\n        };\n        return fetcher;\n    } else {\n        let fetcher = {\n            state: \"loading\",\n            formMethod: void 0,\n            formAction: void 0,\n            formEncType: void 0,\n            formData: void 0,\n            json: void 0,\n            text: void 0,\n            data: data2\n        };\n        return fetcher;\n    }\n}\nfunction $c5b33ec0dccca72b$var$getSubmittingFetcher(submission, existingFetcher) {\n    let fetcher = {\n        state: \"submitting\",\n        formMethod: submission.formMethod,\n        formAction: submission.formAction,\n        formEncType: submission.formEncType,\n        formData: submission.formData,\n        json: submission.json,\n        text: submission.text,\n        data: existingFetcher ? existingFetcher.data : void 0\n    };\n    return fetcher;\n}\nfunction $c5b33ec0dccca72b$var$getDoneFetcher(data2) {\n    let fetcher = {\n        state: \"idle\",\n        formMethod: void 0,\n        formAction: void 0,\n        formEncType: void 0,\n        formData: void 0,\n        json: void 0,\n        text: void 0,\n        data: data2\n    };\n    return fetcher;\n}\nfunction $c5b33ec0dccca72b$var$restoreAppliedTransitions(_window, transitions) {\n    try {\n        let sessionPositions = _window.sessionStorage.getItem($c5b33ec0dccca72b$var$TRANSITIONS_STORAGE_KEY);\n        if (sessionPositions) {\n            let json = JSON.parse(sessionPositions);\n            for (let [k, v] of Object.entries(json || {}))if (v && Array.isArray(v)) transitions.set(k, new Set(v || []));\n        }\n    } catch (e) {}\n}\nfunction $c5b33ec0dccca72b$var$persistAppliedTransitions(_window, transitions) {\n    if (transitions.size > 0) {\n        let json = {};\n        for (let [k, v] of transitions)json[k] = [\n            ...v\n        ];\n        try {\n            _window.sessionStorage.setItem($c5b33ec0dccca72b$var$TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n        } catch (error) {\n            $c5b33ec0dccca72b$var$warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);\n        }\n    }\n}\nfunction $c5b33ec0dccca72b$var$createDeferred() {\n    let resolve;\n    let reject;\n    let promise = new Promise((res, rej)=>{\n        resolve = async (val)=>{\n            res(val);\n            try {\n                await promise;\n            } catch (e) {}\n        };\n        reject = async (error)=>{\n            rej(error);\n            try {\n                await promise;\n            } catch (e) {}\n        };\n    });\n    return {\n        promise: promise,\n        resolve: //@ts-ignore\n        resolve,\n        reject: //@ts-ignore\n        reject\n    };\n}\nvar $c5b33ec0dccca72b$export$2eeee58951ff3c1c = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$export$2eeee58951ff3c1c.displayName = \"DataRouter\";\nvar $c5b33ec0dccca72b$export$315e3ffb01f217 = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$export$315e3ffb01f217.displayName = \"DataRouterState\";\nvar $c5b33ec0dccca72b$export$3681f408decb40d1 = $a972dfa956833003$exports.createContext({\n    isTransitioning: false\n});\n$c5b33ec0dccca72b$export$3681f408decb40d1.displayName = \"ViewTransition\";\nvar $c5b33ec0dccca72b$export$cb3f1df1bef00a39 = $a972dfa956833003$exports.createContext(/* @__PURE__ */ new Map());\n$c5b33ec0dccca72b$export$cb3f1df1bef00a39.displayName = \"Fetchers\";\nvar $c5b33ec0dccca72b$var$AwaitContext = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$var$AwaitContext.displayName = \"Await\";\nvar $c5b33ec0dccca72b$export$3044ab7fdabeaee6 = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$export$3044ab7fdabeaee6.displayName = \"Navigation\";\nvar $c5b33ec0dccca72b$export$e6a44b110a0c44d3 = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$export$e6a44b110a0c44d3.displayName = \"Location\";\nvar $c5b33ec0dccca72b$export$aac280ed165a4397 = $a972dfa956833003$exports.createContext({\n    outlet: null,\n    matches: [],\n    isDataRoute: false\n});\n$c5b33ec0dccca72b$export$aac280ed165a4397.displayName = \"Route\";\nvar $c5b33ec0dccca72b$var$RouteErrorContext = $a972dfa956833003$exports.createContext(null);\n$c5b33ec0dccca72b$var$RouteErrorContext.displayName = \"RouteError\";\nvar $c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS = true;\nfunction $c5b33ec0dccca72b$export$b66bb29c5006f12f(to, { relative: relative } = {}) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`);\n    let { basename: basename, navigator: navigator2 } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let { hash: hash, pathname: pathname, search: search } = $c5b33ec0dccca72b$export$e75d2a2d1b3c245b(to, {\n        relative: relative\n    });\n    let joinedPathname = pathname;\n    if (basename !== \"/\") joinedPathname = pathname === \"/\" ? basename : $c5b33ec0dccca72b$var$joinPaths([\n        basename,\n        pathname\n    ]);\n    return navigator2.createHref({\n        pathname: joinedPathname,\n        search: search,\n        hash: hash\n    });\n}\nfunction $c5b33ec0dccca72b$export$9c954a9d03d32f4a() {\n    return $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$e6a44b110a0c44d3) != null;\n}\nfunction $c5b33ec0dccca72b$export$45d76561a5302f2b() {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`);\n    return $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$e6a44b110a0c44d3).location;\n}\nfunction $c5b33ec0dccca72b$export$1b3f31771c5d07c() {\n    return $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$e6a44b110a0c44d3).navigationType;\n}\nfunction $c5b33ec0dccca72b$export$6c330e8992e8a295(pattern) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`);\n    let { pathname: pathname } = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    return $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$export$81336c211d5ff295(pattern, $c5b33ec0dccca72b$var$decodePath(pathname)), [\n        pathname,\n        pattern\n    ]);\n}\nvar $c5b33ec0dccca72b$var$navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction $c5b33ec0dccca72b$var$useIsomorphicLayoutEffect(cb) {\n    let isStatic = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6).static;\n    if (!isStatic) $a972dfa956833003$exports.useLayoutEffect(cb);\n}\nfunction $c5b33ec0dccca72b$export$9770f232ac06a008() {\n    let { isDataRoute: isDataRoute } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    return isDataRoute ? $c5b33ec0dccca72b$var$useNavigateStable() : $c5b33ec0dccca72b$var$useNavigateUnstable();\n}\nfunction $c5b33ec0dccca72b$var$useNavigateUnstable() {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`);\n    let dataRouterContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$2eeee58951ff3c1c);\n    let { basename: basename, navigator: navigator2 } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let { matches: matches } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let { pathname: locationPathname } = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let routePathnamesJson = JSON.stringify($c5b33ec0dccca72b$var$getResolveToMatches(matches));\n    let activeRef = $a972dfa956833003$exports.useRef(false);\n    $c5b33ec0dccca72b$var$useIsomorphicLayoutEffect(()=>{\n        activeRef.current = true;\n    });\n    let navigate = $a972dfa956833003$exports.useCallback((to, options = {})=>{\n        $c5b33ec0dccca72b$var$warning(activeRef.current, $c5b33ec0dccca72b$var$navigateEffectWarning);\n        if (!activeRef.current) return;\n        if (typeof to === \"number\") {\n            navigator2.go(to);\n            return;\n        }\n        let path = $c5b33ec0dccca72b$var$resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n        if (dataRouterContext == null && basename !== \"/\") path.pathname = path.pathname === \"/\" ? basename : $c5b33ec0dccca72b$var$joinPaths([\n            basename,\n            path.pathname\n        ]);\n        (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);\n    }, [\n        basename,\n        navigator2,\n        routePathnamesJson,\n        locationPathname,\n        dataRouterContext\n    ]);\n    return navigate;\n}\nvar $c5b33ec0dccca72b$var$OutletContext = $a972dfa956833003$exports.createContext(null);\nfunction $c5b33ec0dccca72b$export$4138103a3ae699cc() {\n    return $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$var$OutletContext);\n}\nfunction $c5b33ec0dccca72b$export$a3be3530d8e40d0b(context) {\n    let outlet = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397).outlet;\n    if (outlet) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$OutletContext.Provider, {\n        value: context\n    }, outlet);\n    return outlet;\n}\nfunction $c5b33ec0dccca72b$export$99eaa27ddbbb95ef() {\n    let { matches: matches } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let routeMatch = matches[matches.length - 1];\n    return routeMatch ? routeMatch.params : {};\n}\nfunction $c5b33ec0dccca72b$export$e75d2a2d1b3c245b(to, { relative: relative } = {}) {\n    let { matches: matches } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let { pathname: locationPathname } = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let routePathnamesJson = JSON.stringify($c5b33ec0dccca72b$var$getResolveToMatches(matches));\n    return $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$var$resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [\n        to,\n        routePathnamesJson,\n        locationPathname,\n        relative\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$5d3fca4a98652595(routes, locationArg) {\n    return $c5b33ec0dccca72b$var$useRoutesImpl(routes, locationArg);\n}\nfunction $c5b33ec0dccca72b$var$useRoutesImpl(routes, locationArg, dataRouterState, future) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`);\n    let { navigator: navigator2, static: isStatic } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let { matches: parentMatches } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let routeMatch = parentMatches[parentMatches.length - 1];\n    let parentParams = routeMatch ? routeMatch.params : {};\n    let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n    let parentRoute = routeMatch && routeMatch.route;\n    if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS) {\n        let parentPath = parentRoute && parentRoute.path || \"\";\n        $c5b33ec0dccca72b$var$warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"), `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`);\n    }\n    let locationFromContext = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let location;\n    if (locationArg) {\n        let parsedLocationArg = typeof locationArg === \"string\" ? $c5b33ec0dccca72b$export$8ccf933b0513f8d0(locationArg) : locationArg;\n        $c5b33ec0dccca72b$export$f5708dca728d7177(parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`);\n        location = parsedLocationArg;\n    } else location = locationFromContext;\n    let pathname = location.pathname || \"/\";\n    let remainingPathname = pathname;\n    if (parentPathnameBase !== \"/\") {\n        let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n        let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n        remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n    }\n    let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : $c5b33ec0dccca72b$export$2708184779ceb39d(routes, {\n        pathname: remainingPathname\n    });\n    if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS) {\n        $c5b33ec0dccca72b$var$warning(parentRoute || matches != null, `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `);\n        $c5b33ec0dccca72b$var$warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`);\n    }\n    let renderedMatches = $c5b33ec0dccca72b$var$_renderMatches(matches && matches.map((match)=>Object.assign({}, match, {\n            params: Object.assign({}, parentParams, match.params),\n            pathname: $c5b33ec0dccca72b$var$joinPaths([\n                parentPathnameBase,\n                // Re-encode pathnames that were decoded inside matchRoutes\n                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\n            ]),\n            pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : $c5b33ec0dccca72b$var$joinPaths([\n                parentPathnameBase,\n                // Re-encode pathnames that were decoded inside matchRoutes\n                navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n            ])\n        })), parentMatches, dataRouterState, future);\n    if (locationArg && renderedMatches) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$e6a44b110a0c44d3.Provider, {\n        value: {\n            location: {\n                pathname: \"/\",\n                search: \"\",\n                hash: \"\",\n                state: null,\n                key: \"default\",\n                ...location\n            },\n            navigationType: \"POP\" /* Pop */ \n        }\n    }, renderedMatches);\n    return renderedMatches;\n}\nfunction $c5b33ec0dccca72b$var$DefaultErrorComponent() {\n    let error = $c5b33ec0dccca72b$export$ed527bf60f6e05f2();\n    let message = $c5b33ec0dccca72b$export$972111febbeef05b(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n    let stack = error instanceof Error ? error.stack : null;\n    let lightgrey = \"rgba(200,200,200, 0.5)\";\n    let preStyles = {\n        padding: \"0.5rem\",\n        backgroundColor: lightgrey\n    };\n    let codeStyles = {\n        padding: \"2px 4px\",\n        backgroundColor: lightgrey\n    };\n    let devInfo = null;\n    if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS) {\n        console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n        devInfo = /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"code\", {\n            style: codeStyles\n        }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"code\", {\n            style: codeStyles\n        }, \"errorElement\"), \" prop on your route.\"));\n    }\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"h3\", {\n        style: {\n            fontStyle: \"italic\"\n        }\n    }, message), stack ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"pre\", {\n        style: preStyles\n    }, stack) : null, devInfo);\n}\nvar $c5b33ec0dccca72b$var$defaultErrorElement = /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$DefaultErrorComponent, null);\nvar $c5b33ec0dccca72b$var$RenderErrorBoundary = class extends $a972dfa956833003$exports.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            location: props.location,\n            revalidation: props.revalidation,\n            error: props.error\n        };\n    }\n    static getDerivedStateFromError(error) {\n        return {\n            error: error\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") return {\n            error: props.error,\n            location: props.location,\n            revalidation: props.revalidation\n        };\n        return {\n            error: props.error !== void 0 ? props.error : state.error,\n            location: state.location,\n            revalidation: props.revalidation || state.revalidation\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        console.error(\"React Router caught the following error during render\", error, errorInfo);\n    }\n    render() {\n        return this.state.error !== void 0 ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$aac280ed165a4397.Provider, {\n            value: this.props.routeContext\n        }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$RouteErrorContext.Provider, {\n            value: this.state.error,\n            children: this.props.component\n        })) : this.props.children;\n    }\n};\nfunction $c5b33ec0dccca72b$var$RenderedRoute({ routeContext: routeContext, match: match, children: children }) {\n    let dataRouterContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$2eeee58951ff3c1c);\n    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$aac280ed165a4397.Provider, {\n        value: routeContext\n    }, children);\n}\nfunction $c5b33ec0dccca72b$var$_renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n    if (matches == null) {\n        if (!dataRouterState) return null;\n        if (dataRouterState.errors) matches = dataRouterState.matches;\n        else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) matches = dataRouterState.matches;\n        else return null;\n    }\n    let renderedMatches = matches;\n    let errors = dataRouterState?.errors;\n    if (errors != null) {\n        let errorIndex = renderedMatches.findIndex((m)=>m.route.id && errors?.[m.route.id] !== void 0);\n        $c5b33ec0dccca72b$export$f5708dca728d7177(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(\",\")}`);\n        renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n    }\n    let renderFallback = false;\n    let fallbackIndex = -1;\n    if (dataRouterState) for(let i = 0; i < renderedMatches.length; i++){\n        let match = renderedMatches[i];\n        if (match.route.HydrateFallback || match.route.hydrateFallbackElement) fallbackIndex = i;\n        if (match.route.id) {\n            let { loaderData: loaderData, errors: errors2 } = dataRouterState;\n            let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n            if (match.route.lazy || needsToRunLoader) {\n                renderFallback = true;\n                if (fallbackIndex >= 0) renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n                else renderedMatches = [\n                    renderedMatches[0]\n                ];\n                break;\n            }\n        }\n    }\n    return renderedMatches.reduceRight((outlet, match, index)=>{\n        let error;\n        let shouldRenderHydrateFallback = false;\n        let errorElement = null;\n        let hydrateFallbackElement = null;\n        if (dataRouterState) {\n            error = errors && match.route.id ? errors[match.route.id] : void 0;\n            errorElement = match.route.errorElement || $c5b33ec0dccca72b$var$defaultErrorElement;\n            if (renderFallback) {\n                if (fallbackIndex < 0 && index === 0) {\n                    $c5b33ec0dccca72b$var$warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n                    shouldRenderHydrateFallback = true;\n                    hydrateFallbackElement = null;\n                } else if (fallbackIndex === index) {\n                    shouldRenderHydrateFallback = true;\n                    hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n                }\n            }\n        }\n        let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n        let getChildren = ()=>{\n            let children;\n            if (error) children = errorElement;\n            else if (shouldRenderHydrateFallback) children = hydrateFallbackElement;\n            else if (match.route.Component) children = /* @__PURE__ */ $a972dfa956833003$exports.createElement(match.route.Component, null);\n            else if (match.route.element) children = match.route.element;\n            else children = outlet;\n            return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$RenderedRoute, {\n                match: match,\n                routeContext: {\n                    outlet: outlet,\n                    matches: matches2,\n                    isDataRoute: dataRouterState != null\n                },\n                children: children\n            });\n        };\n        return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$RenderErrorBoundary, {\n            location: dataRouterState.location,\n            revalidation: dataRouterState.revalidation,\n            component: errorElement,\n            error: error,\n            children: getChildren(),\n            routeContext: {\n                outlet: null,\n                matches: matches2,\n                isDataRoute: true\n            }\n        }) : getChildren();\n    }, null);\n}\nfunction $c5b33ec0dccca72b$var$getDataRouterConsoleError(hookName) {\n    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction $c5b33ec0dccca72b$var$useDataRouterContext(hookName) {\n    let ctx = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$2eeee58951ff3c1c);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(ctx, $c5b33ec0dccca72b$var$getDataRouterConsoleError(hookName));\n    return ctx;\n}\nfunction $c5b33ec0dccca72b$var$useDataRouterState(hookName) {\n    let state = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$315e3ffb01f217);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(state, $c5b33ec0dccca72b$var$getDataRouterConsoleError(hookName));\n    return state;\n}\nfunction $c5b33ec0dccca72b$var$useRouteContext(hookName) {\n    let route = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(route, $c5b33ec0dccca72b$var$getDataRouterConsoleError(hookName));\n    return route;\n}\nfunction $c5b33ec0dccca72b$var$useCurrentRouteId(hookName) {\n    let route = $c5b33ec0dccca72b$var$useRouteContext(hookName);\n    let thisRoute = route.matches[route.matches.length - 1];\n    $c5b33ec0dccca72b$export$f5708dca728d7177(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique \"id\"`);\n    return thisRoute.route.id;\n}\nfunction $c5b33ec0dccca72b$var$useRouteId() {\n    return $c5b33ec0dccca72b$var$useCurrentRouteId(\"useRouteId\" /* UseRouteId */ );\n}\nfunction $c5b33ec0dccca72b$export$d0fd4b7106de2769() {\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useNavigation\" /* UseNavigation */ );\n    return state.navigation;\n}\nfunction $c5b33ec0dccca72b$export$600dc272ed516c15() {\n    let dataRouterContext = $c5b33ec0dccca72b$var$useDataRouterContext(\"useRevalidator\" /* UseRevalidator */ );\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useRevalidator\" /* UseRevalidator */ );\n    return $a972dfa956833003$exports.useMemo(()=>({\n            async revalidate () {\n                await dataRouterContext.router.revalidate();\n            },\n            state: state.revalidation\n        }), [\n        dataRouterContext.router,\n        state.revalidation\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$2378eb7f5ff86053() {\n    let { matches: matches, loaderData: loaderData } = $c5b33ec0dccca72b$var$useDataRouterState(\"useMatches\" /* UseMatches */ );\n    return $a972dfa956833003$exports.useMemo(()=>matches.map((m)=>$c5b33ec0dccca72b$var$convertRouteMatchToUiMatch(m, loaderData)), [\n        matches,\n        loaderData\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$1448a5050d252c4d() {\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useLoaderData\" /* UseLoaderData */ );\n    let routeId = $c5b33ec0dccca72b$var$useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */ );\n    return state.loaderData[routeId];\n}\nfunction $c5b33ec0dccca72b$export$fd5d37484eab868d(routeId) {\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */ );\n    return state.loaderData[routeId];\n}\nfunction $c5b33ec0dccca72b$export$fdc00f3f26066d5e() {\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useActionData\" /* UseActionData */ );\n    let routeId = $c5b33ec0dccca72b$var$useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */ );\n    return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction $c5b33ec0dccca72b$export$ed527bf60f6e05f2() {\n    let error = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$var$RouteErrorContext);\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useRouteError\" /* UseRouteError */ );\n    let routeId = $c5b33ec0dccca72b$var$useCurrentRouteId(\"useRouteError\" /* UseRouteError */ );\n    if (error !== void 0) return error;\n    return state.errors?.[routeId];\n}\nfunction $c5b33ec0dccca72b$export$78a72ddb39bdd145() {\n    let value = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$var$AwaitContext);\n    return value?._data;\n}\nfunction $c5b33ec0dccca72b$export$17f53340677d5831() {\n    let value = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$var$AwaitContext);\n    return value?._error;\n}\nvar $c5b33ec0dccca72b$var$blockerId = 0;\nfunction $c5b33ec0dccca72b$export$b273b3273281a049(shouldBlock) {\n    let { router: router, basename: basename } = $c5b33ec0dccca72b$var$useDataRouterContext(\"useBlocker\" /* UseBlocker */ );\n    let state = $c5b33ec0dccca72b$var$useDataRouterState(\"useBlocker\" /* UseBlocker */ );\n    let [blockerKey, setBlockerKey] = $a972dfa956833003$exports.useState(\"\");\n    let blockerFunction = $a972dfa956833003$exports.useCallback((arg)=>{\n        if (typeof shouldBlock !== \"function\") return !!shouldBlock;\n        if (basename === \"/\") return shouldBlock(arg);\n        let { currentLocation: currentLocation, nextLocation: nextLocation, historyAction: historyAction } = arg;\n        return shouldBlock({\n            currentLocation: {\n                ...currentLocation,\n                pathname: $c5b33ec0dccca72b$var$stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n            },\n            nextLocation: {\n                ...nextLocation,\n                pathname: $c5b33ec0dccca72b$var$stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n            },\n            historyAction: historyAction\n        });\n    }, [\n        basename,\n        shouldBlock\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        let key = String(++$c5b33ec0dccca72b$var$blockerId);\n        setBlockerKey(key);\n        return ()=>router.deleteBlocker(key);\n    }, [\n        router\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (blockerKey !== \"\") router.getBlocker(blockerKey, blockerFunction);\n    }, [\n        router,\n        blockerKey,\n        blockerFunction\n    ]);\n    return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : $c5b33ec0dccca72b$export$386d57f03f0b2883;\n}\nfunction $c5b33ec0dccca72b$var$useNavigateStable() {\n    let { router: router } = $c5b33ec0dccca72b$var$useDataRouterContext(\"useNavigate\" /* UseNavigateStable */ );\n    let id = $c5b33ec0dccca72b$var$useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */ );\n    let activeRef = $a972dfa956833003$exports.useRef(false);\n    $c5b33ec0dccca72b$var$useIsomorphicLayoutEffect(()=>{\n        activeRef.current = true;\n    });\n    let navigate = $a972dfa956833003$exports.useCallback(async (to, options = {})=>{\n        $c5b33ec0dccca72b$var$warning(activeRef.current, $c5b33ec0dccca72b$var$navigateEffectWarning);\n        if (!activeRef.current) return;\n        if (typeof to === \"number\") router.navigate(to);\n        else await router.navigate(to, {\n            fromRouteId: id,\n            ...options\n        });\n    }, [\n        router,\n        id\n    ]);\n    return navigate;\n}\nvar $c5b33ec0dccca72b$var$alreadyWarned = {};\nfunction $c5b33ec0dccca72b$var$warningOnce(key, cond, message) {\n    if (!cond && !$c5b33ec0dccca72b$var$alreadyWarned[key]) {\n        $c5b33ec0dccca72b$var$alreadyWarned[key] = true;\n        $c5b33ec0dccca72b$var$warning(false, message);\n    }\n}\n// lib/server-runtime/warnings.ts\nvar $c5b33ec0dccca72b$var$alreadyWarned2 = {};\nfunction $c5b33ec0dccca72b$var$warnOnce(condition, message) {\n    if (!condition && !$c5b33ec0dccca72b$var$alreadyWarned2[message]) {\n        $c5b33ec0dccca72b$var$alreadyWarned2[message] = true;\n        console.warn(message);\n    }\n}\n// lib/components.tsx\nvar $c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS2 = true;\nfunction $c5b33ec0dccca72b$export$9269a41d8c4635e(route) {\n    let updates = {\n        // Note: this check also occurs in createRoutesFromChildren so update\n        // there if you change this -- please and thank you!\n        hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n    };\n    if (route.Component) {\n        if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS2) {\n            if (route.element) $c5b33ec0dccca72b$var$warning(false, \"You should not include both `Component` and `element` on your route - `Component` will be used.\");\n        }\n        Object.assign(updates, {\n            element: $a972dfa956833003$exports.createElement(route.Component),\n            Component: void 0\n        });\n    }\n    if (route.HydrateFallback) {\n        if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS2) {\n            if (route.hydrateFallbackElement) $c5b33ec0dccca72b$var$warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\");\n        }\n        Object.assign(updates, {\n            hydrateFallbackElement: $a972dfa956833003$exports.createElement(route.HydrateFallback),\n            HydrateFallback: void 0\n        });\n    }\n    if (route.ErrorBoundary) {\n        if ($c5b33ec0dccca72b$var$ENABLE_DEV_WARNINGS2) {\n            if (route.errorElement) $c5b33ec0dccca72b$var$warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\");\n        }\n        Object.assign(updates, {\n            errorElement: $a972dfa956833003$exports.createElement(route.ErrorBoundary),\n            ErrorBoundary: void 0\n        });\n    }\n    return updates;\n}\nfunction $c5b33ec0dccca72b$export$f30f7e456d254e83(routes, opts) {\n    return $c5b33ec0dccca72b$export$baddd0131ee8c05b({\n        basename: opts?.basename,\n        future: opts?.future,\n        history: $c5b33ec0dccca72b$var$createMemoryHistory({\n            initialEntries: opts?.initialEntries,\n            initialIndex: opts?.initialIndex\n        }),\n        hydrationData: opts?.hydrationData,\n        routes: routes,\n        mapRouteProperties: $c5b33ec0dccca72b$export$9269a41d8c4635e,\n        dataStrategy: opts?.dataStrategy,\n        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n    }).initialize();\n}\nvar $c5b33ec0dccca72b$var$Deferred = class {\n    constructor(){\n        this.status = \"pending\";\n        this.promise = new Promise((resolve, reject)=>{\n            this.resolve = (value)=>{\n                if (this.status === \"pending\") {\n                    this.status = \"resolved\";\n                    resolve(value);\n                }\n            };\n            this.reject = (reason)=>{\n                if (this.status === \"pending\") {\n                    this.status = \"rejected\";\n                    reject(reason);\n                }\n            };\n        });\n    }\n};\nfunction $c5b33ec0dccca72b$export$323e4fc2fa4753fb({ router: router, flushSync: reactDomFlushSyncImpl }) {\n    let [state, setStateImpl] = $a972dfa956833003$exports.useState(router.state);\n    let [pendingState, setPendingState] = $a972dfa956833003$exports.useState();\n    let [vtContext, setVtContext] = $a972dfa956833003$exports.useState({\n        isTransitioning: false\n    });\n    let [renderDfd, setRenderDfd] = $a972dfa956833003$exports.useState();\n    let [transition, setTransition] = $a972dfa956833003$exports.useState();\n    let [interruption, setInterruption] = $a972dfa956833003$exports.useState();\n    let fetcherData = $a972dfa956833003$exports.useRef(/* @__PURE__ */ new Map());\n    let setState = $a972dfa956833003$exports.useCallback((newState, { deletedFetchers: deletedFetchers, flushSync: flushSync, viewTransitionOpts: viewTransitionOpts })=>{\n        newState.fetchers.forEach((fetcher, key)=>{\n            if (fetcher.data !== void 0) fetcherData.current.set(key, fetcher.data);\n        });\n        deletedFetchers.forEach((key)=>fetcherData.current.delete(key));\n        $c5b33ec0dccca72b$var$warnOnce(flushSync === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');\n        let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n        $c5b33ec0dccca72b$var$warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\");\n        if (!viewTransitionOpts || !isViewTransitionAvailable) {\n            if (reactDomFlushSyncImpl && flushSync) reactDomFlushSyncImpl(()=>setStateImpl(newState));\n            else $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n            return;\n        }\n        if (reactDomFlushSyncImpl && flushSync) {\n            reactDomFlushSyncImpl(()=>{\n                if (transition) {\n                    renderDfd && renderDfd.resolve();\n                    transition.skipTransition();\n                }\n                setVtContext({\n                    isTransitioning: true,\n                    flushSync: true,\n                    currentLocation: viewTransitionOpts.currentLocation,\n                    nextLocation: viewTransitionOpts.nextLocation\n                });\n            });\n            let t = router.window.document.startViewTransition(()=>{\n                reactDomFlushSyncImpl(()=>setStateImpl(newState));\n            });\n            t.finished.finally(()=>{\n                reactDomFlushSyncImpl(()=>{\n                    setRenderDfd(void 0);\n                    setTransition(void 0);\n                    setPendingState(void 0);\n                    setVtContext({\n                        isTransitioning: false\n                    });\n                });\n            });\n            reactDomFlushSyncImpl(()=>setTransition(t));\n            return;\n        }\n        if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n            setInterruption({\n                state: newState,\n                currentLocation: viewTransitionOpts.currentLocation,\n                nextLocation: viewTransitionOpts.nextLocation\n            });\n        } else {\n            setPendingState(newState);\n            setVtContext({\n                isTransitioning: true,\n                flushSync: false,\n                currentLocation: viewTransitionOpts.currentLocation,\n                nextLocation: viewTransitionOpts.nextLocation\n            });\n        }\n    }, [\n        router.window,\n        reactDomFlushSyncImpl,\n        transition,\n        renderDfd\n    ]);\n    $a972dfa956833003$exports.useLayoutEffect(()=>router.subscribe(setState), [\n        router,\n        setState\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (vtContext.isTransitioning && !vtContext.flushSync) setRenderDfd(new $c5b33ec0dccca72b$var$Deferred());\n    }, [\n        vtContext\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (renderDfd && pendingState && router.window) {\n            let newState = pendingState;\n            let renderPromise = renderDfd.promise;\n            let transition2 = router.window.document.startViewTransition(async ()=>{\n                $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n                await renderPromise;\n            });\n            transition2.finished.finally(()=>{\n                setRenderDfd(void 0);\n                setTransition(void 0);\n                setPendingState(void 0);\n                setVtContext({\n                    isTransitioning: false\n                });\n            });\n            setTransition(transition2);\n        }\n    }, [\n        pendingState,\n        renderDfd,\n        router.window\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (renderDfd && pendingState && state.location.key === pendingState.location.key) renderDfd.resolve();\n    }, [\n        renderDfd,\n        transition,\n        state.location,\n        pendingState\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (!vtContext.isTransitioning && interruption) {\n            setPendingState(interruption.state);\n            setVtContext({\n                isTransitioning: true,\n                flushSync: false,\n                currentLocation: interruption.currentLocation,\n                nextLocation: interruption.nextLocation\n            });\n            setInterruption(void 0);\n        }\n    }, [\n        vtContext.isTransitioning,\n        interruption\n    ]);\n    let navigator2 = $a972dfa956833003$exports.useMemo(()=>{\n        return {\n            createHref: router.createHref,\n            encodeLocation: router.encodeLocation,\n            go: (n)=>router.navigate(n),\n            push: (to, state2, opts)=>router.navigate(to, {\n                    state: state2,\n                    preventScrollReset: opts?.preventScrollReset\n                }),\n            replace: (to, state2, opts)=>router.navigate(to, {\n                    replace: true,\n                    state: state2,\n                    preventScrollReset: opts?.preventScrollReset\n                })\n        };\n    }, [\n        router\n    ]);\n    let basename = router.basename || \"/\";\n    let dataRouterContext = $a972dfa956833003$exports.useMemo(()=>({\n            router: router,\n            navigator: navigator2,\n            static: false,\n            basename: basename\n        }), [\n        router,\n        navigator2,\n        basename\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$2eeee58951ff3c1c.Provider, {\n        value: dataRouterContext\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$315e3ffb01f217.Provider, {\n        value: state\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$cb3f1df1bef00a39.Provider, {\n        value: fetcherData.current\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$3681f408decb40d1.Provider, {\n        value: vtContext\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        location: state.location,\n        navigationType: state.historyAction,\n        navigator: navigator2\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$MemoizedDataRoutes, {\n        routes: router.routes,\n        future: router.future,\n        state: state\n    })))))), null);\n}\nvar $c5b33ec0dccca72b$var$MemoizedDataRoutes = $a972dfa956833003$exports.memo($c5b33ec0dccca72b$var$DataRoutes);\nfunction $c5b33ec0dccca72b$var$DataRoutes({ routes: routes, future: future, state: state }) {\n    return $c5b33ec0dccca72b$var$useRoutesImpl(routes, void 0, state, future);\n}\nfunction $c5b33ec0dccca72b$export$ae46f04cfaffe093({ basename: basename, children: children, initialEntries: initialEntries, initialIndex: initialIndex }) {\n    let historyRef = $a972dfa956833003$exports.useRef();\n    if (historyRef.current == null) historyRef.current = $c5b33ec0dccca72b$var$createMemoryHistory({\n        initialEntries: initialEntries,\n        initialIndex: initialIndex,\n        v5Compat: true\n    });\n    let history = historyRef.current;\n    let [state, setStateImpl] = $a972dfa956833003$exports.useState({\n        action: history.action,\n        location: history.location\n    });\n    let setState = $a972dfa956833003$exports.useCallback((newState)=>{\n        $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n    }, [\n        setStateImpl\n    ]);\n    $a972dfa956833003$exports.useLayoutEffect(()=>history.listen(setState), [\n        history,\n        setState\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\nfunction $c5b33ec0dccca72b$export$444b3ab0cb9aec40({ to: to, replace: replace2, state: state, relative: relative }) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177($c5b33ec0dccca72b$export$9c954a9d03d32f4a(), // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`);\n    let { static: isStatic } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    $c5b33ec0dccca72b$var$warning(!isStatic, `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`);\n    let { matches: matches } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let { pathname: locationPathname } = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let navigate = $c5b33ec0dccca72b$export$9770f232ac06a008();\n    let path = $c5b33ec0dccca72b$var$resolveTo(to, $c5b33ec0dccca72b$var$getResolveToMatches(matches), locationPathname, relative === \"path\");\n    let jsonPath = JSON.stringify(path);\n    $a972dfa956833003$exports.useEffect(()=>{\n        navigate(JSON.parse(jsonPath), {\n            replace: replace2,\n            state: state,\n            relative: relative\n        });\n    }, [\n        navigate,\n        jsonPath,\n        relative,\n        replace2,\n        state\n    ]);\n    return null;\n}\nfunction $c5b33ec0dccca72b$export$910ae8079b2c2852(props) {\n    return $c5b33ec0dccca72b$export$a3be3530d8e40d0b(props.context);\n}\nfunction $c5b33ec0dccca72b$export$e7b0ac011bb776c6(_props) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177(false, `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`);\n}\nfunction $c5b33ec0dccca72b$export$55185c17a0fcbe46({ basename: basenameProp = \"/\", children: children = null, location: locationProp, navigationType: navigationType = \"POP\" /* Pop */ , navigator: navigator2, static: staticProp = false }) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177(!$c5b33ec0dccca72b$export$9c954a9d03d32f4a(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);\n    let basename = basenameProp.replace(/^\\/*/, \"/\");\n    let navigationContext = $a972dfa956833003$exports.useMemo(()=>({\n            basename: basename,\n            navigator: navigator2,\n            static: staticProp,\n            future: {}\n        }), [\n        basename,\n        navigator2,\n        staticProp\n    ]);\n    if (typeof locationProp === \"string\") locationProp = $c5b33ec0dccca72b$export$8ccf933b0513f8d0(locationProp);\n    let { pathname: pathname = \"/\", search: search = \"\", hash: hash = \"\", state: state = null, key: key = \"default\" } = locationProp;\n    let locationContext = $a972dfa956833003$exports.useMemo(()=>{\n        let trailingPathname = $c5b33ec0dccca72b$var$stripBasename(pathname, basename);\n        if (trailingPathname == null) return null;\n        return {\n            location: {\n                pathname: trailingPathname,\n                search: search,\n                hash: hash,\n                state: state,\n                key: key\n            },\n            navigationType: navigationType\n        };\n    }, [\n        basename,\n        pathname,\n        search,\n        hash,\n        state,\n        key,\n        navigationType\n    ]);\n    $c5b33ec0dccca72b$var$warning(locationContext != null, `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`);\n    if (locationContext == null) return null;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$3044ab7fdabeaee6.Provider, {\n        value: navigationContext\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$e6a44b110a0c44d3.Provider, {\n        children: children,\n        value: locationContext\n    }));\n}\nfunction $c5b33ec0dccca72b$export$3565eb3d00ca5a74({ children: children, location: location }) {\n    return $c5b33ec0dccca72b$export$5d3fca4a98652595($c5b33ec0dccca72b$export$16da398f5434bdec(children), location);\n}\nfunction $c5b33ec0dccca72b$export$6ddabde395c8c576({ children: children, errorElement: errorElement, resolve: resolve }) {\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$AwaitErrorBoundary, {\n        resolve: resolve,\n        errorElement: errorElement\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$ResolveAwait, null, children));\n}\nvar $c5b33ec0dccca72b$var$AwaitErrorBoundary = class extends $a972dfa956833003$exports.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error: null\n        };\n    }\n    static getDerivedStateFromError(error) {\n        return {\n            error: error\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        console.error(\"<Await> caught the following error during render\", error, errorInfo);\n    }\n    render() {\n        let { children: children, errorElement: errorElement, resolve: resolve } = this.props;\n        let promise = null;\n        let status = 0 /* pending */ ;\n        if (!(resolve instanceof Promise)) {\n            status = 1 /* success */ ;\n            promise = Promise.resolve();\n            Object.defineProperty(promise, \"_tracked\", {\n                get: ()=>true\n            });\n            Object.defineProperty(promise, \"_data\", {\n                get: ()=>resolve\n            });\n        } else if (this.state.error) {\n            status = 2 /* error */ ;\n            let renderError = this.state.error;\n            promise = Promise.reject().catch(()=>{});\n            Object.defineProperty(promise, \"_tracked\", {\n                get: ()=>true\n            });\n            Object.defineProperty(promise, \"_error\", {\n                get: ()=>renderError\n            });\n        } else if (resolve._tracked) {\n            promise = resolve;\n            status = \"_error\" in promise ? 2 /* error */  : \"_data\" in promise ? 1 /* success */  : 0 /* pending */ ;\n        } else {\n            status = 0 /* pending */ ;\n            Object.defineProperty(resolve, \"_tracked\", {\n                get: ()=>true\n            });\n            promise = resolve.then((data2)=>Object.defineProperty(resolve, \"_data\", {\n                    get: ()=>data2\n                }), (error)=>Object.defineProperty(resolve, \"_error\", {\n                    get: ()=>error\n                }));\n        }\n        if (status === 2 /* error */  && !errorElement) throw promise._error;\n        if (status === 2 /* error */ ) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$AwaitContext.Provider, {\n            value: promise,\n            children: errorElement\n        });\n        if (status === 1 /* success */ ) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$AwaitContext.Provider, {\n            value: promise,\n            children: children\n        });\n        throw promise;\n    }\n};\nfunction $c5b33ec0dccca72b$var$ResolveAwait({ children: children }) {\n    let data2 = $c5b33ec0dccca72b$export$78a72ddb39bdd145();\n    let toRender = typeof children === \"function\" ? children(data2) : children;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, toRender);\n}\nfunction $c5b33ec0dccca72b$export$16da398f5434bdec(children, parentPath = []) {\n    let routes = [];\n    $a972dfa956833003$exports.Children.forEach(children, (element, index)=>{\n        if (!$a972dfa956833003$exports.isValidElement(element)) return;\n        let treePath = [\n            ...parentPath,\n            index\n        ];\n        if (element.type === $a972dfa956833003$exports.Fragment) {\n            routes.push.apply(routes, $c5b33ec0dccca72b$export$16da398f5434bdec(element.props.children, treePath));\n            return;\n        }\n        $c5b33ec0dccca72b$export$f5708dca728d7177(element.type === $c5b33ec0dccca72b$export$e7b0ac011bb776c6, `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`);\n        $c5b33ec0dccca72b$export$f5708dca728d7177(!element.props.index || !element.props.children, \"An index route cannot have child routes.\");\n        let route = {\n            id: element.props.id || treePath.join(\"-\"),\n            caseSensitive: element.props.caseSensitive,\n            element: element.props.element,\n            Component: element.props.Component,\n            index: element.props.index,\n            path: element.props.path,\n            loader: element.props.loader,\n            action: element.props.action,\n            hydrateFallbackElement: element.props.hydrateFallbackElement,\n            HydrateFallback: element.props.HydrateFallback,\n            errorElement: element.props.errorElement,\n            ErrorBoundary: element.props.ErrorBoundary,\n            hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n            shouldRevalidate: element.props.shouldRevalidate,\n            handle: element.props.handle,\n            lazy: element.props.lazy\n        };\n        if (element.props.children) route.children = $c5b33ec0dccca72b$export$16da398f5434bdec(element.props.children, treePath);\n        routes.push(route);\n    });\n    return routes;\n}\nvar $c5b33ec0dccca72b$export$9b5b6d122dea0c88 = $c5b33ec0dccca72b$export$16da398f5434bdec;\nfunction $c5b33ec0dccca72b$export$daf73786167a7f72(matches) {\n    return $c5b33ec0dccca72b$var$_renderMatches(matches);\n}\n// lib/dom/dom.ts\nvar $c5b33ec0dccca72b$var$defaultMethod = \"get\";\nvar $c5b33ec0dccca72b$var$defaultEncType = \"application/x-www-form-urlencoded\";\nfunction $c5b33ec0dccca72b$var$isHtmlElement(object) {\n    return object != null && typeof object.tagName === \"string\";\n}\nfunction $c5b33ec0dccca72b$var$isButtonElement(object) {\n    return $c5b33ec0dccca72b$var$isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction $c5b33ec0dccca72b$var$isFormElement(object) {\n    return $c5b33ec0dccca72b$var$isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction $c5b33ec0dccca72b$var$isInputElement(object) {\n    return $c5b33ec0dccca72b$var$isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction $c5b33ec0dccca72b$var$isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction $c5b33ec0dccca72b$var$shouldProcessLinkClick(event, target) {\n    return event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !$c5b33ec0dccca72b$var$isModifiedEvent(event);\n}\nfunction $c5b33ec0dccca72b$export$a2e4e2dcc7b1f22f(init = \"\") {\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key)=>{\n        let value = init[key];\n        return memo2.concat(Array.isArray(value) ? value.map((v)=>[\n                key,\n                v\n            ]) : [\n            [\n                key,\n                value\n            ]\n        ]);\n    }, []));\n}\nfunction $c5b33ec0dccca72b$var$getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n    let searchParams = $c5b33ec0dccca72b$export$a2e4e2dcc7b1f22f(locationSearch);\n    if (defaultSearchParams) defaultSearchParams.forEach((_, key)=>{\n        if (!searchParams.has(key)) defaultSearchParams.getAll(key).forEach((value)=>{\n            searchParams.append(key, value);\n        });\n    });\n    return searchParams;\n}\nvar $c5b33ec0dccca72b$var$_formDataSupportsSubmitter = null;\nfunction $c5b33ec0dccca72b$var$isFormDataSubmitterSupported() {\n    if ($c5b33ec0dccca72b$var$_formDataSupportsSubmitter === null) try {\n        new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0);\n        $c5b33ec0dccca72b$var$_formDataSupportsSubmitter = false;\n    } catch (e) {\n        $c5b33ec0dccca72b$var$_formDataSupportsSubmitter = true;\n    }\n    return $c5b33ec0dccca72b$var$_formDataSupportsSubmitter;\n}\nvar $c5b33ec0dccca72b$var$supportedFormEncTypes = /* @__PURE__ */ new Set([\n    \"application/x-www-form-urlencoded\",\n    \"multipart/form-data\",\n    \"text/plain\"\n]);\nfunction $c5b33ec0dccca72b$var$getFormEncType(encType) {\n    if (encType != null && !$c5b33ec0dccca72b$var$supportedFormEncTypes.has(encType)) {\n        $c5b33ec0dccca72b$var$warning(false, `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${$c5b33ec0dccca72b$var$defaultEncType}\"`);\n        return null;\n    }\n    return encType;\n}\nfunction $c5b33ec0dccca72b$var$getFormSubmissionInfo(target, basename) {\n    let method;\n    let action;\n    let encType;\n    let formData;\n    let body;\n    if ($c5b33ec0dccca72b$var$isFormElement(target)) {\n        let attr = target.getAttribute(\"action\");\n        action = attr ? $c5b33ec0dccca72b$var$stripBasename(attr, basename) : null;\n        method = target.getAttribute(\"method\") || $c5b33ec0dccca72b$var$defaultMethod;\n        encType = $c5b33ec0dccca72b$var$getFormEncType(target.getAttribute(\"enctype\")) || $c5b33ec0dccca72b$var$defaultEncType;\n        formData = new FormData(target);\n    } else if ($c5b33ec0dccca72b$var$isButtonElement(target) || $c5b33ec0dccca72b$var$isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n        let form = target.form;\n        if (form == null) throw new Error(`Cannot submit a <button> or <input type=\"submit\"> without a <form>`);\n        let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n        action = attr ? $c5b33ec0dccca72b$var$stripBasename(attr, basename) : null;\n        method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || $c5b33ec0dccca72b$var$defaultMethod;\n        encType = $c5b33ec0dccca72b$var$getFormEncType(target.getAttribute(\"formenctype\")) || $c5b33ec0dccca72b$var$getFormEncType(form.getAttribute(\"enctype\")) || $c5b33ec0dccca72b$var$defaultEncType;\n        formData = new FormData(form, target);\n        if (!$c5b33ec0dccca72b$var$isFormDataSubmitterSupported()) {\n            let { name: name, type: type, value: value } = target;\n            if (type === \"image\") {\n                let prefix = name ? `${name}.` : \"\";\n                formData.append(`${prefix}x`, \"0\");\n                formData.append(`${prefix}y`, \"0\");\n            } else if (name) formData.append(name, value);\n        }\n    } else if ($c5b33ec0dccca72b$var$isHtmlElement(target)) throw new Error(`Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`);\n    else {\n        method = $c5b33ec0dccca72b$var$defaultMethod;\n        action = null;\n        encType = $c5b33ec0dccca72b$var$defaultEncType;\n        body = target;\n    }\n    if (formData && encType === \"text/plain\") {\n        body = formData;\n        formData = void 0;\n    }\n    return {\n        action: action,\n        method: method.toLowerCase(),\n        encType: encType,\n        formData: formData,\n        body: body\n    };\n}\n// lib/dom/ssr/invariant.ts\nfunction $c5b33ec0dccca72b$var$invariant2(value, message) {\n    if (value === false || value === null || typeof value === \"undefined\") throw new Error(message);\n}\n// lib/dom/ssr/routeModules.ts\nasync function $c5b33ec0dccca72b$var$loadRouteModule(route, routeModulesCache) {\n    if (route.id in routeModulesCache) return routeModulesCache[route.id];\n    try {\n        let routeModule = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.module);\n        routeModulesCache[route.id] = routeModule;\n        return routeModule;\n    } catch (error) {\n        console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n        console.error(error);\n        if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n        $c5b33ec0dccca72b$import_meta.hot) throw error;\n        window.location.reload();\n        return new Promise(()=>{});\n    }\n}\n// lib/dom/ssr/links.ts\nfunction $c5b33ec0dccca72b$var$getKeyedLinksForMatches(matches, routeModules, manifest) {\n    let descriptors = matches.map((match)=>{\n        let module = routeModules[match.route.id];\n        let route = manifest.routes[match.route.id];\n        return [\n            route && route.css ? route.css.map((href2)=>({\n                    rel: \"stylesheet\",\n                    href: href2\n                })) : [],\n            module?.links?.() || []\n        ];\n    }).flat(2);\n    let preloads = $c5b33ec0dccca72b$var$getModuleLinkHrefs(matches, manifest);\n    return $c5b33ec0dccca72b$var$dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction $c5b33ec0dccca72b$var$getRouteCssDescriptors(route) {\n    if (!route.css) return [];\n    return route.css.map((href2)=>({\n            rel: \"stylesheet\",\n            href: href2\n        }));\n}\nasync function $c5b33ec0dccca72b$var$prefetchRouteCss(route) {\n    if (!route.css) return;\n    let descriptors = $c5b33ec0dccca72b$var$getRouteCssDescriptors(route);\n    await Promise.all(descriptors.map($c5b33ec0dccca72b$var$prefetchStyleLink));\n}\nasync function $c5b33ec0dccca72b$var$prefetchStyleLinks(route, routeModule) {\n    if (!route.css && !routeModule.links || !$c5b33ec0dccca72b$var$isPreloadSupported()) return;\n    let descriptors = [];\n    if (route.css) descriptors.push(...$c5b33ec0dccca72b$var$getRouteCssDescriptors(route));\n    if (routeModule.links) descriptors.push(...routeModule.links());\n    if (descriptors.length === 0) return;\n    let styleLinks = [];\n    for (let descriptor of descriptors)if (!$c5b33ec0dccca72b$var$isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n    });\n    await Promise.all(styleLinks.map($c5b33ec0dccca72b$var$prefetchStyleLink));\n}\nasync function $c5b33ec0dccca72b$var$prefetchStyleLink(descriptor) {\n    return new Promise((resolve)=>{\n        if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`)) return resolve();\n        let link = document.createElement(\"link\");\n        Object.assign(link, descriptor);\n        function removeLink() {\n            if (document.head.contains(link)) document.head.removeChild(link);\n        }\n        link.onload = ()=>{\n            removeLink();\n            resolve();\n        };\n        link.onerror = ()=>{\n            removeLink();\n            resolve();\n        };\n        document.head.appendChild(link);\n    });\n}\nfunction $c5b33ec0dccca72b$var$isPageLinkDescriptor(object) {\n    return object != null && typeof object.page === \"string\";\n}\nfunction $c5b33ec0dccca72b$var$isHtmlLinkDescriptor(object) {\n    if (object == null) return false;\n    if (object.href == null) return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n    return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function $c5b33ec0dccca72b$var$getKeyedPrefetchLinks(matches, manifest, routeModules) {\n    let links = await Promise.all(matches.map(async (match)=>{\n        let route = manifest.routes[match.route.id];\n        if (route) {\n            let mod = await $c5b33ec0dccca72b$var$loadRouteModule(route, routeModules);\n            return mod.links ? mod.links() : [];\n        }\n        return [];\n    }));\n    return $c5b33ec0dccca72b$var$dedupeLinkDescriptors(links.flat(1).filter($c5b33ec0dccca72b$var$isHtmlLinkDescriptor).filter((link)=>link.rel === \"stylesheet\" || link.rel === \"preload\").map((link)=>link.rel === \"stylesheet\" ? {\n            ...link,\n            rel: \"prefetch\",\n            as: \"style\"\n        } : {\n            ...link,\n            rel: \"prefetch\"\n        }));\n}\nfunction $c5b33ec0dccca72b$var$getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n    let isNew = (match, index)=>{\n        if (!currentMatches[index]) return true;\n        return match.route.id !== currentMatches[index].route.id;\n    };\n    let matchPathChanged = (match, index)=>{\n        return(// param change, /users/123 -> /users/456\n        currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n        // e.g. /files/images/avatar.jpg -> files/finances.xls\n        currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]);\n    };\n    if (mode === \"assets\") return nextMatches.filter((match, index)=>isNew(match, index) || matchPathChanged(match, index));\n    if (mode === \"data\") return nextMatches.filter((match, index)=>{\n        let manifestRoute = manifest.routes[match.route.id];\n        if (!manifestRoute || !manifestRoute.hasLoader) return false;\n        if (isNew(match, index) || matchPathChanged(match, index)) return true;\n        if (match.route.shouldRevalidate) {\n            let routeChoice = match.route.shouldRevalidate({\n                currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n                currentParams: currentMatches[0]?.params || {},\n                nextUrl: new URL(page, window.origin),\n                nextParams: match.params,\n                defaultShouldRevalidate: true\n            });\n            if (typeof routeChoice === \"boolean\") return routeChoice;\n        }\n        return true;\n    });\n    return [];\n}\nfunction $c5b33ec0dccca72b$var$getModuleLinkHrefs(matches, manifest, { includeHydrateFallback: includeHydrateFallback } = {}) {\n    return $c5b33ec0dccca72b$var$dedupeHrefs(matches.map((match)=>{\n        let route = manifest.routes[match.route.id];\n        if (!route) return [];\n        let hrefs = [\n            route.module\n        ];\n        if (route.clientActionModule) hrefs = hrefs.concat(route.clientActionModule);\n        if (route.clientLoaderModule) hrefs = hrefs.concat(route.clientLoaderModule);\n        if (includeHydrateFallback && route.hydrateFallbackModule) hrefs = hrefs.concat(route.hydrateFallbackModule);\n        if (route.imports) hrefs = hrefs.concat(route.imports);\n        return hrefs;\n    }).flat(1));\n}\nfunction $c5b33ec0dccca72b$var$dedupeHrefs(hrefs) {\n    return [\n        ...new Set(hrefs)\n    ];\n}\nfunction $c5b33ec0dccca72b$var$sortKeys(obj) {\n    let sorted = {};\n    let keys = Object.keys(obj).sort();\n    for (let key of keys)sorted[key] = obj[key];\n    return sorted;\n}\nfunction $c5b33ec0dccca72b$var$dedupeLinkDescriptors(descriptors, preloads) {\n    let set = /* @__PURE__ */ new Set();\n    let preloadsSet = new Set(preloads);\n    return descriptors.reduce((deduped, descriptor)=>{\n        let alreadyModulePreload = preloads && !$c5b33ec0dccca72b$var$isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n        if (alreadyModulePreload) return deduped;\n        let key = JSON.stringify($c5b33ec0dccca72b$var$sortKeys(descriptor));\n        if (!set.has(key)) {\n            set.add(key);\n            deduped.push({\n                key: key,\n                link: descriptor\n            });\n        }\n        return deduped;\n    }, []);\n}\nvar $c5b33ec0dccca72b$var$_isPreloadSupported;\nfunction $c5b33ec0dccca72b$var$isPreloadSupported() {\n    if ($c5b33ec0dccca72b$var$_isPreloadSupported !== void 0) return $c5b33ec0dccca72b$var$_isPreloadSupported;\n    let el = document.createElement(\"link\");\n    $c5b33ec0dccca72b$var$_isPreloadSupported = el.relList.supports(\"preload\");\n    el = null;\n    return $c5b33ec0dccca72b$var$_isPreloadSupported;\n}\n// lib/dom/ssr/markup.ts\nvar $c5b33ec0dccca72b$var$ESCAPE_LOOKUP = {\n    \"&\": \"\\\\u0026\",\n    \">\": \"\\\\u003e\",\n    \"<\": \"\\\\u003c\",\n    \"\\u2028\": \"\\\\u2028\",\n    \"\\u2029\": \"\\\\u2029\"\n};\nvar $c5b33ec0dccca72b$var$ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction $c5b33ec0dccca72b$var$escapeHtml(html) {\n    return html.replace($c5b33ec0dccca72b$var$ESCAPE_REGEX, (match)=>$c5b33ec0dccca72b$var$ESCAPE_LOOKUP[match]);\n}\nfunction $c5b33ec0dccca72b$var$createHtml(html) {\n    return {\n        __html: html\n    };\n}\n// lib/dom/ssr/data.ts\nasync function $c5b33ec0dccca72b$var$createRequestInit(request) {\n    let init = {\n        signal: request.signal\n    };\n    if (request.method !== \"GET\") {\n        init.method = request.method;\n        let contentType = request.headers.get(\"Content-Type\");\n        if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n            init.headers = {\n                \"Content-Type\": contentType\n            };\n            init.body = JSON.stringify(await request.json());\n        } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n            init.headers = {\n                \"Content-Type\": contentType\n            };\n            init.body = await request.text();\n        } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) init.body = new URLSearchParams(await request.text());\n        else init.body = await request.formData();\n    }\n    return init;\n}\n// lib/dom/ssr/single-fetch.tsx\nvar $c5b33ec0dccca72b$export$60644022b8b46aaa = Symbol(\"SingleFetchRedirect\");\nfunction $c5b33ec0dccca72b$var$StreamTransfer({ context: context, identifier: identifier, reader: reader, textDecoder: textDecoder, nonce: nonce }) {\n    if (!context.renderMeta || !context.renderMeta.didRenderScripts) return null;\n    if (!context.renderMeta.streamCache) context.renderMeta.streamCache = {};\n    let { streamCache: streamCache } = context.renderMeta;\n    let promise = streamCache[identifier];\n    if (!promise) promise = streamCache[identifier] = reader.read().then((result)=>{\n        streamCache[identifier].result = {\n            done: result.done,\n            value: textDecoder.decode(result.value, {\n                stream: true\n            })\n        };\n    }).catch((e)=>{\n        streamCache[identifier].error = e;\n    });\n    if (promise.error) throw promise.error;\n    if (promise.result === void 0) throw promise;\n    let { done: done, value: value } = promise.result;\n    let scriptTag = value ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        nonce: nonce,\n        dangerouslySetInnerHTML: {\n            __html: `window.__reactRouterContext.streamController.enqueue(${$c5b33ec0dccca72b$var$escapeHtml(JSON.stringify(value))});`\n        }\n    }) : null;\n    if (done) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, scriptTag, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        nonce: nonce,\n        dangerouslySetInnerHTML: {\n            __html: `window.__reactRouterContext.streamController.close();`\n        }\n    }));\n    else return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, scriptTag, /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Suspense, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$StreamTransfer, {\n        context: context,\n        identifier: identifier + 1,\n        reader: reader,\n        textDecoder: textDecoder,\n        nonce: nonce\n    })));\n}\nfunction $c5b33ec0dccca72b$export$c7c51be9b423c4d6(manifest, routeModules, ssr, getRouter) {\n    return async ({ request: request, matches: matches, fetcherKey: fetcherKey })=>{\n        if (request.method !== \"GET\") return $c5b33ec0dccca72b$var$singleFetchActionStrategy(request, matches);\n        if (!ssr) {\n            let foundRevalidatingServerLoader = matches.some((m)=>m.shouldLoad && manifest.routes[m.route.id]?.hasLoader && !manifest.routes[m.route.id]?.hasClientLoader);\n            if (!foundRevalidatingServerLoader) {\n                let matchesToLoad = matches.filter((m)=>m.shouldLoad);\n                let url = $c5b33ec0dccca72b$var$stripIndexParam($c5b33ec0dccca72b$var$singleFetchUrl(request.url));\n                let init = await $c5b33ec0dccca72b$var$createRequestInit(request);\n                let results = {};\n                await Promise.all(matchesToLoad.map((m)=>m.resolve(async (handler)=>{\n                        try {\n                            let result = manifest.routes[m.route.id]?.hasClientLoader ? await $c5b33ec0dccca72b$var$fetchSingleLoader(handler, url, init, m.route.id) : await handler();\n                            results[m.route.id] = {\n                                type: \"data\",\n                                result: result\n                            };\n                        } catch (e) {\n                            results[m.route.id] = {\n                                type: \"error\",\n                                result: e\n                            };\n                        }\n                    })));\n                return results;\n            }\n        }\n        if (fetcherKey) return $c5b33ec0dccca72b$var$singleFetchLoaderFetcherStrategy(request, matches);\n        return $c5b33ec0dccca72b$var$singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, getRouter(), request, matches);\n    };\n}\nasync function $c5b33ec0dccca72b$var$singleFetchActionStrategy(request, matches) {\n    let actionMatch = matches.find((m)=>m.shouldLoad);\n    $c5b33ec0dccca72b$var$invariant2(actionMatch, \"No action match found\");\n    let actionStatus = void 0;\n    let result = await actionMatch.resolve(async (handler)=>{\n        let result2 = await handler(async ()=>{\n            let url = $c5b33ec0dccca72b$var$singleFetchUrl(request.url);\n            let init = await $c5b33ec0dccca72b$var$createRequestInit(request);\n            let { data: data2, status: status } = await $c5b33ec0dccca72b$var$fetchAndDecode(url, init);\n            actionStatus = status;\n            return $c5b33ec0dccca72b$var$unwrapSingleFetchResult(data2, actionMatch.route.id);\n        });\n        return result2;\n    });\n    if ($c5b33ec0dccca72b$var$isResponse(result.result) || $c5b33ec0dccca72b$export$972111febbeef05b(result.result)) return {\n        [actionMatch.route.id]: result\n    };\n    return {\n        [actionMatch.route.id]: {\n            type: result.type,\n            result: $c5b33ec0dccca72b$export$4051a07651545597(result.result, actionStatus)\n        }\n    };\n}\nasync function $c5b33ec0dccca72b$var$singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, router, request, matches) {\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    let routeDfds = matches.map(()=>$c5b33ec0dccca72b$var$createDeferred2());\n    let routesLoadedPromise = Promise.all(routeDfds.map((d)=>d.promise));\n    let singleFetchDfd = $c5b33ec0dccca72b$var$createDeferred2();\n    let url = $c5b33ec0dccca72b$var$stripIndexParam($c5b33ec0dccca72b$var$singleFetchUrl(request.url));\n    let init = await $c5b33ec0dccca72b$var$createRequestInit(request);\n    let results = {};\n    let resolvePromise = Promise.all(matches.map(async (m, i)=>m.resolve(async (handler)=>{\n            routeDfds[i].resolve();\n            let manifestRoute = manifest.routes[m.route.id];\n            if (!m.shouldLoad) {\n                if (!router.state.initialized) return;\n                if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\n                    foundOptOutRoute = true;\n                    return;\n                }\n            }\n            if (manifestRoute && manifestRoute.hasClientLoader) {\n                if (manifestRoute.hasLoader) foundOptOutRoute = true;\n                try {\n                    let result = await $c5b33ec0dccca72b$var$fetchSingleLoader(handler, url, init, m.route.id);\n                    results[m.route.id] = {\n                        type: \"data\",\n                        result: result\n                    };\n                } catch (e) {\n                    results[m.route.id] = {\n                        type: \"error\",\n                        result: e\n                    };\n                }\n                return;\n            }\n            if (manifestRoute && manifestRoute.hasLoader) routesParams.add(m.route.id);\n            try {\n                let result = await handler(async ()=>{\n                    let data2 = await singleFetchDfd.promise;\n                    return $c5b33ec0dccca72b$var$unwrapSingleFetchResults(data2, m.route.id);\n                });\n                results[m.route.id] = {\n                    type: \"data\",\n                    result: result\n                };\n            } catch (e) {\n                results[m.route.id] = {\n                    type: \"error\",\n                    result: e\n                };\n            }\n        })));\n    await routesLoadedPromise;\n    if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) singleFetchDfd.resolve({});\n    else try {\n        if (ssr && foundOptOutRoute && routesParams.size > 0) url.searchParams.set(\"_routes\", matches.filter((m)=>routesParams.has(m.route.id)).map((m)=>m.route.id).join(\",\"));\n        let data2 = await $c5b33ec0dccca72b$var$fetchAndDecode(url, init);\n        singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n        singleFetchDfd.reject(e);\n    }\n    await resolvePromise;\n    return results;\n}\nasync function $c5b33ec0dccca72b$var$singleFetchLoaderFetcherStrategy(request, matches) {\n    let fetcherMatch = matches.find((m)=>m.shouldLoad);\n    $c5b33ec0dccca72b$var$invariant2(fetcherMatch, \"No fetcher match found\");\n    let result = await fetcherMatch.resolve(async (handler)=>{\n        let url = $c5b33ec0dccca72b$var$stripIndexParam($c5b33ec0dccca72b$var$singleFetchUrl(request.url));\n        let init = await $c5b33ec0dccca72b$var$createRequestInit(request);\n        return $c5b33ec0dccca72b$var$fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\n    });\n    return {\n        [fetcherMatch.route.id]: result\n    };\n}\nfunction $c5b33ec0dccca72b$var$fetchSingleLoader(handler, url, init, routeId) {\n    return handler(async ()=>{\n        let singleLoaderUrl = new URL(url);\n        singleLoaderUrl.searchParams.set(\"_routes\", routeId);\n        let { data: data2 } = await $c5b33ec0dccca72b$var$fetchAndDecode(singleLoaderUrl, init);\n        return $c5b33ec0dccca72b$var$unwrapSingleFetchResults(data2, routeId);\n    });\n}\nfunction $c5b33ec0dccca72b$var$stripIndexParam(url) {\n    let indexValues = url.searchParams.getAll(\"index\");\n    url.searchParams.delete(\"index\");\n    let indexValuesToKeep = [];\n    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);\n    for (let toKeep of indexValuesToKeep)url.searchParams.append(\"index\", toKeep);\n    return url;\n}\nfunction $c5b33ec0dccca72b$var$singleFetchUrl(reqUrl) {\n    let url = typeof reqUrl === \"string\" ? new URL(reqUrl, // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin) : reqUrl;\n    if (url.pathname === \"/\") url.pathname = \"_root.data\";\n    else url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n    return url;\n}\nasync function $c5b33ec0dccca72b$var$fetchAndDecode(url, init) {\n    let res = await fetch(url, init);\n    if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) throw new $c5b33ec0dccca72b$export$f2680fa305b734ca(404, \"Not Found\", true);\n    const NO_BODY_STATUS_CODES2 = /* @__PURE__ */ new Set([\n        100,\n        101,\n        204,\n        205\n    ]);\n    if (NO_BODY_STATUS_CODES2.has(res.status)) {\n        if (!init.method || init.method === \"GET\") return {\n            status: res.status,\n            data: {}\n        };\n        else return {\n            status: res.status,\n            data: {\n                data: void 0\n            }\n        };\n    }\n    $c5b33ec0dccca72b$var$invariant2(res.body, \"No response body to decode\");\n    try {\n        let decoded = await $c5b33ec0dccca72b$export$4023ad4ecd4126a2(res.body, window);\n        return {\n            status: res.status,\n            data: decoded.value\n        };\n    } catch (e) {\n        throw new Error(\"Unable to decode turbo-stream response\");\n    }\n}\nfunction $c5b33ec0dccca72b$export$4023ad4ecd4126a2(body, global2) {\n    return (0, $38eecd17912935e8$exports.decode)(body, {\n        plugins: [\n            (type, ...rest)=>{\n                if (type === \"SanitizedError\") {\n                    let [name, message, stack] = rest;\n                    let Constructor = Error;\n                    if (name && name in global2 && typeof global2[name] === \"function\") Constructor = global2[name];\n                    let error = new Constructor(message);\n                    error.stack = stack;\n                    return {\n                        value: error\n                    };\n                }\n                if (type === \"ErrorResponse\") {\n                    let [data2, status, statusText] = rest;\n                    return {\n                        value: new $c5b33ec0dccca72b$export$f2680fa305b734ca(status, statusText, data2)\n                    };\n                }\n                if (type === \"SingleFetchRedirect\") return {\n                    value: {\n                        [$c5b33ec0dccca72b$export$60644022b8b46aaa]: rest[0]\n                    }\n                };\n                if (type === \"SingleFetchClassInstance\") return {\n                    value: rest[0]\n                };\n                if (type === \"SingleFetchFallback\") return {\n                    value: void 0\n                };\n            }\n        ]\n    });\n}\nfunction $c5b33ec0dccca72b$var$unwrapSingleFetchResults(results, routeId) {\n    let redirect2 = results[$c5b33ec0dccca72b$export$60644022b8b46aaa];\n    if (redirect2) return $c5b33ec0dccca72b$var$unwrapSingleFetchResult(redirect2, routeId);\n    return results[routeId] !== void 0 ? $c5b33ec0dccca72b$var$unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction $c5b33ec0dccca72b$var$unwrapSingleFetchResult(result, routeId) {\n    if (\"error\" in result) throw result.error;\n    else if (\"redirect\" in result) {\n        let headers = {};\n        if (result.revalidate) headers[\"X-Remix-Revalidate\"] = \"yes\";\n        if (result.reload) headers[\"X-Remix-Reload-Document\"] = \"yes\";\n        if (result.replace) headers[\"X-Remix-Replace\"] = \"yes\";\n        throw $c5b33ec0dccca72b$export$89e12c5b50f7529d(result.redirect, {\n            status: result.status,\n            headers: headers\n        });\n    } else if (\"data\" in result) return result.data;\n    else throw new Error(`No response found for routeId \"${routeId}\"`);\n}\nfunction $c5b33ec0dccca72b$var$createDeferred2() {\n    let resolve;\n    let reject;\n    let promise = new Promise((res, rej)=>{\n        resolve = async (val)=>{\n            res(val);\n            try {\n                await promise;\n            } catch (e) {}\n        };\n        reject = async (error)=>{\n            rej(error);\n            try {\n                await promise;\n            } catch (e) {}\n        };\n    });\n    return {\n        promise: promise,\n        resolve: //@ts-ignore\n        resolve,\n        reject: //@ts-ignore\n        reject\n    };\n}\nvar $c5b33ec0dccca72b$export$32e57f52df4b6e34 = class extends $a972dfa956833003$exports.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error: props.error || null,\n            location: props.location\n        };\n    }\n    static getDerivedStateFromError(error) {\n        return {\n            error: error\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (state.location !== props.location) return {\n            error: props.error || null,\n            location: props.location\n        };\n        return {\n            error: props.error || state.error,\n            location: state.location\n        };\n    }\n    render() {\n        if (this.state.error) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$RemixRootDefaultErrorBoundary, {\n            error: this.state.error,\n            isOutsideRemixApp: true\n        });\n        else return this.props.children;\n    }\n};\nfunction $c5b33ec0dccca72b$var$RemixRootDefaultErrorBoundary({ error: error, isOutsideRemixApp: isOutsideRemixApp }) {\n    console.error(error);\n    let heyDeveloper = /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n        }\n    });\n    if ($c5b33ec0dccca72b$export$972111febbeef05b(error)) return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$BoundaryShell, {\n        title: \"Unhandled Thrown Response!\"\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"h1\", {\n        style: {\n            fontSize: \"24px\"\n        }\n    }, error.status, \" \", error.statusText), heyDeveloper);\n    let errorInstance;\n    if (error instanceof Error) errorInstance = error;\n    else {\n        let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n        errorInstance = new Error(errorString);\n    }\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$BoundaryShell, {\n        title: \"Application Error!\",\n        isOutsideRemixApp: isOutsideRemixApp\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"h1\", {\n        style: {\n            fontSize: \"24px\"\n        }\n    }, \"Application Error\"), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"pre\", {\n        style: {\n            padding: \"2rem\",\n            background: \"hsla(10, 50%, 50%, 0.1)\",\n            color: \"red\",\n            overflow: \"auto\"\n        }\n    }, errorInstance.stack), heyDeveloper);\n}\nfunction $c5b33ec0dccca72b$var$BoundaryShell({ title: title, renderScripts: renderScripts, isOutsideRemixApp: isOutsideRemixApp, children: children }) {\n    let { routeModules: routeModules } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    if (routeModules.root?.Layout && !isOutsideRemixApp) return children;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"html\", {\n        lang: \"en\"\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"head\", null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"meta\", {\n        charSet: \"utf-8\"\n    }), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"title\", null, title)), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"body\", null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"main\", {\n        style: {\n            fontFamily: \"system-ui, sans-serif\",\n            padding: \"2rem\"\n        }\n    }, children, renderScripts ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$ff0bf87698939488, null) : null)));\n}\nfunction $c5b33ec0dccca72b$var$RemixRootDefaultHydrateFallback() {\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$BoundaryShell, {\n        title: \"Loading...\",\n        renderScripts: true\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n        }\n    }));\n}\n// lib/dom/ssr/routes.tsx\nfunction $c5b33ec0dccca72b$var$groupRoutesByParentId(manifest) {\n    let routes = {};\n    Object.values(manifest).forEach((route)=>{\n        if (route) {\n            let parentId = route.parentId || \"\";\n            if (!routes[parentId]) routes[parentId] = [];\n            routes[parentId].push(route);\n        }\n    });\n    return routes;\n}\nfunction $c5b33ec0dccca72b$var$getRouteComponents(route, routeModule, isSpaMode) {\n    let Component4 = $c5b33ec0dccca72b$var$getRouteModuleComponent(routeModule);\n    let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? $c5b33ec0dccca72b$var$RemixRootDefaultHydrateFallback : void 0;\n    let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? ()=>/* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$RemixRootDefaultErrorBoundary, {\n            error: $c5b33ec0dccca72b$export$ed527bf60f6e05f2()\n        }) : void 0;\n    if (route.id === \"root\" && routeModule.Layout) return {\n        ...Component4 ? {\n            element: /* @__PURE__ */ $a972dfa956833003$exports.createElement(routeModule.Layout, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(Component4, null))\n        } : {\n            Component: Component4\n        },\n        ...ErrorBoundary ? {\n            errorElement: /* @__PURE__ */ $a972dfa956833003$exports.createElement(routeModule.Layout, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(ErrorBoundary, null))\n        } : {\n            ErrorBoundary: ErrorBoundary\n        },\n        ...HydrateFallback ? {\n            hydrateFallbackElement: /* @__PURE__ */ $a972dfa956833003$exports.createElement(routeModule.Layout, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(HydrateFallback, null))\n        } : {\n            HydrateFallback: HydrateFallback\n        }\n    };\n    return {\n        Component: Component4,\n        ErrorBoundary: ErrorBoundary,\n        HydrateFallback: HydrateFallback\n    };\n}\nfunction $c5b33ec0dccca72b$var$createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = $c5b33ec0dccca72b$var$groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({\n    Component: ()=>null\n})) {\n    return (routesByParentId[parentId] || []).map((route)=>{\n        let routeModule = routeModules[route.id];\n        $c5b33ec0dccca72b$var$invariant2(routeModule, \"No `routeModule` available to create server routes\");\n        let dataRoute = {\n            ...$c5b33ec0dccca72b$var$getRouteComponents(route, routeModule, isSpaMode),\n            caseSensitive: route.caseSensitive,\n            id: route.id,\n            index: route.index,\n            path: route.path,\n            handle: routeModule.handle,\n            // For SPA Mode, all routes are lazy except root.  However we tell the\n            // router root is also lazy here too since we don't need a full\n            // implementation - we just need a `lazy` prop to tell the RR rendering\n            // where to stop which is always at the root route in SPA mode\n            lazy: isSpaMode ? ()=>spaModeLazyPromise : void 0,\n            // For partial hydration rendering, we need to indicate when the route\n            // has a loader/clientLoader, but it won't ever be called during the static\n            // render, so just give it a no-op function so we can render down to the\n            // proper fallback\n            loader: route.hasLoader || route.hasClientLoader ? ()=>null : void 0\n        };\n        let children = $c5b33ec0dccca72b$var$createServerRoutes(manifest, routeModules, future, isSpaMode, route.id, routesByParentId, spaModeLazyPromise);\n        if (children.length > 0) dataRoute.children = children;\n        return dataRoute;\n    });\n}\nfunction $c5b33ec0dccca72b$export$49d9dc160d22054c(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n    return $c5b33ec0dccca72b$export$af76e85f27ba0229(manifest, routeModulesCache, initialState, ssr, isSpaMode, \"\", $c5b33ec0dccca72b$var$groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(type, route) {\n    if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n        let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n        let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n        console.error(msg);\n        throw new $c5b33ec0dccca72b$export$f2680fa305b734ca(400, \"Bad Request\", new Error(msg), true);\n    }\n}\nfunction $c5b33ec0dccca72b$var$noActionDefinedError(type, routeId) {\n    let article = type === \"clientAction\" ? \"a\" : \"an\";\n    let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n    console.error(msg);\n    throw new $c5b33ec0dccca72b$export$f2680fa305b734ca(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction $c5b33ec0dccca72b$export$af76e85f27ba0229(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = $c5b33ec0dccca72b$var$groupRoutesByParentId(manifest), needsRevalidation) {\n    return (routesByParentId[parentId] || []).map((route)=>{\n        let routeModule = routeModulesCache[route.id];\n        function fetchServerHandler(singleFetch) {\n            $c5b33ec0dccca72b$var$invariant2(typeof singleFetch === \"function\", \"No single fetch function available for route handler\");\n            return singleFetch();\n        }\n        function fetchServerLoader(singleFetch) {\n            if (!route.hasLoader) return Promise.resolve(null);\n            return fetchServerHandler(singleFetch);\n        }\n        function fetchServerAction(singleFetch) {\n            if (!route.hasAction) throw $c5b33ec0dccca72b$var$noActionDefinedError(\"action\", route.id);\n            return fetchServerHandler(singleFetch);\n        }\n        function prefetchModule(modulePath) {\n            import(/* @vite-ignore */ /* webpackIgnore: true */ modulePath);\n        }\n        function prefetchRouteModuleChunks(route2) {\n            if (route2.clientActionModule) prefetchModule(route2.clientActionModule);\n            if (route2.clientLoaderModule) prefetchModule(route2.clientLoaderModule);\n        }\n        async function prefetchStylesAndCallHandler(handler) {\n            let cachedModule = routeModulesCache[route.id];\n            let linkPrefetchPromise = cachedModule ? $c5b33ec0dccca72b$var$prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n            try {\n                return handler();\n            } finally{\n                await linkPrefetchPromise;\n            }\n        }\n        let dataRoute = {\n            id: route.id,\n            index: route.index,\n            path: route.path\n        };\n        if (routeModule) {\n            Object.assign(dataRoute, {\n                ...dataRoute,\n                ...$c5b33ec0dccca72b$var$getRouteComponents(route, routeModule, isSpaMode),\n                handle: routeModule.handle,\n                shouldRevalidate: $c5b33ec0dccca72b$var$getShouldRevalidateFunction(routeModule, route, ssr, needsRevalidation)\n            });\n            let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n            let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n            let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n            let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n            let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n            dataRoute.loader = async ({ request: request, params: params }, singleFetch)=>{\n                try {\n                    let result = await prefetchStylesAndCallHandler(async ()=>{\n                        $c5b33ec0dccca72b$var$invariant2(routeModule, \"No `routeModule` available for critical-route loader\");\n                        if (!routeModule.clientLoader) return fetchServerLoader(singleFetch);\n                        return routeModule.clientLoader({\n                            request: request,\n                            params: params,\n                            async serverLoader () {\n                                $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"loader\", route);\n                                if (isHydrationRequest) {\n                                    if (hasInitialData) return initialData;\n                                    if (hasInitialError) throw initialError;\n                                }\n                                return fetchServerLoader(singleFetch);\n                            }\n                        });\n                    });\n                    return result;\n                } finally{\n                    isHydrationRequest = false;\n                }\n            };\n            dataRoute.loader.hydrate = $c5b33ec0dccca72b$export$6ac68922d4e92125(route, routeModule, isSpaMode);\n            dataRoute.action = ({ request: request, params: params }, singleFetch)=>{\n                return prefetchStylesAndCallHandler(async ()=>{\n                    $c5b33ec0dccca72b$var$invariant2(routeModule, \"No `routeModule` available for critical-route action\");\n                    if (!routeModule.clientAction) {\n                        if (isSpaMode) throw $c5b33ec0dccca72b$var$noActionDefinedError(\"clientAction\", route.id);\n                        return fetchServerAction(singleFetch);\n                    }\n                    return routeModule.clientAction({\n                        request: request,\n                        params: params,\n                        async serverAction () {\n                            $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"action\", route);\n                            return fetchServerAction(singleFetch);\n                        }\n                    });\n                });\n            };\n        } else {\n            if (!route.hasClientLoader) dataRoute.loader = ({ request: request }, singleFetch)=>prefetchStylesAndCallHandler(()=>{\n                    return fetchServerLoader(singleFetch);\n                });\n            else if (route.clientLoaderModule) dataRoute.loader = async (args, singleFetch)=>{\n                $c5b33ec0dccca72b$var$invariant2(route.clientLoaderModule);\n                let { clientLoader: clientLoader } = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientLoaderModule);\n                return clientLoader({\n                    ...args,\n                    async serverLoader () {\n                        $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"loader\", route);\n                        return fetchServerLoader(singleFetch);\n                    }\n                });\n            };\n            if (!route.hasClientAction) dataRoute.action = ({ request: request }, singleFetch)=>prefetchStylesAndCallHandler(()=>{\n                    if (isSpaMode) throw $c5b33ec0dccca72b$var$noActionDefinedError(\"clientAction\", route.id);\n                    return fetchServerAction(singleFetch);\n                });\n            else if (route.clientActionModule) dataRoute.action = async (args, singleFetch)=>{\n                $c5b33ec0dccca72b$var$invariant2(route.clientActionModule);\n                prefetchRouteModuleChunks(route);\n                let { clientAction: clientAction } = await import(/* @vite-ignore */ /* webpackIgnore: true */ route.clientActionModule);\n                return clientAction({\n                    ...args,\n                    async serverAction () {\n                        $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"action\", route);\n                        return fetchServerAction(singleFetch);\n                    }\n                });\n            };\n            dataRoute.lazy = async ()=>{\n                if (route.clientLoaderModule || route.clientActionModule) await new Promise((resolve)=>setTimeout(resolve, 0));\n                let modPromise = $c5b33ec0dccca72b$var$loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n                prefetchRouteModuleChunks(route);\n                let mod = await modPromise;\n                let lazyRoute = {\n                    ...mod\n                };\n                if (mod.clientLoader) {\n                    let clientLoader = mod.clientLoader;\n                    lazyRoute.loader = (args, singleFetch)=>clientLoader({\n                            ...args,\n                            async serverLoader () {\n                                $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"loader\", route);\n                                return fetchServerLoader(singleFetch);\n                            }\n                        });\n                }\n                if (mod.clientAction) {\n                    let clientAction = mod.clientAction;\n                    lazyRoute.action = (args, singleFetch)=>clientAction({\n                            ...args,\n                            async serverAction () {\n                                $c5b33ec0dccca72b$var$preventInvalidServerHandlerCall(\"action\", route);\n                                return fetchServerAction(singleFetch);\n                            }\n                        });\n                }\n                return {\n                    ...lazyRoute.loader ? {\n                        loader: lazyRoute.loader\n                    } : {},\n                    ...lazyRoute.action ? {\n                        action: lazyRoute.action\n                    } : {},\n                    hasErrorBoundary: lazyRoute.hasErrorBoundary,\n                    shouldRevalidate: $c5b33ec0dccca72b$var$getShouldRevalidateFunction(lazyRoute, route, ssr, needsRevalidation),\n                    handle: lazyRoute.handle,\n                    // No need to wrap these in layout since the root route is never\n                    // loaded via route.lazy()\n                    Component: lazyRoute.Component,\n                    ErrorBoundary: lazyRoute.ErrorBoundary\n                };\n            };\n        }\n        let children = $c5b33ec0dccca72b$export$af76e85f27ba0229(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);\n        if (children.length > 0) dataRoute.children = children;\n        return dataRoute;\n    });\n}\nfunction $c5b33ec0dccca72b$var$getShouldRevalidateFunction(route, manifestRoute, ssr, needsRevalidation) {\n    if (needsRevalidation) return $c5b33ec0dccca72b$var$wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);\n    if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n        if (route.shouldRevalidate) {\n            let fn = route.shouldRevalidate;\n            return (opts)=>fn({\n                    ...opts,\n                    defaultShouldRevalidate: false\n                });\n        } else return ()=>false;\n    }\n    if (ssr && route.shouldRevalidate) {\n        let fn = route.shouldRevalidate;\n        return (opts)=>fn({\n                ...opts,\n                defaultShouldRevalidate: true\n            });\n    }\n    return route.shouldRevalidate;\n}\nfunction $c5b33ec0dccca72b$var$wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n    let handledRevalidation = false;\n    return (arg)=>{\n        if (!handledRevalidation) {\n            handledRevalidation = true;\n            return needsRevalidation.has(routeId);\n        }\n        return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n    };\n}\nasync function $c5b33ec0dccca72b$var$loadRouteModuleWithBlockingLinks(route, routeModules) {\n    let routeModulePromise = $c5b33ec0dccca72b$var$loadRouteModule(route, routeModules);\n    let prefetchRouteCssPromise = $c5b33ec0dccca72b$var$prefetchRouteCss(route);\n    let routeModule = await routeModulePromise;\n    await Promise.all([\n        prefetchRouteCssPromise,\n        $c5b33ec0dccca72b$var$prefetchStyleLinks(route, routeModule)\n    ]);\n    return {\n        Component: $c5b33ec0dccca72b$var$getRouteModuleComponent(routeModule),\n        ErrorBoundary: routeModule.ErrorBoundary,\n        clientAction: routeModule.clientAction,\n        clientLoader: routeModule.clientLoader,\n        handle: routeModule.handle,\n        links: routeModule.links,\n        meta: routeModule.meta,\n        shouldRevalidate: routeModule.shouldRevalidate\n    };\n}\nfunction $c5b33ec0dccca72b$var$getRouteModuleComponent(routeModule) {\n    if (routeModule.default == null) return void 0;\n    let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n    if (!isEmptyObject) return routeModule.default;\n}\nfunction $c5b33ec0dccca72b$export$6ac68922d4e92125(route, routeModule, isSpaMode) {\n    return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n// lib/dom/ssr/fog-of-war.ts\nvar $c5b33ec0dccca72b$var$nextPaths = /* @__PURE__ */ new Set();\nvar $c5b33ec0dccca72b$var$discoveredPathsMaxSize = 1e3;\nvar $c5b33ec0dccca72b$var$discoveredPaths = /* @__PURE__ */ new Set();\nvar $c5b33ec0dccca72b$var$URL_LIMIT = 7680;\nfunction $c5b33ec0dccca72b$var$isFogOfWarEnabled(ssr) {\n    return ssr === true;\n}\nfunction $c5b33ec0dccca72b$var$getPartialManifest(manifest, router) {\n    let routeIds = new Set(router.state.matches.map((m)=>m.route.id));\n    let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n    let paths = [\n        \"/\"\n    ];\n    segments.pop();\n    while(segments.length > 0){\n        paths.push(`/${segments.join(\"/\")}`);\n        segments.pop();\n    }\n    paths.forEach((path)=>{\n        let matches = $c5b33ec0dccca72b$export$2708184779ceb39d(router.routes, path, router.basename);\n        if (matches) matches.forEach((m)=>routeIds.add(m.route.id));\n    });\n    let initialRoutes = [\n        ...routeIds\n    ].reduce((acc, id)=>Object.assign(acc, {\n            [id]: manifest.routes[id]\n        }), {});\n    return {\n        ...manifest,\n        routes: initialRoutes\n    };\n}\nfunction $c5b33ec0dccca72b$export$72ab377a1030deb9(manifest, routeModules, ssr, isSpaMode, basename) {\n    if (!$c5b33ec0dccca72b$var$isFogOfWarEnabled(ssr)) return void 0;\n    return async ({ path: path, patch: patch, signal: signal })=>{\n        if ($c5b33ec0dccca72b$var$discoveredPaths.has(path)) return;\n        await $c5b33ec0dccca72b$var$fetchAndApplyManifestPatches([\n            path\n        ], manifest, routeModules, ssr, isSpaMode, basename, patch, signal);\n    };\n}\nfunction $c5b33ec0dccca72b$export$5ef046b23d96090d(router, manifest, routeModules, ssr, isSpaMode) {\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (!$c5b33ec0dccca72b$var$isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) return;\n        function registerElement(el) {\n            let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n            if (!path) return;\n            let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n            if (!$c5b33ec0dccca72b$var$discoveredPaths.has(pathname)) $c5b33ec0dccca72b$var$nextPaths.add(pathname);\n        }\n        async function fetchPatches() {\n            document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n            let lazyPaths = Array.from($c5b33ec0dccca72b$var$nextPaths.keys()).filter((path)=>{\n                if ($c5b33ec0dccca72b$var$discoveredPaths.has(path)) {\n                    $c5b33ec0dccca72b$var$nextPaths.delete(path);\n                    return false;\n                }\n                return true;\n            });\n            if (lazyPaths.length === 0) return;\n            try {\n                await $c5b33ec0dccca72b$var$fetchAndApplyManifestPatches(lazyPaths, manifest, routeModules, ssr, isSpaMode, router.basename, router.patchRoutes);\n            } catch (e) {\n                console.error(\"Failed to fetch manifest patches\", e);\n            }\n        }\n        let debouncedFetchPatches = $c5b33ec0dccca72b$var$debounce(fetchPatches, 100);\n        fetchPatches();\n        let observer = new MutationObserver(()=>debouncedFetchPatches());\n        observer.observe(document.documentElement, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeFilter: [\n                \"data-discover\",\n                \"href\",\n                \"action\"\n            ]\n        });\n        return ()=>observer.disconnect();\n    }, [\n        ssr,\n        isSpaMode,\n        manifest,\n        routeModules,\n        router\n    ]);\n}\nasync function $c5b33ec0dccca72b$var$fetchAndApplyManifestPatches(paths, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n    let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n    let url = new URL(manifestPath, window.location.origin);\n    paths.sort().forEach((path)=>url.searchParams.append(\"p\", path));\n    url.searchParams.set(\"version\", manifest.version);\n    if (url.toString().length > $c5b33ec0dccca72b$var$URL_LIMIT) {\n        $c5b33ec0dccca72b$var$nextPaths.clear();\n        return;\n    }\n    let serverPatches;\n    try {\n        let res = await fetch(url, {\n            signal: signal\n        });\n        if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);\n        else if (res.status >= 400) throw new Error(await res.text());\n        serverPatches = await res.json();\n    } catch (e) {\n        if (signal?.aborted) return;\n        throw e;\n    }\n    let knownRoutes = new Set(Object.keys(manifest.routes));\n    let patches = Object.values(serverPatches).reduce((acc, route)=>{\n        if (route && !knownRoutes.has(route.id)) acc[route.id] = route;\n        return acc;\n    }, {});\n    Object.assign(manifest.routes, patches);\n    paths.forEach((p)=>$c5b33ec0dccca72b$var$addToFifoQueue(p, $c5b33ec0dccca72b$var$discoveredPaths));\n    let parentIds = /* @__PURE__ */ new Set();\n    Object.values(patches).forEach((patch)=>{\n        if (patch && (!patch.parentId || !patches[patch.parentId])) parentIds.add(patch.parentId);\n    });\n    parentIds.forEach((parentId)=>patchRoutes(parentId || null, $c5b33ec0dccca72b$export$af76e85f27ba0229(patches, routeModules, null, ssr, isSpaMode, parentId)));\n}\nfunction $c5b33ec0dccca72b$var$addToFifoQueue(path, queue) {\n    if (queue.size >= $c5b33ec0dccca72b$var$discoveredPathsMaxSize) {\n        let first = queue.values().next().value;\n        queue.delete(first);\n    }\n    queue.add(path);\n}\nfunction $c5b33ec0dccca72b$var$debounce(callback, wait) {\n    let timeoutId;\n    return (...args)=>{\n        window.clearTimeout(timeoutId);\n        timeoutId = window.setTimeout(()=>callback(...args), wait);\n    };\n}\n// lib/dom/ssr/components.tsx\nfunction $c5b33ec0dccca72b$var$useDataRouterContext2() {\n    let context = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$2eeee58951ff3c1c);\n    $c5b33ec0dccca72b$var$invariant2(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n    return context;\n}\nfunction $c5b33ec0dccca72b$var$useDataRouterStateContext() {\n    let context = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$315e3ffb01f217);\n    $c5b33ec0dccca72b$var$invariant2(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n    return context;\n}\nvar $c5b33ec0dccca72b$export$208d6a3bc3aa62bd = $a972dfa956833003$exports.createContext(void 0);\n$c5b33ec0dccca72b$export$208d6a3bc3aa62bd.displayName = \"FrameworkContext\";\nfunction $c5b33ec0dccca72b$var$useFrameworkContext() {\n    let context = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$208d6a3bc3aa62bd);\n    $c5b33ec0dccca72b$var$invariant2(context, \"You must render this element inside a <HydratedRouter> element\");\n    return context;\n}\nfunction $c5b33ec0dccca72b$var$usePrefetchBehavior(prefetch, theirElementProps) {\n    let frameworkContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$208d6a3bc3aa62bd);\n    let [maybePrefetch, setMaybePrefetch] = $a972dfa956833003$exports.useState(false);\n    let [shouldPrefetch, setShouldPrefetch] = $a972dfa956833003$exports.useState(false);\n    let { onFocus: onFocus, onBlur: onBlur, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onTouchStart: onTouchStart } = theirElementProps;\n    let ref = $a972dfa956833003$exports.useRef(null);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (prefetch === \"render\") setShouldPrefetch(true);\n        if (prefetch === \"viewport\") {\n            let callback = (entries)=>{\n                entries.forEach((entry)=>{\n                    setShouldPrefetch(entry.isIntersecting);\n                });\n            };\n            let observer = new IntersectionObserver(callback, {\n                threshold: 0.5\n            });\n            if (ref.current) observer.observe(ref.current);\n            return ()=>{\n                observer.disconnect();\n            };\n        }\n    }, [\n        prefetch\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (maybePrefetch) {\n            let id = setTimeout(()=>{\n                setShouldPrefetch(true);\n            }, 100);\n            return ()=>{\n                clearTimeout(id);\n            };\n        }\n    }, [\n        maybePrefetch\n    ]);\n    let setIntent = ()=>{\n        setMaybePrefetch(true);\n    };\n    let cancelIntent = ()=>{\n        setMaybePrefetch(false);\n        setShouldPrefetch(false);\n    };\n    if (!frameworkContext) return [\n        false,\n        ref,\n        {}\n    ];\n    if (prefetch !== \"intent\") return [\n        shouldPrefetch,\n        ref,\n        {}\n    ];\n    return [\n        shouldPrefetch,\n        ref,\n        {\n            onFocus: $c5b33ec0dccca72b$var$composeEventHandlers(onFocus, setIntent),\n            onBlur: $c5b33ec0dccca72b$var$composeEventHandlers(onBlur, cancelIntent),\n            onMouseEnter: $c5b33ec0dccca72b$var$composeEventHandlers(onMouseEnter, setIntent),\n            onMouseLeave: $c5b33ec0dccca72b$var$composeEventHandlers(onMouseLeave, cancelIntent),\n            onTouchStart: $c5b33ec0dccca72b$var$composeEventHandlers(onTouchStart, setIntent)\n        }\n    ];\n}\nfunction $c5b33ec0dccca72b$var$composeEventHandlers(theirHandler, ourHandler) {\n    return (event)=>{\n        theirHandler && theirHandler(event);\n        if (!event.defaultPrevented) ourHandler(event);\n    };\n}\nfunction $c5b33ec0dccca72b$var$getActiveMatches(matches, errors, isSpaMode) {\n    if (isSpaMode && !$c5b33ec0dccca72b$var$isHydrated) return [\n        matches[0]\n    ];\n    if (errors) {\n        let errorIdx = matches.findIndex((m)=>errors[m.route.id] !== void 0);\n        return matches.slice(0, errorIdx + 1);\n    }\n    return matches;\n}\nfunction $c5b33ec0dccca72b$export$b2e089eb3692b073() {\n    let { isSpaMode: isSpaMode, manifest: manifest, routeModules: routeModules, criticalCss: criticalCss } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    let { errors: errors, matches: routerMatches } = $c5b33ec0dccca72b$var$useDataRouterStateContext();\n    let matches = $c5b33ec0dccca72b$var$getActiveMatches(routerMatches, errors, isSpaMode);\n    let keyedLinks = $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$var$getKeyedLinksForMatches(matches, routeModules, manifest), [\n        matches,\n        routeModules,\n        manifest\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, criticalCss ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: criticalCss\n        }\n    }) : null, keyedLinks.map(({ key: key, link: link })=>$c5b33ec0dccca72b$var$isPageLinkDescriptor(link) ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$60dcec93e67386bd, {\n            key: key,\n            ...link\n        }) : /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n            key: key,\n            ...link\n        })));\n}\nfunction $c5b33ec0dccca72b$export$60dcec93e67386bd({ page: page, ...dataLinkProps }) {\n    let { router: router } = $c5b33ec0dccca72b$var$useDataRouterContext2();\n    let matches = $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$export$2708184779ceb39d(router.routes, page, router.basename), [\n        router.routes,\n        page,\n        router.basename\n    ]);\n    if (!matches) return null;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$PrefetchPageLinksImpl, {\n        page: page,\n        matches: matches,\n        ...dataLinkProps\n    });\n}\nfunction $c5b33ec0dccca72b$var$useKeyedPrefetchLinks(matches) {\n    let { manifest: manifest, routeModules: routeModules } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    let [keyedPrefetchLinks, setKeyedPrefetchLinks] = $a972dfa956833003$exports.useState([]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        let interrupted = false;\n        $c5b33ec0dccca72b$var$getKeyedPrefetchLinks(matches, manifest, routeModules).then((links)=>{\n            if (!interrupted) setKeyedPrefetchLinks(links);\n        });\n        return ()=>{\n            interrupted = true;\n        };\n    }, [\n        matches,\n        manifest,\n        routeModules\n    ]);\n    return keyedPrefetchLinks;\n}\nfunction $c5b33ec0dccca72b$var$PrefetchPageLinksImpl({ page: page, matches: nextMatches, ...linkProps }) {\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let { manifest: manifest, routeModules: routeModules } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    let { loaderData: loaderData, matches: matches } = $c5b33ec0dccca72b$var$useDataRouterStateContext();\n    let newMatchesForData = $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$var$getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"data\"), [\n        page,\n        nextMatches,\n        matches,\n        manifest,\n        location\n    ]);\n    let newMatchesForAssets = $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$var$getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"assets\"), [\n        page,\n        nextMatches,\n        matches,\n        manifest,\n        location\n    ]);\n    let dataHrefs = $a972dfa956833003$exports.useMemo(()=>{\n        if (page === location.pathname + location.search + location.hash) return [];\n        let routesParams = /* @__PURE__ */ new Set();\n        let foundOptOutRoute = false;\n        nextMatches.forEach((m)=>{\n            let manifestRoute = manifest.routes[m.route.id];\n            if (!manifestRoute || !manifestRoute.hasLoader) return;\n            if (!newMatchesForData.some((m2)=>m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) foundOptOutRoute = true;\n            else if (manifestRoute.hasClientLoader) foundOptOutRoute = true;\n            else routesParams.add(m.route.id);\n        });\n        if (routesParams.size === 0) return [];\n        let url = $c5b33ec0dccca72b$var$singleFetchUrl(page);\n        if (foundOptOutRoute && routesParams.size > 0) url.searchParams.set(\"_routes\", nextMatches.filter((m)=>routesParams.has(m.route.id)).map((m)=>m.route.id).join(\",\"));\n        return [\n            url.pathname + url.search\n        ];\n    }, [\n        loaderData,\n        location,\n        manifest,\n        newMatchesForData,\n        nextMatches,\n        page,\n        routeModules\n    ]);\n    let moduleHrefs = $a972dfa956833003$exports.useMemo(()=>$c5b33ec0dccca72b$var$getModuleLinkHrefs(newMatchesForAssets, manifest), [\n        newMatchesForAssets,\n        manifest\n    ]);\n    let keyedPrefetchLinks = $c5b33ec0dccca72b$var$useKeyedPrefetchLinks(newMatchesForAssets);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, dataHrefs.map((href2)=>/* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n            key: href2,\n            rel: \"prefetch\",\n            as: \"fetch\",\n            href: href2,\n            ...linkProps\n        })), moduleHrefs.map((href2)=>/* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n            key: href2,\n            rel: \"modulepreload\",\n            href: href2,\n            ...linkProps\n        })), keyedPrefetchLinks.map(({ key: key, link: link })=>// these don't spread `linkProps` because they are full link descriptors\n        // already with their own props\n        /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n            key: key,\n            ...link\n        })));\n}\nfunction $c5b33ec0dccca72b$export$b08a9033b36413fb() {\n    let { isSpaMode: isSpaMode, routeModules: routeModules } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    let { errors: errors, matches: routerMatches, loaderData: loaderData } = $c5b33ec0dccca72b$var$useDataRouterStateContext();\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let _matches = $c5b33ec0dccca72b$var$getActiveMatches(routerMatches, errors, isSpaMode);\n    let error = null;\n    if (errors) error = errors[_matches[_matches.length - 1].route.id];\n    let meta = [];\n    let leafMeta = null;\n    let matches = [];\n    for(let i = 0; i < _matches.length; i++){\n        let _match = _matches[i];\n        let routeId = _match.route.id;\n        let data2 = loaderData[routeId];\n        let params = _match.params;\n        let routeModule = routeModules[routeId];\n        let routeMeta = [];\n        let match = {\n            id: routeId,\n            data: data2,\n            meta: [],\n            params: _match.params,\n            pathname: _match.pathname,\n            handle: _match.route.handle,\n            error: error\n        };\n        matches[i] = match;\n        if (routeModule?.meta) routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n            data: data2,\n            params: params,\n            location: location,\n            matches: matches,\n            error: error\n        }) : Array.isArray(routeModule.meta) ? [\n            ...routeModule.meta\n        ] : routeModule.meta;\n        else if (leafMeta) routeMeta = [\n            ...leafMeta\n        ];\n        routeMeta = routeMeta || [];\n        if (!Array.isArray(routeMeta)) throw new Error(\"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\");\n        match.meta = routeMeta;\n        matches[i] = match;\n        meta = [\n            ...routeMeta\n        ];\n        leafMeta = meta;\n    }\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, meta.flat().map((metaProps)=>{\n        if (!metaProps) return null;\n        if (\"tagName\" in metaProps) {\n            let { tagName: tagName, ...rest } = metaProps;\n            if (!$c5b33ec0dccca72b$var$isValidMetaTag(tagName)) {\n                console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);\n                return null;\n            }\n            let Comp = tagName;\n            return /* @__PURE__ */ $a972dfa956833003$exports.createElement(Comp, {\n                key: JSON.stringify(rest),\n                ...rest\n            });\n        }\n        if (\"title\" in metaProps) return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"title\", {\n            key: \"title\"\n        }, String(metaProps.title));\n        if (\"charset\" in metaProps) {\n            metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n            delete metaProps.charset;\n        }\n        if (\"charSet\" in metaProps && metaProps.charSet != null) return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"meta\", {\n            key: \"charSet\",\n            charSet: metaProps.charSet\n        }) : null;\n        if (\"script:ld+json\" in metaProps) try {\n            let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n            return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n                key: `script:ld+json:${json}`,\n                type: \"application/ld+json\",\n                dangerouslySetInnerHTML: {\n                    __html: json\n                }\n            });\n        } catch (err) {\n            return null;\n        }\n        return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"meta\", {\n            key: JSON.stringify(metaProps),\n            ...metaProps\n        });\n    }));\n}\nfunction $c5b33ec0dccca72b$var$isValidMetaTag(tagName) {\n    return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar $c5b33ec0dccca72b$var$isHydrated = false;\nfunction $c5b33ec0dccca72b$export$ff0bf87698939488(props) {\n    let { manifest: manifest, serverHandoffString: serverHandoffString, isSpaMode: isSpaMode, ssr: ssr, renderMeta: renderMeta } = $c5b33ec0dccca72b$var$useFrameworkContext();\n    let { router: router, static: isStatic, staticContext: staticContext } = $c5b33ec0dccca72b$var$useDataRouterContext2();\n    let { matches: routerMatches } = $c5b33ec0dccca72b$var$useDataRouterStateContext();\n    let enableFogOfWar = $c5b33ec0dccca72b$var$isFogOfWarEnabled(ssr);\n    if (renderMeta) renderMeta.didRenderScripts = true;\n    let matches = $c5b33ec0dccca72b$var$getActiveMatches(routerMatches, null, isSpaMode);\n    $a972dfa956833003$exports.useEffect(()=>{\n        $c5b33ec0dccca72b$var$isHydrated = true;\n    }, []);\n    let initialScripts = $a972dfa956833003$exports.useMemo(()=>{\n        let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n        let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n        let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex)=>{\n            let routeVarName = `route${routeIndex}`;\n            let manifestEntry = manifest.routes[match.route.id];\n            $c5b33ec0dccca72b$var$invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n            let { clientActionModule: clientActionModule, clientLoaderModule: clientLoaderModule, hydrateFallbackModule: hydrateFallbackModule, module: module } = manifestEntry;\n            let chunks = [\n                ...clientActionModule ? [\n                    {\n                        module: clientActionModule,\n                        varName: `${routeVarName}_clientAction`\n                    }\n                ] : [],\n                ...clientLoaderModule ? [\n                    {\n                        module: clientLoaderModule,\n                        varName: `${routeVarName}_clientLoader`\n                    }\n                ] : [],\n                ...hydrateFallbackModule ? [\n                    {\n                        module: hydrateFallbackModule,\n                        varName: `${routeVarName}_HydrateFallback`\n                    }\n                ] : [],\n                {\n                    module: module,\n                    varName: `${routeVarName}_main`\n                }\n            ];\n            if (chunks.length === 1) return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n            let chunkImportsSnippet = chunks.map((chunk)=>`import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n            let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk)=>`...${chunk.varName}`).join(\",\")}};`;\n            return [\n                chunkImportsSnippet,\n                mergedChunksSnippet\n            ].join(\"\\n\");\n        }).join(\"\\n\")}\n  ${enableFogOfWar ? // Inline a minimal manifest with the SSR matches\n        `window.__reactRouterManifest = ${JSON.stringify($c5b33ec0dccca72b$var$getPartialManifest(manifest, router), null, 2)};` : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index)=>`${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n        return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n            ...props,\n            suppressHydrationWarning: true,\n            dangerouslySetInnerHTML: $c5b33ec0dccca72b$var$createHtml(contextScript),\n            type: void 0\n        }), /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n            ...props,\n            suppressHydrationWarning: true,\n            dangerouslySetInnerHTML: $c5b33ec0dccca72b$var$createHtml(routeModulesScript),\n            type: \"module\",\n            async: true\n        }));\n    }, []);\n    let preloads = $c5b33ec0dccca72b$var$isHydrated ? [] : manifest.entry.imports.concat($c5b33ec0dccca72b$var$getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n    }));\n    return $c5b33ec0dccca72b$var$isHydrated ? null : /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n        rel: \"modulepreload\",\n        href: manifest.url,\n        crossOrigin: props.crossOrigin\n    }) : null, /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n        rel: \"modulepreload\",\n        href: manifest.entry.module,\n        crossOrigin: props.crossOrigin\n    }), $c5b33ec0dccca72b$var$dedupe(preloads).map((path)=>/* @__PURE__ */ $a972dfa956833003$exports.createElement(\"link\", {\n            key: path,\n            rel: \"modulepreload\",\n            href: path,\n            crossOrigin: props.crossOrigin\n        })), initialScripts);\n}\nfunction $c5b33ec0dccca72b$var$dedupe(array) {\n    return [\n        ...new Set(array)\n    ];\n}\nfunction $c5b33ec0dccca72b$var$mergeRefs(...refs) {\n    return (value)=>{\n        refs.forEach((ref)=>{\n            if (typeof ref === \"function\") ref(value);\n            else if (ref != null) ref.current = value;\n        });\n    };\n}\n// lib/dom/lib.tsx\nvar $c5b33ec0dccca72b$var$isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n    if ($c5b33ec0dccca72b$var$isBrowser) window.__reactRouterVersion = \"7.2.0\";\n} catch (e) {}\nfunction $c5b33ec0dccca72b$export$1f3f55432a00e06d(routes, opts) {\n    return $c5b33ec0dccca72b$export$baddd0131ee8c05b({\n        basename: opts?.basename,\n        future: opts?.future,\n        history: $c5b33ec0dccca72b$export$719fc203c4e16dee({\n            window: opts?.window\n        }),\n        hydrationData: opts?.hydrationData || $c5b33ec0dccca72b$var$parseHydrationData(),\n        routes: routes,\n        mapRouteProperties: $c5b33ec0dccca72b$export$9269a41d8c4635e,\n        dataStrategy: opts?.dataStrategy,\n        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n        window: opts?.window\n    }).initialize();\n}\nfunction $c5b33ec0dccca72b$export$1ba7ed8a3a7b3765(routes, opts) {\n    return $c5b33ec0dccca72b$export$baddd0131ee8c05b({\n        basename: opts?.basename,\n        future: opts?.future,\n        history: $c5b33ec0dccca72b$var$createHashHistory({\n            window: opts?.window\n        }),\n        hydrationData: opts?.hydrationData || $c5b33ec0dccca72b$var$parseHydrationData(),\n        routes: routes,\n        mapRouteProperties: $c5b33ec0dccca72b$export$9269a41d8c4635e,\n        dataStrategy: opts?.dataStrategy,\n        patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n        window: opts?.window\n    }).initialize();\n}\nfunction $c5b33ec0dccca72b$var$parseHydrationData() {\n    let state = window?.__staticRouterHydrationData;\n    if (state && state.errors) state = {\n        ...state,\n        errors: $c5b33ec0dccca72b$var$deserializeErrors(state.errors)\n    };\n    return state;\n}\nfunction $c5b33ec0dccca72b$var$deserializeErrors(errors) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries){\n        if (val && val.__type === \"RouteErrorResponse\") serialized[key] = new $c5b33ec0dccca72b$export$f2680fa305b734ca(val.status, val.statusText, val.data, val.internal === true);\n        else if (val && val.__type === \"Error\") {\n            if (val.__subType) {\n                let ErrorConstructor = window[val.__subType];\n                if (typeof ErrorConstructor === \"function\") try {\n                    let error = new ErrorConstructor(val.message);\n                    error.stack = \"\";\n                    serialized[key] = error;\n                } catch (e) {}\n            }\n            if (serialized[key] == null) {\n                let error = new Error(val.message);\n                error.stack = \"\";\n                serialized[key] = error;\n            }\n        } else serialized[key] = val;\n    }\n    return serialized;\n}\nfunction $c5b33ec0dccca72b$export$9ba4e89fdfa1fc54({ basename: basename, children: children, window: window2 }) {\n    let historyRef = $a972dfa956833003$exports.useRef();\n    if (historyRef.current == null) historyRef.current = $c5b33ec0dccca72b$export$719fc203c4e16dee({\n        window: window2,\n        v5Compat: true\n    });\n    let history = historyRef.current;\n    let [state, setStateImpl] = $a972dfa956833003$exports.useState({\n        action: history.action,\n        location: history.location\n    });\n    let setState = $a972dfa956833003$exports.useCallback((newState)=>{\n        $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n    }, [\n        setStateImpl\n    ]);\n    $a972dfa956833003$exports.useLayoutEffect(()=>history.listen(setState), [\n        history,\n        setState\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\nfunction $c5b33ec0dccca72b$export$7221d69dcfc8e36b({ basename: basename, children: children, window: window2 }) {\n    let historyRef = $a972dfa956833003$exports.useRef();\n    if (historyRef.current == null) historyRef.current = $c5b33ec0dccca72b$var$createHashHistory({\n        window: window2,\n        v5Compat: true\n    });\n    let history = historyRef.current;\n    let [state, setStateImpl] = $a972dfa956833003$exports.useState({\n        action: history.action,\n        location: history.location\n    });\n    let setState = $a972dfa956833003$exports.useCallback((newState)=>{\n        $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n    }, [\n        setStateImpl\n    ]);\n    $a972dfa956833003$exports.useLayoutEffect(()=>history.listen(setState), [\n        history,\n        setState\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\nfunction $c5b33ec0dccca72b$export$de73885c9336221c({ basename: basename, children: children, history: history }) {\n    let [state, setStateImpl] = $a972dfa956833003$exports.useState({\n        action: history.action,\n        location: history.location\n    });\n    let setState = $a972dfa956833003$exports.useCallback((newState)=>{\n        $a972dfa956833003$exports.startTransition(()=>setStateImpl(newState));\n    }, [\n        setStateImpl\n    ]);\n    $a972dfa956833003$exports.useLayoutEffect(()=>history.listen(setState), [\n        history,\n        setState\n    ]);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\n$c5b33ec0dccca72b$export$de73885c9336221c.displayName = \"unstable_HistoryRouter\";\nvar $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar $c5b33ec0dccca72b$export$a6c7ac8248d6e38a = $a972dfa956833003$exports.forwardRef(function LinkWithRef({ onClick: onClick, discover: discover = \"render\", prefetch: prefetch = \"none\", relative: relative, reloadDocument: reloadDocument, replace: replace2, state: state, target: target, to: to, preventScrollReset: preventScrollReset, viewTransition: viewTransition, ...rest }, forwardedRef) {\n    let { basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let isAbsolute = typeof to === \"string\" && $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n        absoluteHref = to;\n        if ($c5b33ec0dccca72b$var$isBrowser) try {\n            let currentUrl = new URL(window.location.href);\n            let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n            let path = $c5b33ec0dccca72b$var$stripBasename(targetUrl.pathname, basename);\n            if (targetUrl.origin === currentUrl.origin && path != null) to = path + targetUrl.search + targetUrl.hash;\n            else isExternal = true;\n        } catch (e) {\n            $c5b33ec0dccca72b$var$warning(false, `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`);\n        }\n    }\n    let href2 = $c5b33ec0dccca72b$export$b66bb29c5006f12f(to, {\n        relative: relative\n    });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = $c5b33ec0dccca72b$var$usePrefetchBehavior(prefetch, rest);\n    let internalOnClick = $c5b33ec0dccca72b$export$67621102c14d847(to, {\n        replace: replace2,\n        state: state,\n        target: target,\n        preventScrollReset: preventScrollReset,\n        relative: relative,\n        viewTransition: viewTransition\n    });\n    function handleClick(event) {\n        if (onClick) onClick(event);\n        if (!event.defaultPrevented) internalOnClick(event);\n    }\n    let link = // eslint-disable-next-line jsx-a11y/anchor-has-content\n    /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"a\", {\n        ...rest,\n        ...prefetchHandlers,\n        href: absoluteHref || href2,\n        onClick: isExternal || reloadDocument ? onClick : handleClick,\n        ref: $c5b33ec0dccca72b$var$mergeRefs(forwardedRef, prefetchRef),\n        target: target,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n    });\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, link, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$60dcec93e67386bd, {\n        page: href2\n    })) : link;\n});\n$c5b33ec0dccca72b$export$a6c7ac8248d6e38a.displayName = \"Link\";\nvar $c5b33ec0dccca72b$export$b0d92dbee9b5b60d = $a972dfa956833003$exports.forwardRef(function NavLinkWithRef({ \"aria-current\": ariaCurrentProp = \"page\", caseSensitive: caseSensitive = false, className: classNameProp = \"\", end: end = false, style: styleProp, to: to, viewTransition: viewTransition, children: children, ...rest }, ref) {\n    let path = $c5b33ec0dccca72b$export$e75d2a2d1b3c245b(to, {\n        relative: rest.relative\n    });\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let routerState = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$315e3ffb01f217);\n    let { navigator: navigator2, basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    $c5b33ec0dccca72b$export$e262bd1977bea848(path) && viewTransition === true;\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n        locationPathname = locationPathname.toLowerCase();\n        nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n        toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) nextLocationPathname = $c5b33ec0dccca72b$var$stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n        isActive: isActive,\n        isPending: isPending,\n        isTransitioning: isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") className = classNameProp(renderProps);\n    else className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n    ].filter(Boolean).join(\" \");\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$a6c7ac8248d6e38a, {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className: className,\n        ref: ref,\n        style: style,\n        to: to,\n        viewTransition: viewTransition\n    }, typeof children === \"function\" ? children(renderProps) : children);\n});\n$c5b33ec0dccca72b$export$b0d92dbee9b5b60d.displayName = \"NavLink\";\nvar $c5b33ec0dccca72b$export$a7fed597f4b8afd8 = $a972dfa956833003$exports.forwardRef(({ discover: discover = \"render\", fetcherKey: fetcherKey, navigate: navigate, reloadDocument: reloadDocument, replace: replace2, state: state, method: method = $c5b33ec0dccca72b$var$defaultMethod, action: action, onSubmit: onSubmit, relative: relative, preventScrollReset: preventScrollReset, viewTransition: viewTransition, ...props }, forwardedRef)=>{\n    let submit = $c5b33ec0dccca72b$export$47c85c6e3a081d3();\n    let formAction = $c5b33ec0dccca72b$export$89a6bd6db0d97c56(action, {\n        relative: relative\n    });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event)=>{\n        onSubmit && onSubmit(event);\n        if (event.defaultPrevented) return;\n        event.preventDefault();\n        let submitter = event.nativeEvent.submitter;\n        let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n        submit(submitter || event.currentTarget, {\n            fetcherKey: fetcherKey,\n            method: submitMethod,\n            navigate: navigate,\n            replace: replace2,\n            state: state,\n            relative: relative,\n            preventScrollReset: preventScrollReset,\n            viewTransition: viewTransition\n        });\n    };\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"form\", {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n    });\n});\n$c5b33ec0dccca72b$export$a7fed597f4b8afd8.displayName = \"Form\";\nfunction $c5b33ec0dccca72b$export$11aac1aab828f1fa({ getKey: getKey, storageKey: storageKey, ...props }) {\n    let remixContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$208d6a3bc3aa62bd);\n    let { basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let matches = $c5b33ec0dccca72b$export$2378eb7f5ff86053();\n    $c5b33ec0dccca72b$export$c4ffdfe23dd48040({\n        getKey: getKey,\n        storageKey: storageKey\n    });\n    let ssrKey = $a972dfa956833003$exports.useMemo(()=>{\n        if (!remixContext || !getKey) return null;\n        let userKey = $c5b33ec0dccca72b$var$getScrollRestorationKey(location, matches, basename, getKey);\n        return userKey !== location.key ? userKey : null;\n    }, // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    if (!remixContext || remixContext.isSpaMode) return null;\n    let restoreScroll = ((storageKey2, restoreKey)=>{\n        if (!window.history.state || !window.history.state.key) {\n            let key = Math.random().toString(32).slice(2);\n            window.history.replaceState({\n                key: key\n            }, \"\");\n        }\n        try {\n            let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n            let storedY = positions[restoreKey || window.history.state.key];\n            if (typeof storedY === \"number\") window.scrollTo(0, storedY);\n        } catch (error) {\n            console.error(error);\n            sessionStorage.removeItem(storageKey2);\n        }\n    }).toString();\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: {\n            __html: `(${restoreScroll})(${JSON.stringify(storageKey || $c5b33ec0dccca72b$var$SCROLL_RESTORATION_STORAGE_KEY)}, ${JSON.stringify(ssrKey)})`\n        }\n    });\n}\n$c5b33ec0dccca72b$export$11aac1aab828f1fa.displayName = \"ScrollRestoration\";\nfunction $c5b33ec0dccca72b$var$getDataRouterConsoleError2(hookName) {\n    return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction $c5b33ec0dccca72b$var$useDataRouterContext3(hookName) {\n    let ctx = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$2eeee58951ff3c1c);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(ctx, $c5b33ec0dccca72b$var$getDataRouterConsoleError2(hookName));\n    return ctx;\n}\nfunction $c5b33ec0dccca72b$var$useDataRouterState2(hookName) {\n    let state = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$315e3ffb01f217);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(state, $c5b33ec0dccca72b$var$getDataRouterConsoleError2(hookName));\n    return state;\n}\nfunction $c5b33ec0dccca72b$export$67621102c14d847(to, { target: target, replace: replaceProp, state: state, preventScrollReset: preventScrollReset, relative: relative, viewTransition: viewTransition } = {}) {\n    let navigate = $c5b33ec0dccca72b$export$9770f232ac06a008();\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let path = $c5b33ec0dccca72b$export$e75d2a2d1b3c245b(to, {\n        relative: relative\n    });\n    return $a972dfa956833003$exports.useCallback((event)=>{\n        if ($c5b33ec0dccca72b$var$shouldProcessLinkClick(event, target)) {\n            event.preventDefault();\n            let replace2 = replaceProp !== void 0 ? replaceProp : $c5b33ec0dccca72b$export$fe53371bee54353d(location) === $c5b33ec0dccca72b$export$fe53371bee54353d(path);\n            navigate(to, {\n                replace: replace2,\n                state: state,\n                preventScrollReset: preventScrollReset,\n                relative: relative,\n                viewTransition: viewTransition\n            });\n        }\n    }, [\n        location,\n        navigate,\n        path,\n        replaceProp,\n        state,\n        target,\n        to,\n        preventScrollReset,\n        relative,\n        viewTransition\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$f1a78c17382fe22a(defaultInit) {\n    $c5b33ec0dccca72b$var$warning(typeof URLSearchParams !== \"undefined\", `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`);\n    let defaultSearchParamsRef = $a972dfa956833003$exports.useRef($c5b33ec0dccca72b$export$a2e4e2dcc7b1f22f(defaultInit));\n    let hasSetSearchParamsRef = $a972dfa956833003$exports.useRef(false);\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let searchParams = $a972dfa956833003$exports.useMemo(()=>// Only merge in the defaults if we haven't yet called setSearchParams.\n        // Once we call that we want those to take precedence, otherwise you can't\n        // remove a param with setSearchParams({}) if it has an initial value\n        $c5b33ec0dccca72b$var$getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [\n        location.search\n    ]);\n    let navigate = $c5b33ec0dccca72b$export$9770f232ac06a008();\n    let setSearchParams = $a972dfa956833003$exports.useCallback((nextInit, navigateOptions)=>{\n        const newSearchParams = $c5b33ec0dccca72b$export$a2e4e2dcc7b1f22f(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n        hasSetSearchParamsRef.current = true;\n        navigate(\"?\" + newSearchParams, navigateOptions);\n    }, [\n        navigate,\n        searchParams\n    ]);\n    return [\n        searchParams,\n        setSearchParams\n    ];\n}\nvar $c5b33ec0dccca72b$var$fetcherId = 0;\nvar $c5b33ec0dccca72b$var$getUniqueFetcherId = ()=>`__${String(++$c5b33ec0dccca72b$var$fetcherId)}__`;\nfunction $c5b33ec0dccca72b$export$47c85c6e3a081d3() {\n    let { router: router } = $c5b33ec0dccca72b$var$useDataRouterContext3(\"useSubmit\" /* UseSubmit */ );\n    let { basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let currentRouteId = $c5b33ec0dccca72b$var$useRouteId();\n    return $a972dfa956833003$exports.useCallback(async (target, options = {})=>{\n        let { action: action, method: method, encType: encType, formData: formData, body: body } = $c5b33ec0dccca72b$var$getFormSubmissionInfo(target, basename);\n        if (options.navigate === false) {\n            let key = options.fetcherKey || $c5b33ec0dccca72b$var$getUniqueFetcherId();\n            await router.fetch(key, currentRouteId, options.action || action, {\n                preventScrollReset: options.preventScrollReset,\n                formData: formData,\n                body: body,\n                formMethod: options.method || method,\n                formEncType: options.encType || encType,\n                flushSync: options.flushSync\n            });\n        } else await router.navigate(options.action || action, {\n            preventScrollReset: options.preventScrollReset,\n            formData: formData,\n            body: body,\n            formMethod: options.method || method,\n            formEncType: options.encType || encType,\n            replace: options.replace,\n            state: options.state,\n            fromRouteId: currentRouteId,\n            flushSync: options.flushSync,\n            viewTransition: options.viewTransition\n        });\n    }, [\n        router,\n        basename,\n        currentRouteId\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$89a6bd6db0d97c56(action, { relative: relative } = {}) {\n    let { basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let routeContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(routeContext, \"useFormAction must be used inside a RouteContext\");\n    let [match] = routeContext.matches.slice(-1);\n    let path = {\n        ...$c5b33ec0dccca72b$export$e75d2a2d1b3c245b(action ? action : \".\", {\n            relative: relative\n        })\n    };\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    if (action == null) {\n        path.search = location.search;\n        let params = new URLSearchParams(path.search);\n        let indexValues = params.getAll(\"index\");\n        let hasNakedIndexParam = indexValues.some((v)=>v === \"\");\n        if (hasNakedIndexParam) {\n            params.delete(\"index\");\n            indexValues.filter((v)=>v).forEach((v)=>params.append(\"index\", v));\n            let qs = params.toString();\n            path.search = qs ? `?${qs}` : \"\";\n        }\n    }\n    if ((!action || action === \".\") && match.route.index) path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    if (basename !== \"/\") path.pathname = path.pathname === \"/\" ? basename : $c5b33ec0dccca72b$var$joinPaths([\n        basename,\n        path.pathname\n    ]);\n    return $c5b33ec0dccca72b$export$fe53371bee54353d(path);\n}\nfunction $c5b33ec0dccca72b$export$5b0d2d9a9921565a({ key: key } = {}) {\n    let { router: router } = $c5b33ec0dccca72b$var$useDataRouterContext3(\"useFetcher\" /* UseFetcher */ );\n    let state = $c5b33ec0dccca72b$var$useDataRouterState2(\"useFetcher\" /* UseFetcher */ );\n    let fetcherData = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$cb3f1df1bef00a39);\n    let route = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$aac280ed165a4397);\n    let routeId = route.matches[route.matches.length - 1]?.route.id;\n    $c5b33ec0dccca72b$export$f5708dca728d7177(fetcherData, `useFetcher must be used inside a FetchersContext`);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(route, `useFetcher must be used inside a RouteContext`);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(routeId != null, `useFetcher can only be used on routes that contain a unique \"id\"`);\n    let defaultKey = $a972dfa956833003$exports.useId();\n    let [fetcherKey, setFetcherKey] = $a972dfa956833003$exports.useState(key || defaultKey);\n    if (key && key !== fetcherKey) setFetcherKey(key);\n    $a972dfa956833003$exports.useEffect(()=>{\n        router.getFetcher(fetcherKey);\n        return ()=>router.deleteFetcher(fetcherKey);\n    }, [\n        router,\n        fetcherKey\n    ]);\n    let load = $a972dfa956833003$exports.useCallback(async (href2, opts)=>{\n        $c5b33ec0dccca72b$export$f5708dca728d7177(routeId, \"No routeId available for fetcher.load()\");\n        await router.fetch(fetcherKey, routeId, href2, opts);\n    }, [\n        fetcherKey,\n        routeId,\n        router\n    ]);\n    let submitImpl = $c5b33ec0dccca72b$export$47c85c6e3a081d3();\n    let submit = $a972dfa956833003$exports.useCallback(async (target, opts)=>{\n        await submitImpl(target, {\n            ...opts,\n            navigate: false,\n            fetcherKey: fetcherKey\n        });\n    }, [\n        fetcherKey,\n        submitImpl\n    ]);\n    let FetcherForm = $a972dfa956833003$exports.useMemo(()=>{\n        let FetcherForm2 = $a972dfa956833003$exports.forwardRef((props, ref)=>{\n            return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$a7fed597f4b8afd8, {\n                ...props,\n                navigate: false,\n                fetcherKey: fetcherKey,\n                ref: ref\n            });\n        });\n        FetcherForm2.displayName = \"fetcher.Form\";\n        return FetcherForm2;\n    }, [\n        fetcherKey\n    ]);\n    let fetcher = state.fetchers.get(fetcherKey) || $c5b33ec0dccca72b$export$52eace9c284d3585;\n    let data2 = fetcherData.get(fetcherKey);\n    let fetcherWithComponents = $a972dfa956833003$exports.useMemo(()=>({\n            Form: FetcherForm,\n            submit: submit,\n            load: load,\n            ...fetcher,\n            data: data2\n        }), [\n        FetcherForm,\n        submit,\n        load,\n        fetcher,\n        data2\n    ]);\n    return fetcherWithComponents;\n}\nfunction $c5b33ec0dccca72b$export$fa996778a3a31087() {\n    let state = $c5b33ec0dccca72b$var$useDataRouterState2(\"useFetchers\" /* UseFetchers */ );\n    return Array.from(state.fetchers.entries()).map(([key, fetcher])=>({\n            ...fetcher,\n            key: key\n        }));\n}\nvar $c5b33ec0dccca72b$var$SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar $c5b33ec0dccca72b$var$savedScrollPositions = {};\nfunction $c5b33ec0dccca72b$var$getScrollRestorationKey(location, matches, basename, getKey) {\n    let key = null;\n    if (getKey) {\n        if (basename !== \"/\") key = getKey({\n            ...location,\n            pathname: $c5b33ec0dccca72b$var$stripBasename(location.pathname, basename) || location.pathname\n        }, matches);\n        else key = getKey(location, matches);\n    }\n    if (key == null) key = location.key;\n    return key;\n}\nfunction $c5b33ec0dccca72b$export$c4ffdfe23dd48040({ getKey: getKey, storageKey: storageKey } = {}) {\n    let { router: router } = $c5b33ec0dccca72b$var$useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */ );\n    let { restoreScrollPosition: restoreScrollPosition, preventScrollReset: preventScrollReset } = $c5b33ec0dccca72b$var$useDataRouterState2(\"useScrollRestoration\" /* UseScrollRestoration */ );\n    let { basename: basename } = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3044ab7fdabeaee6);\n    let location = $c5b33ec0dccca72b$export$45d76561a5302f2b();\n    let matches = $c5b33ec0dccca72b$export$2378eb7f5ff86053();\n    let navigation = $c5b33ec0dccca72b$export$d0fd4b7106de2769();\n    $a972dfa956833003$exports.useEffect(()=>{\n        window.history.scrollRestoration = \"manual\";\n        return ()=>{\n            window.history.scrollRestoration = \"auto\";\n        };\n    }, []);\n    $c5b33ec0dccca72b$var$usePageHide($a972dfa956833003$exports.useCallback(()=>{\n        if (navigation.state === \"idle\") {\n            let key = $c5b33ec0dccca72b$var$getScrollRestorationKey(location, matches, basename, getKey);\n            $c5b33ec0dccca72b$var$savedScrollPositions[key] = window.scrollY;\n        }\n        try {\n            sessionStorage.setItem(storageKey || $c5b33ec0dccca72b$var$SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify($c5b33ec0dccca72b$var$savedScrollPositions));\n        } catch (error) {\n            $c5b33ec0dccca72b$var$warning(false, `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`);\n        }\n        window.history.scrollRestoration = \"auto\";\n    }, [\n        navigation.state,\n        getKey,\n        basename,\n        location,\n        matches,\n        storageKey\n    ]));\n    if (typeof document !== \"undefined\") {\n        $a972dfa956833003$exports.useLayoutEffect(()=>{\n            try {\n                let sessionPositions = sessionStorage.getItem(storageKey || $c5b33ec0dccca72b$var$SCROLL_RESTORATION_STORAGE_KEY);\n                if (sessionPositions) $c5b33ec0dccca72b$var$savedScrollPositions = JSON.parse(sessionPositions);\n            } catch (e) {}\n        }, [\n            storageKey\n        ]);\n        $a972dfa956833003$exports.useLayoutEffect(()=>{\n            let disableScrollRestoration = router?.enableScrollRestoration($c5b33ec0dccca72b$var$savedScrollPositions, ()=>window.scrollY, getKey ? (location2, matches2)=>$c5b33ec0dccca72b$var$getScrollRestorationKey(location2, matches2, basename, getKey) : void 0);\n            return ()=>disableScrollRestoration && disableScrollRestoration();\n        }, [\n            router,\n            basename,\n            getKey\n        ]);\n        $a972dfa956833003$exports.useLayoutEffect(()=>{\n            if (restoreScrollPosition === false) return;\n            if (typeof restoreScrollPosition === \"number\") {\n                window.scrollTo(0, restoreScrollPosition);\n                return;\n            }\n            if (location.hash) {\n                let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n                if (el) {\n                    el.scrollIntoView();\n                    return;\n                }\n            }\n            if (preventScrollReset === true) return;\n            window.scrollTo(0, 0);\n        }, [\n            location,\n            restoreScrollPosition,\n            preventScrollReset\n        ]);\n    }\n}\nfunction $c5b33ec0dccca72b$export$c0a586b329cae57d(callback, options) {\n    let { capture: capture } = options || {};\n    $a972dfa956833003$exports.useEffect(()=>{\n        let opts = capture != null ? {\n            capture: capture\n        } : void 0;\n        window.addEventListener(\"beforeunload\", callback, opts);\n        return ()=>{\n            window.removeEventListener(\"beforeunload\", callback, opts);\n        };\n    }, [\n        callback,\n        capture\n    ]);\n}\nfunction $c5b33ec0dccca72b$var$usePageHide(callback, options) {\n    let { capture: capture } = options || {};\n    $a972dfa956833003$exports.useEffect(()=>{\n        let opts = capture != null ? {\n            capture: capture\n        } : void 0;\n        window.addEventListener(\"pagehide\", callback, opts);\n        return ()=>{\n            window.removeEventListener(\"pagehide\", callback, opts);\n        };\n    }, [\n        callback,\n        capture\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$fc7731b33eb53a93({ when: when, message: message }) {\n    let blocker = $c5b33ec0dccca72b$export$b273b3273281a049(when);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (blocker.state === \"blocked\") {\n            let proceed = window.confirm(message);\n            if (proceed) setTimeout(blocker.proceed, 0);\n            else blocker.reset();\n        }\n    }, [\n        blocker,\n        message\n    ]);\n    $a972dfa956833003$exports.useEffect(()=>{\n        if (blocker.state === \"blocked\" && !when) blocker.reset();\n    }, [\n        blocker,\n        when\n    ]);\n}\nfunction $c5b33ec0dccca72b$export$e262bd1977bea848(to, opts = {}) {\n    let vtContext = $a972dfa956833003$exports.useContext($c5b33ec0dccca72b$export$3681f408decb40d1);\n    $c5b33ec0dccca72b$export$f5708dca728d7177(vtContext != null, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\");\n    let { basename: basename } = $c5b33ec0dccca72b$var$useDataRouterContext3(\"useViewTransitionState\" /* useViewTransitionState */ );\n    let path = $c5b33ec0dccca72b$export$e75d2a2d1b3c245b(to, {\n        relative: opts.relative\n    });\n    if (!vtContext.isTransitioning) return false;\n    let currentPath = $c5b33ec0dccca72b$var$stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n    let nextPath = $c5b33ec0dccca72b$var$stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n    return $c5b33ec0dccca72b$export$81336c211d5ff295(path.pathname, nextPath) != null || $c5b33ec0dccca72b$export$81336c211d5ff295(path.pathname, currentPath) != null;\n}\nfunction $c5b33ec0dccca72b$export$cac06da4d76d935b({ basename: basename, children: children, location: locationProp = \"/\" }) {\n    if (typeof locationProp === \"string\") locationProp = $c5b33ec0dccca72b$export$8ccf933b0513f8d0(locationProp);\n    let action = \"POP\" /* Pop */ ;\n    let location = {\n        pathname: locationProp.pathname || \"/\",\n        search: locationProp.search || \"\",\n        hash: locationProp.hash || \"\",\n        state: locationProp.state != null ? locationProp.state : null,\n        key: locationProp.key || \"default\"\n    };\n    let staticNavigator = $c5b33ec0dccca72b$var$getStatelessNavigator();\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: basename,\n        children: children,\n        location: location,\n        navigationType: action,\n        navigator: staticNavigator,\n        static: true\n    });\n}\nfunction $c5b33ec0dccca72b$export$3d80f15952491985({ context: context, router: router, hydrate: hydrate = true, nonce: nonce }) {\n    $c5b33ec0dccca72b$export$f5708dca728d7177(router && context, \"You must provide `router` and `context` to <StaticRouterProvider>\");\n    let dataRouterContext = {\n        router: router,\n        navigator: $c5b33ec0dccca72b$var$getStatelessNavigator(),\n        static: true,\n        staticContext: context,\n        basename: context.basename || \"/\"\n    };\n    let fetchersContext = /* @__PURE__ */ new Map();\n    let hydrateScript = \"\";\n    if (hydrate !== false) {\n        let data2 = {\n            loaderData: context.loaderData,\n            actionData: context.actionData,\n            errors: $c5b33ec0dccca72b$var$serializeErrors(context.errors)\n        };\n        let json = $c5b33ec0dccca72b$var$htmlEscape(JSON.stringify(JSON.stringify(data2)));\n        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n    }\n    let { state: state } = dataRouterContext.router;\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$2eeee58951ff3c1c.Provider, {\n        value: dataRouterContext\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$315e3ffb01f217.Provider, {\n        value: state\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$cb3f1df1bef00a39.Provider, {\n        value: fetchersContext\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$3681f408decb40d1.Provider, {\n        value: {\n            isTransitioning: false\n        }\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$55185c17a0fcbe46, {\n        basename: dataRouterContext.basename,\n        location: state.location,\n        navigationType: state.historyAction,\n        navigator: dataRouterContext.navigator,\n        static: dataRouterContext.static\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$DataRoutes2, {\n        routes: router.routes,\n        future: router.future,\n        state: state\n    })))))), hydrateScript ? /* @__PURE__ */ $a972dfa956833003$exports.createElement(\"script\", {\n        suppressHydrationWarning: true,\n        nonce: nonce,\n        dangerouslySetInnerHTML: {\n            __html: hydrateScript\n        }\n    }) : null);\n}\nfunction $c5b33ec0dccca72b$var$DataRoutes2({ routes: routes, future: future, state: state }) {\n    return $c5b33ec0dccca72b$var$useRoutesImpl(routes, void 0, state, future);\n}\nfunction $c5b33ec0dccca72b$var$serializeErrors(errors) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries){\n        if ($c5b33ec0dccca72b$export$972111febbeef05b(val)) serialized[key] = {\n            ...val,\n            __type: \"RouteErrorResponse\"\n        };\n        else if (val instanceof Error) serialized[key] = {\n            message: val.message,\n            __type: \"Error\",\n            // If this is a subclass (i.e., ReferenceError), send up the type so we\n            // can re-create the same type during hydration.\n            ...val.name !== \"Error\" ? {\n                __subType: val.name\n            } : {}\n        };\n        else serialized[key] = val;\n    }\n    return serialized;\n}\nfunction $c5b33ec0dccca72b$var$getStatelessNavigator() {\n    return {\n        createHref: $c5b33ec0dccca72b$var$createHref,\n        encodeLocation: $c5b33ec0dccca72b$var$encodeLocation,\n        push (to) {\n            throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n        },\n        replace (to) {\n            throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`);\n        },\n        go (delta) {\n            throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`);\n        },\n        back () {\n            throw new Error(`You cannot use navigator.back() on the server because it is a stateless environment.`);\n        },\n        forward () {\n            throw new Error(`You cannot use navigator.forward() on the server because it is a stateless environment.`);\n        }\n    };\n}\nfunction $c5b33ec0dccca72b$export$3336b097a6fbc59a(routes, opts) {\n    return $c5b33ec0dccca72b$var$createStaticHandler(routes, {\n        ...opts,\n        mapRouteProperties: $c5b33ec0dccca72b$export$9269a41d8c4635e\n    });\n}\nfunction $c5b33ec0dccca72b$export$3dd6171c30258b6f(routes, context, opts = {}) {\n    let manifest = {};\n    let dataRoutes = $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(routes, $c5b33ec0dccca72b$export$9269a41d8c4635e, void 0, manifest);\n    let matches = context.matches.map((match)=>{\n        let route = manifest[match.route.id] || match.route;\n        return {\n            ...match,\n            route: route\n        };\n    });\n    let msg = (method)=>`You cannot use router.${method}() on the server because it is a stateless environment`;\n    return {\n        get basename () {\n            return context.basename;\n        },\n        get future () {\n            return {\n                ...opts?.future\n            };\n        },\n        get state () {\n            return {\n                historyAction: \"POP\" /* Pop */ ,\n                location: context.location,\n                matches: matches,\n                loaderData: context.loaderData,\n                actionData: context.actionData,\n                errors: context.errors,\n                initialized: true,\n                navigation: $c5b33ec0dccca72b$export$ed3e14b2f9e105d0,\n                restoreScrollPosition: null,\n                preventScrollReset: false,\n                revalidation: \"idle\",\n                fetchers: /* @__PURE__ */ new Map(),\n                blockers: /* @__PURE__ */ new Map()\n            };\n        },\n        get routes () {\n            return dataRoutes;\n        },\n        get window () {\n            return void 0;\n        },\n        initialize () {\n            throw msg(\"initialize\");\n        },\n        subscribe () {\n            throw msg(\"subscribe\");\n        },\n        enableScrollRestoration () {\n            throw msg(\"enableScrollRestoration\");\n        },\n        navigate () {\n            throw msg(\"navigate\");\n        },\n        fetch () {\n            throw msg(\"fetch\");\n        },\n        revalidate () {\n            throw msg(\"revalidate\");\n        },\n        createHref: $c5b33ec0dccca72b$var$createHref,\n        encodeLocation: $c5b33ec0dccca72b$var$encodeLocation,\n        getFetcher () {\n            return $c5b33ec0dccca72b$export$52eace9c284d3585;\n        },\n        deleteFetcher () {\n            throw msg(\"deleteFetcher\");\n        },\n        dispose () {\n            throw msg(\"dispose\");\n        },\n        getBlocker () {\n            return $c5b33ec0dccca72b$export$386d57f03f0b2883;\n        },\n        deleteBlocker () {\n            throw msg(\"deleteBlocker\");\n        },\n        patchRoutes () {\n            throw msg(\"patchRoutes\");\n        },\n        _internalFetchControllers: /* @__PURE__ */ new Map(),\n        _internalSetRoutes () {\n            throw msg(\"_internalSetRoutes\");\n        }\n    };\n}\nfunction $c5b33ec0dccca72b$var$createHref(to) {\n    return typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to);\n}\nfunction $c5b33ec0dccca72b$var$encodeLocation(to) {\n    let href2 = typeof to === \"string\" ? to : $c5b33ec0dccca72b$export$fe53371bee54353d(to);\n    href2 = href2.replace(/ $/, \"%20\");\n    let encoded = $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\n    return {\n        pathname: encoded.pathname,\n        search: encoded.search,\n        hash: encoded.hash\n    };\n}\nvar $c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar $c5b33ec0dccca72b$var$ESCAPE_LOOKUP2 = {\n    \"&\": \"\\\\u0026\",\n    \">\": \"\\\\u003e\",\n    \"<\": \"\\\\u003c\",\n    \"\\u2028\": \"\\\\u2028\",\n    \"\\u2029\": \"\\\\u2029\"\n};\nvar $c5b33ec0dccca72b$var$ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction $c5b33ec0dccca72b$var$htmlEscape(str) {\n    return str.replace($c5b33ec0dccca72b$var$ESCAPE_REGEX2, (match)=>$c5b33ec0dccca72b$var$ESCAPE_LOOKUP2[match]);\n}\nfunction $c5b33ec0dccca72b$export$7246f7e18cebe1bd({ context: context, url: url, nonce: nonce }) {\n    if (typeof url === \"string\") url = new URL(url);\n    let { manifest: manifest, routeModules: routeModules, criticalCss: criticalCss, serverHandoffString: serverHandoffString } = context;\n    let routes = $c5b33ec0dccca72b$var$createServerRoutes(manifest.routes, routeModules, context.future, context.isSpaMode);\n    context.staticHandlerContext.loaderData = {\n        ...context.staticHandlerContext.loaderData\n    };\n    for (let match of context.staticHandlerContext.matches){\n        let routeId = match.route.id;\n        let route = routeModules[routeId];\n        let manifestRoute = context.manifest.routes[routeId];\n        if (route && manifestRoute && $c5b33ec0dccca72b$export$6ac68922d4e92125(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) delete context.staticHandlerContext.loaderData[routeId];\n    }\n    let router = $c5b33ec0dccca72b$export$3dd6171c30258b6f(routes, context.staticHandlerContext);\n    return /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Fragment, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$208d6a3bc3aa62bd.Provider, {\n        value: {\n            manifest: manifest,\n            routeModules: routeModules,\n            criticalCss: criticalCss,\n            serverHandoffString: serverHandoffString,\n            future: context.future,\n            ssr: context.ssr,\n            isSpaMode: context.isSpaMode,\n            serializeError: context.serializeError,\n            renderMeta: context.renderMeta\n        }\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$32e57f52df4b6e34, {\n        location: router.state.location\n    }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$3d80f15952491985, {\n        router: router,\n        context: context.staticHandlerContext,\n        hydrate: false\n    }))), context.serverHandoffStream ? /* @__PURE__ */ $a972dfa956833003$exports.createElement($a972dfa956833003$exports.Suspense, null, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$var$StreamTransfer, {\n        context: context,\n        identifier: 0,\n        reader: context.serverHandoffStream.getReader(),\n        textDecoder: new TextDecoder(),\n        nonce: nonce\n    })) : null);\n}\nfunction $c5b33ec0dccca72b$export$bea31554c7dfd2ad(routes, context = {}) {\n    return function RoutesTestStub({ initialEntries: initialEntries, initialIndex: initialIndex, hydrationData: hydrationData, future: future }) {\n        let routerRef = $a972dfa956833003$exports.useRef();\n        let remixContextRef = $a972dfa956833003$exports.useRef();\n        if (routerRef.current == null) {\n            remixContextRef.current = {\n                future: {},\n                manifest: {\n                    routes: {},\n                    entry: {\n                        imports: [],\n                        module: \"\"\n                    },\n                    url: \"\",\n                    version: \"\"\n                },\n                routeModules: {},\n                ssr: false,\n                isSpaMode: false\n            };\n            let patched = $c5b33ec0dccca72b$var$processRoutes(// @ts-expect-error loader/action context types don't match :/\n            $c5b33ec0dccca72b$var$convertRoutesToDataRoutes(routes, (r)=>r), context, remixContextRef.current.manifest, remixContextRef.current.routeModules);\n            routerRef.current = $c5b33ec0dccca72b$export$f30f7e456d254e83(patched, {\n                initialEntries: initialEntries,\n                initialIndex: initialIndex,\n                hydrationData: hydrationData\n            });\n        }\n        return /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$208d6a3bc3aa62bd.Provider, {\n            value: remixContextRef.current\n        }, /* @__PURE__ */ $a972dfa956833003$exports.createElement($c5b33ec0dccca72b$export$323e4fc2fa4753fb, {\n            router: routerRef.current\n        }));\n    };\n}\nfunction $c5b33ec0dccca72b$var$processRoutes(routes, context, manifest, routeModules, parentId) {\n    return routes.map((route)=>{\n        if (!route.id) throw new Error(\"Expected a route.id in @remix-run/testing processRoutes() function\");\n        let { loader: loader, action: action } = route;\n        let newRoute = {\n            id: route.id,\n            path: route.path,\n            index: route.index,\n            Component: route.Component,\n            HydrateFallback: route.HydrateFallback,\n            ErrorBoundary: route.ErrorBoundary,\n            action: action ? (args)=>action({\n                    ...args,\n                    context: context\n                }) : void 0,\n            loader: loader ? (args)=>loader({\n                    ...args,\n                    context: context\n                }) : void 0,\n            handle: route.handle,\n            shouldRevalidate: route.shouldRevalidate\n        };\n        let entryRoute = {\n            id: route.id,\n            path: route.path,\n            index: route.index,\n            parentId: parentId,\n            hasAction: route.action != null,\n            hasLoader: route.loader != null,\n            // When testing routes, you should just be stubbing loader/action, not\n            // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\n            // That is better tested via E2E tests.\n            hasClientAction: false,\n            hasClientLoader: false,\n            hasErrorBoundary: route.ErrorBoundary != null,\n            // any need for these?\n            module: \"build/stub-path-to-module.js\",\n            clientActionModule: void 0,\n            clientLoaderModule: void 0,\n            hydrateFallbackModule: void 0\n        };\n        manifest.routes[newRoute.id] = entryRoute;\n        routeModules[route.id] = {\n            default: route.Component || $c5b33ec0dccca72b$export$910ae8079b2c2852,\n            ErrorBoundary: route.ErrorBoundary || void 0,\n            handle: route.handle,\n            links: route.links,\n            meta: route.meta,\n            shouldRevalidate: route.shouldRevalidate\n        };\n        if (route.children) newRoute.children = $c5b33ec0dccca72b$var$processRoutes(route.children, context, manifest, routeModules, newRoute.id);\n        return newRoute;\n    });\n}\n// lib/server-runtime/crypto.ts\nvar $c5b33ec0dccca72b$var$encoder = new TextEncoder();\nvar $c5b33ec0dccca72b$var$sign = async (value, secret)=>{\n    let data2 = $c5b33ec0dccca72b$var$encoder.encode(value);\n    let key = await $c5b33ec0dccca72b$var$createKey2(secret, [\n        \"sign\"\n    ]);\n    let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\n    let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, \"\");\n    return value + \".\" + hash;\n};\nvar $c5b33ec0dccca72b$var$unsign = async (cookie, secret)=>{\n    let index = cookie.lastIndexOf(\".\");\n    let value = cookie.slice(0, index);\n    let hash = cookie.slice(index + 1);\n    let data2 = $c5b33ec0dccca72b$var$encoder.encode(value);\n    let key = await $c5b33ec0dccca72b$var$createKey2(secret, [\n        \"verify\"\n    ]);\n    let signature = $c5b33ec0dccca72b$var$byteStringToUint8Array(atob(hash));\n    let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\n    return valid ? value : false;\n};\nvar $c5b33ec0dccca72b$var$createKey2 = async (secret, usages)=>crypto.subtle.importKey(\"raw\", $c5b33ec0dccca72b$var$encoder.encode(secret), {\n        name: \"HMAC\",\n        hash: \"SHA-256\"\n    }, false, usages);\nfunction $c5b33ec0dccca72b$var$byteStringToUint8Array(byteString) {\n    let array = new Uint8Array(byteString.length);\n    for(let i = 0; i < byteString.length; i++)array[i] = byteString.charCodeAt(i);\n    return array;\n}\n// lib/server-runtime/cookies.ts\nvar $c5b33ec0dccca72b$export$7892c26d6c7a7447 = (name, cookieOptions = {})=>{\n    let { secrets: secrets = [], ...options } = {\n        path: \"/\",\n        sameSite: \"lax\",\n        ...cookieOptions\n    };\n    $c5b33ec0dccca72b$var$warnOnceAboutExpiresCookie(name, options.expires);\n    return {\n        get name () {\n            return name;\n        },\n        get isSigned () {\n            return secrets.length > 0;\n        },\n        get expires () {\n            return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n        },\n        async parse (cookieHeader, parseOptions) {\n            if (!cookieHeader) return null;\n            let cookies = (0, $70f23939d76c0480$exports.parse)(cookieHeader, {\n                ...options,\n                ...parseOptions\n            });\n            if (name in cookies) {\n                let value = cookies[name];\n                if (typeof value === \"string\" && value !== \"\") {\n                    let decoded = await $c5b33ec0dccca72b$var$decodeCookieValue(value, secrets);\n                    return decoded;\n                } else return \"\";\n            } else return null;\n        },\n        async serialize (value, serializeOptions) {\n            return (0, $70f23939d76c0480$exports.serialize)(name, value === \"\" ? \"\" : await $c5b33ec0dccca72b$var$encodeCookieValue(value, secrets), {\n                ...options,\n                ...serializeOptions\n            });\n        }\n    };\n};\nvar $c5b33ec0dccca72b$export$f00768c7d8d5ffdb = (object)=>{\n    return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function $c5b33ec0dccca72b$var$encodeCookieValue(value, secrets) {\n    let encoded = $c5b33ec0dccca72b$var$encodeData(value);\n    if (secrets.length > 0) encoded = await $c5b33ec0dccca72b$var$sign(encoded, secrets[0]);\n    return encoded;\n}\nasync function $c5b33ec0dccca72b$var$decodeCookieValue(value, secrets) {\n    if (secrets.length > 0) {\n        for (let secret of secrets){\n            let unsignedValue = await $c5b33ec0dccca72b$var$unsign(value, secret);\n            if (unsignedValue !== false) return $c5b33ec0dccca72b$var$decodeData(unsignedValue);\n        }\n        return null;\n    }\n    return $c5b33ec0dccca72b$var$decodeData(value);\n}\nfunction $c5b33ec0dccca72b$var$encodeData(value) {\n    return btoa($c5b33ec0dccca72b$var$myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction $c5b33ec0dccca72b$var$decodeData(value) {\n    try {\n        return JSON.parse(decodeURIComponent($c5b33ec0dccca72b$var$myEscape(atob(value))));\n    } catch (error) {\n        return {};\n    }\n}\nfunction $c5b33ec0dccca72b$var$myEscape(value) {\n    let str = value.toString();\n    let result = \"\";\n    let index = 0;\n    let chr, code;\n    while(index < str.length){\n        chr = str.charAt(index++);\n        if (/[\\w*+\\-./@]/.exec(chr)) result += chr;\n        else {\n            code = chr.charCodeAt(0);\n            if (code < 256) result += \"%\" + $c5b33ec0dccca72b$var$hex(code, 2);\n            else result += \"%u\" + $c5b33ec0dccca72b$var$hex(code, 4).toUpperCase();\n        }\n    }\n    return result;\n}\nfunction $c5b33ec0dccca72b$var$hex(code, length) {\n    let result = code.toString(16);\n    while(result.length < length)result = \"0\" + result;\n    return result;\n}\nfunction $c5b33ec0dccca72b$var$myUnescape(value) {\n    let str = value.toString();\n    let result = \"\";\n    let index = 0;\n    let chr, part;\n    while(index < str.length){\n        chr = str.charAt(index++);\n        if (chr === \"%\") {\n            if (str.charAt(index) === \"u\") {\n                part = str.slice(index + 1, index + 5);\n                if (/^[\\da-f]{4}$/i.exec(part)) {\n                    result += String.fromCharCode(parseInt(part, 16));\n                    index += 5;\n                    continue;\n                }\n            } else {\n                part = str.slice(index, index + 2);\n                if (/^[\\da-f]{2}$/i.exec(part)) {\n                    result += String.fromCharCode(parseInt(part, 16));\n                    index += 2;\n                    continue;\n                }\n            }\n        }\n        result += chr;\n    }\n    return result;\n}\nfunction $c5b33ec0dccca72b$var$warnOnceAboutExpiresCookie(name, expires) {\n    $c5b33ec0dccca72b$var$warnOnce(!expires, `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`);\n}\n// lib/server-runtime/entry.ts\nfunction $c5b33ec0dccca72b$var$createEntryRouteModules(manifest) {\n    return Object.keys(manifest).reduce((memo2, routeId)=>{\n        let route = manifest[routeId];\n        if (route) memo2[routeId] = route.module;\n        return memo2;\n    }, {});\n}\n// lib/server-runtime/mode.ts\nvar $c5b33ec0dccca72b$export$e7973f87fd96e4f2 = /* @__PURE__ */ ((ServerMode2)=>{\n    ServerMode2[\"Development\"] = \"development\";\n    ServerMode2[\"Production\"] = \"production\";\n    ServerMode2[\"Test\"] = \"test\";\n    return ServerMode2;\n})($c5b33ec0dccca72b$export$e7973f87fd96e4f2 || {});\nfunction $c5b33ec0dccca72b$var$isServerMode(value) {\n    return value === \"development\" /* Development */  || value === \"production\" /* Production */  || value === \"test\" /* Test */ ;\n}\n// lib/server-runtime/errors.ts\nfunction $c5b33ec0dccca72b$var$sanitizeError(error, serverMode) {\n    if (error instanceof Error && serverMode !== \"development\" /* Development */ ) {\n        let sanitized = new Error(\"Unexpected Server Error\");\n        sanitized.stack = void 0;\n        return sanitized;\n    }\n    return error;\n}\nfunction $c5b33ec0dccca72b$var$sanitizeErrors(errors, serverMode) {\n    return Object.entries(errors).reduce((acc, [routeId, error])=>{\n        return Object.assign(acc, {\n            [routeId]: $c5b33ec0dccca72b$var$sanitizeError(error, serverMode)\n        });\n    }, {});\n}\nfunction $c5b33ec0dccca72b$var$serializeError(error, serverMode) {\n    let sanitized = $c5b33ec0dccca72b$var$sanitizeError(error, serverMode);\n    return {\n        message: sanitized.message,\n        stack: sanitized.stack\n    };\n}\nfunction $c5b33ec0dccca72b$var$serializeErrors2(errors, serverMode) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries){\n        if ($c5b33ec0dccca72b$export$972111febbeef05b(val)) serialized[key] = {\n            ...val,\n            __type: \"RouteErrorResponse\"\n        };\n        else if (val instanceof Error) {\n            let sanitized = $c5b33ec0dccca72b$var$sanitizeError(val, serverMode);\n            serialized[key] = {\n                message: sanitized.message,\n                stack: sanitized.stack,\n                __type: \"Error\",\n                // If this is a subclass (i.e., ReferenceError), send up the type so we\n                // can re-create the same type during hydration.  This will only apply\n                // in dev mode since all production errors are sanitized to normal\n                // Error instances\n                ...sanitized.name !== \"Error\" ? {\n                    __subType: sanitized.name\n                } : {}\n            };\n        } else serialized[key] = val;\n    }\n    return serialized;\n}\n// lib/server-runtime/routeMatching.ts\nfunction $c5b33ec0dccca72b$var$matchServerRoutes(routes, pathname, basename) {\n    let matches = $c5b33ec0dccca72b$export$2708184779ceb39d(routes, pathname, basename);\n    if (!matches) return null;\n    return matches.map((match)=>({\n            params: match.params,\n            pathname: match.pathname,\n            route: match.route\n        }));\n}\n// lib/server-runtime/data.ts\nasync function $c5b33ec0dccca72b$var$callRouteHandler(handler, args) {\n    let result = await handler({\n        request: $c5b33ec0dccca72b$var$stripRoutesParam($c5b33ec0dccca72b$var$stripIndexParam2(args.request)),\n        params: args.params,\n        context: args.context\n    });\n    if ($c5b33ec0dccca72b$var$isDataWithResponseInit(result) && result.init && result.init.status && $c5b33ec0dccca72b$var$isRedirectStatusCode(result.init.status)) throw new Response(null, result.init);\n    return result;\n}\nfunction $c5b33ec0dccca72b$var$stripIndexParam2(request) {\n    let url = new URL(request.url);\n    let indexValues = url.searchParams.getAll(\"index\");\n    url.searchParams.delete(\"index\");\n    let indexValuesToKeep = [];\n    for (let indexValue of indexValues)if (indexValue) indexValuesToKeep.push(indexValue);\n    for (let toKeep of indexValuesToKeep)url.searchParams.append(\"index\", toKeep);\n    let init = {\n        method: request.method,\n        body: request.body,\n        headers: request.headers,\n        signal: request.signal\n    };\n    if (init.body) init.duplex = \"half\";\n    return new Request(url.href, init);\n}\nfunction $c5b33ec0dccca72b$var$stripRoutesParam(request) {\n    let url = new URL(request.url);\n    url.searchParams.delete(\"_routes\");\n    let init = {\n        method: request.method,\n        body: request.body,\n        headers: request.headers,\n        signal: request.signal\n    };\n    if (init.body) init.duplex = \"half\";\n    return new Request(url.href, init);\n}\n// lib/server-runtime/invariant.ts\nfunction $c5b33ec0dccca72b$var$invariant3(value, message) {\n    if (value === false || value === null || typeof value === \"undefined\") {\n        console.error(\"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\");\n        throw new Error(message);\n    }\n}\n// lib/server-runtime/routes.ts\nfunction $c5b33ec0dccca72b$var$groupRoutesByParentId2(manifest) {\n    let routes = {};\n    Object.values(manifest).forEach((route)=>{\n        if (route) {\n            let parentId = route.parentId || \"\";\n            if (!routes[parentId]) routes[parentId] = [];\n            routes[parentId].push(route);\n        }\n    });\n    return routes;\n}\nfunction $c5b33ec0dccca72b$var$createRoutes(manifest, parentId = \"\", routesByParentId = $c5b33ec0dccca72b$var$groupRoutesByParentId2(manifest)) {\n    return (routesByParentId[parentId] || []).map((route)=>({\n            ...route,\n            children: $c5b33ec0dccca72b$var$createRoutes(manifest, route.id, routesByParentId)\n        }));\n}\nfunction $c5b33ec0dccca72b$var$createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = $c5b33ec0dccca72b$var$groupRoutesByParentId2(manifest)) {\n    return (routesByParentId[parentId] || []).map((route)=>{\n        let commonRoute = {\n            // Always include root due to default boundaries\n            hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n            id: route.id,\n            path: route.path,\n            // Need to use RR's version in the param typed here to permit the optional\n            // context even though we know it'll always be provided in remix\n            loader: route.module.loader ? async (args)=>{\n                if (args.request.headers.has(\"X-React-Router-Prerender-Data\")) {\n                    const preRenderedData = args.request.headers.get(\"X-React-Router-Prerender-Data\");\n                    let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\n                    $c5b33ec0dccca72b$var$invariant3(encoded, \"Missing prerendered data for route\");\n                    let uint8array = new TextEncoder().encode(encoded);\n                    let stream = new ReadableStream({\n                        start (controller) {\n                            controller.enqueue(uint8array);\n                            controller.close();\n                        }\n                    });\n                    let decoded = await $c5b33ec0dccca72b$export$4023ad4ecd4126a2(stream, $parcel$global);\n                    let data2 = decoded.value;\n                    $c5b33ec0dccca72b$var$invariant3(data2 && route.id in data2, \"Unable to decode prerendered data\");\n                    let result = data2[route.id];\n                    $c5b33ec0dccca72b$var$invariant3(\"data\" in result, \"Unable to process prerendered data\");\n                    return result.data;\n                }\n                let val = await $c5b33ec0dccca72b$var$callRouteHandler(route.module.loader, args);\n                return val;\n            } : void 0,\n            action: route.module.action ? (args)=>$c5b33ec0dccca72b$var$callRouteHandler(route.module.action, args) : void 0,\n            handle: route.module.handle\n        };\n        return route.index ? {\n            index: true,\n            ...commonRoute\n        } : {\n            caseSensitive: route.caseSensitive,\n            children: $c5b33ec0dccca72b$var$createStaticHandlerDataRoutes(manifest, future, route.id, routesByParentId),\n            ...commonRoute\n        };\n    });\n}\n// lib/server-runtime/markup.ts\nvar $c5b33ec0dccca72b$var$ESCAPE_LOOKUP3 = {\n    \"&\": \"\\\\u0026\",\n    \">\": \"\\\\u003e\",\n    \"<\": \"\\\\u003c\",\n    \"\\u2028\": \"\\\\u2028\",\n    \"\\u2029\": \"\\\\u2029\"\n};\nvar $c5b33ec0dccca72b$var$ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\nfunction $c5b33ec0dccca72b$var$escapeHtml2(html) {\n    return html.replace($c5b33ec0dccca72b$var$ESCAPE_REGEX3, (match)=>$c5b33ec0dccca72b$var$ESCAPE_LOOKUP3[match]);\n}\n// lib/server-runtime/serverHandoff.ts\nfunction $c5b33ec0dccca72b$var$createServerHandoffString(serverHandoff) {\n    return $c5b33ec0dccca72b$var$escapeHtml2(JSON.stringify(serverHandoff));\n}\n// lib/server-runtime/dev.ts\nvar $c5b33ec0dccca72b$var$globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\nfunction $c5b33ec0dccca72b$export$31bc6e795ff1cb0a(devServerHooks) {\n    globalThis[$c5b33ec0dccca72b$var$globalDevServerHooksKey] = devServerHooks;\n}\nfunction $c5b33ec0dccca72b$var$getDevServerHooks() {\n    return globalThis[$c5b33ec0dccca72b$var$globalDevServerHooksKey];\n}\nfunction $c5b33ec0dccca72b$var$getDocumentHeaders(build, context) {\n    let boundaryIdx = context.errors ? context.matches.findIndex((m)=>context.errors[m.route.id]) : -1;\n    let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n    let errorHeaders;\n    if (boundaryIdx >= 0) {\n        let { actionHeaders: actionHeaders, actionData: actionData, loaderHeaders: loaderHeaders, loaderData: loaderData } = context;\n        context.matches.slice(boundaryIdx).some((match)=>{\n            let id = match.route.id;\n            if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) errorHeaders = actionHeaders[id];\n            else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) errorHeaders = loaderHeaders[id];\n            return errorHeaders != null;\n        });\n    }\n    return matches.reduce((parentHeaders, match, idx)=>{\n        let { id: id } = match.route;\n        let route = build.routes[id];\n        $c5b33ec0dccca72b$var$invariant3(route, `Route with id \"${id}\" not found in build`);\n        let routeModule = route.module;\n        let loaderHeaders = context.loaderHeaders[id] || new Headers();\n        let actionHeaders = context.actionHeaders[id] || new Headers();\n        let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\n        let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n        if (routeModule.headers == null) {\n            let headers2 = new Headers(parentHeaders);\n            if (includeErrorCookies) $c5b33ec0dccca72b$var$prependCookies(errorHeaders, headers2);\n            $c5b33ec0dccca72b$var$prependCookies(actionHeaders, headers2);\n            $c5b33ec0dccca72b$var$prependCookies(loaderHeaders, headers2);\n            return headers2;\n        }\n        let headers = new Headers(routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\n            loaderHeaders: loaderHeaders,\n            parentHeaders: parentHeaders,\n            actionHeaders: actionHeaders,\n            errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n        }) : routeModule.headers : void 0);\n        if (includeErrorCookies) $c5b33ec0dccca72b$var$prependCookies(errorHeaders, headers);\n        $c5b33ec0dccca72b$var$prependCookies(actionHeaders, headers);\n        $c5b33ec0dccca72b$var$prependCookies(loaderHeaders, headers);\n        $c5b33ec0dccca72b$var$prependCookies(parentHeaders, headers);\n        return headers;\n    }, new Headers());\n}\nfunction $c5b33ec0dccca72b$var$prependCookies(parentHeaders, childHeaders) {\n    let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n    if (parentSetCookieString) {\n        let cookies = (0, $5638fb5bd871bb7d$exports.splitCookiesString)(parentSetCookieString);\n        let childCookies = new Set(childHeaders.getSetCookie());\n        cookies.forEach((cookie)=>{\n            if (!childCookies.has(cookie)) childHeaders.append(\"Set-Cookie\", cookie);\n        });\n    }\n}\n// lib/server-runtime/single-fetch.ts\nvar $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS = 202;\nfunction $c5b33ec0dccca72b$var$getSingleFetchDataStrategy2({ isActionDataRequest: isActionDataRequest, loadRouteIds: loadRouteIds } = {}) {\n    return async ({ request: request, matches: matches })=>{\n        if (isActionDataRequest && request.method === \"GET\") return {};\n        let matchesToLoad = loadRouteIds ? matches.filter((m)=>loadRouteIds.includes(m.route.id)) : matches;\n        let results = await Promise.all(matchesToLoad.map((match)=>match.resolve()));\n        return results.reduce((acc, result, i)=>Object.assign(acc, {\n                [matchesToLoad[i].route.id]: result\n            }), {});\n    };\n}\nasync function $c5b33ec0dccca72b$var$singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n    try {\n        let handlerRequest = new Request(handlerUrl, {\n            method: request.method,\n            body: request.body,\n            headers: request.headers,\n            signal: request.signal,\n            ...request.body ? {\n                duplex: \"half\"\n            } : void 0\n        });\n        let result = await staticHandler.query(handlerRequest, {\n            requestContext: loadContext,\n            skipLoaderErrorBubbling: true,\n            dataStrategy: $c5b33ec0dccca72b$var$getSingleFetchDataStrategy2({\n                isActionDataRequest: true\n            })\n        });\n        if ($c5b33ec0dccca72b$var$isResponse(result)) return {\n            result: $c5b33ec0dccca72b$var$getSingleFetchRedirect(result.status, result.headers, build.basename),\n            headers: result.headers,\n            status: $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS\n        };\n        let context = result;\n        let headers = $c5b33ec0dccca72b$var$getDocumentHeaders(build, context);\n        if ($c5b33ec0dccca72b$var$isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) return {\n            result: $c5b33ec0dccca72b$var$getSingleFetchRedirect(context.statusCode, headers, build.basename),\n            headers: headers,\n            status: $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS\n        };\n        if (context.errors) {\n            Object.values(context.errors).forEach((err)=>{\n                if (!$c5b33ec0dccca72b$export$972111febbeef05b(err) || err.error) handleError(err);\n            });\n            context.errors = $c5b33ec0dccca72b$var$sanitizeErrors(context.errors, serverMode);\n        }\n        let singleFetchResult;\n        if (context.errors) singleFetchResult = {\n            error: Object.values(context.errors)[0]\n        };\n        else singleFetchResult = {\n            data: Object.values(context.actionData || {})[0]\n        };\n        return {\n            result: singleFetchResult,\n            headers: headers,\n            status: context.statusCode\n        };\n    } catch (error) {\n        handleError(error);\n        return {\n            result: {\n                error: error\n            },\n            headers: new Headers(),\n            status: 500\n        };\n    }\n}\nasync function $c5b33ec0dccca72b$var$singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n    try {\n        let handlerRequest = new Request(handlerUrl, {\n            headers: request.headers,\n            signal: request.signal\n        });\n        let loadRouteIds = new URL(request.url).searchParams.get(\"_routes\")?.split(\",\") || void 0;\n        let result = await staticHandler.query(handlerRequest, {\n            requestContext: loadContext,\n            skipLoaderErrorBubbling: true,\n            dataStrategy: $c5b33ec0dccca72b$var$getSingleFetchDataStrategy2({\n                loadRouteIds: loadRouteIds\n            })\n        });\n        if ($c5b33ec0dccca72b$var$isResponse(result)) return {\n            result: {\n                [$c5b33ec0dccca72b$export$60644022b8b46aaa]: $c5b33ec0dccca72b$var$getSingleFetchRedirect(result.status, result.headers, build.basename)\n            },\n            headers: result.headers,\n            status: $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS\n        };\n        let context = result;\n        let headers = $c5b33ec0dccca72b$var$getDocumentHeaders(build, context);\n        if ($c5b33ec0dccca72b$var$isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) return {\n            result: {\n                [$c5b33ec0dccca72b$export$60644022b8b46aaa]: $c5b33ec0dccca72b$var$getSingleFetchRedirect(context.statusCode, headers, build.basename)\n            },\n            headers: headers,\n            status: $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS\n        };\n        if (context.errors) {\n            Object.values(context.errors).forEach((err)=>{\n                if (!$c5b33ec0dccca72b$export$972111febbeef05b(err) || err.error) handleError(err);\n            });\n            context.errors = $c5b33ec0dccca72b$var$sanitizeErrors(context.errors, serverMode);\n        }\n        let results = {};\n        let loadedMatches = loadRouteIds ? context.matches.filter((m)=>m.route.loader && loadRouteIds.includes(m.route.id)) : context.matches;\n        loadedMatches.forEach((m)=>{\n            let { id: id } = m.route;\n            if (context.errors && context.errors.hasOwnProperty(id)) results[id] = {\n                error: context.errors[id]\n            };\n            else if (context.loaderData.hasOwnProperty(id)) results[id] = {\n                data: context.loaderData[id]\n            };\n        });\n        return {\n            result: results,\n            headers: headers,\n            status: context.statusCode\n        };\n    } catch (error) {\n        handleError(error);\n        return {\n            result: {\n                root: {\n                    error: error\n                }\n            },\n            headers: new Headers(),\n            status: 500\n        };\n    }\n}\nfunction $c5b33ec0dccca72b$var$getSingleFetchRedirect(status, headers, basename) {\n    let redirect2 = headers.get(\"Location\");\n    if (basename) redirect2 = $c5b33ec0dccca72b$var$stripBasename(redirect2, basename) || redirect2;\n    return {\n        redirect: redirect2,\n        status: status,\n        revalidate: // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n        // detail of ?_data requests as our way to tell the front end to revalidate when\n        // we didn't have a response body to include that information in.\n        // With single fetch, we tell the front end via this revalidate boolean field.\n        // However, we're respecting it for now because it may be something folks have\n        // used in their own responses\n        // TODO(v3): Consider removing or making this official public API\n        headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\"),\n        reload: headers.has(\"X-Remix-Reload-Document\"),\n        replace: headers.has(\"X-Remix-Replace\")\n    };\n}\nfunction $c5b33ec0dccca72b$var$encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\n    let controller = new AbortController();\n    let timeoutId = setTimeout(()=>controller.abort(new Error(\"Server Timeout\")), typeof streamTimeout === \"number\" ? streamTimeout : 4950);\n    requestSignal.addEventListener(\"abort\", ()=>clearTimeout(timeoutId));\n    return (0, $38eecd17912935e8$exports.encode)(data2, {\n        signal: controller.signal,\n        plugins: [\n            (value)=>{\n                if (value instanceof Error) {\n                    let { name: name, message: message, stack: stack } = serverMode === \"production\" /* Production */  ? $c5b33ec0dccca72b$var$sanitizeError(value, serverMode) : value;\n                    return [\n                        \"SanitizedError\",\n                        name,\n                        message,\n                        stack\n                    ];\n                }\n                if (value instanceof $c5b33ec0dccca72b$export$f2680fa305b734ca) {\n                    let { data: data3, status: status, statusText: statusText } = value;\n                    return [\n                        \"ErrorResponse\",\n                        data3,\n                        status,\n                        statusText\n                    ];\n                }\n                if (value && typeof value === \"object\" && $c5b33ec0dccca72b$export$60644022b8b46aaa in value) return [\n                    \"SingleFetchRedirect\",\n                    value[$c5b33ec0dccca72b$export$60644022b8b46aaa]\n                ];\n            }\n        ],\n        postPlugins: [\n            (value)=>{\n                if (!value) return;\n                if (typeof value !== \"object\") return;\n                return [\n                    \"SingleFetchClassInstance\",\n                    Object.fromEntries(Object.entries(value))\n                ];\n            },\n            ()=>[\n                    \"SingleFetchFallback\"\n                ]\n        ]\n    });\n}\n// lib/server-runtime/server.ts\nvar $c5b33ec0dccca72b$var$NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([\n    100,\n    101,\n    204,\n    205,\n    304\n]);\nfunction $c5b33ec0dccca72b$var$derive(build, mode) {\n    let routes = $c5b33ec0dccca72b$var$createRoutes(build.routes);\n    let dataRoutes = $c5b33ec0dccca72b$var$createStaticHandlerDataRoutes(build.routes, build.future);\n    let serverMode = $c5b33ec0dccca72b$var$isServerMode(mode) ? mode : \"production\" /* Production */ ;\n    let staticHandler = $c5b33ec0dccca72b$var$createStaticHandler(dataRoutes, {\n        basename: build.basename\n    });\n    let errorHandler = build.entry.module.handleError || ((error, { request: request })=>{\n        if (serverMode !== \"test\" /* Test */  && !request.signal.aborted) console.error(// @ts-expect-error This is \"private\" from users but intended for internal use\n        $c5b33ec0dccca72b$export$972111febbeef05b(error) && error.error ? error.error : error);\n    });\n    return {\n        routes: routes,\n        dataRoutes: dataRoutes,\n        serverMode: serverMode,\n        staticHandler: staticHandler,\n        errorHandler: errorHandler\n    };\n}\nvar $c5b33ec0dccca72b$export$6308091d8cbd0718 = (build, mode)=>{\n    let _build;\n    let routes;\n    let serverMode;\n    let staticHandler;\n    let errorHandler;\n    return async function requestHandler(request, loadContext = {}) {\n        _build = typeof build === \"function\" ? await build() : build;\n        if (typeof build === \"function\") {\n            let derived = $c5b33ec0dccca72b$var$derive(_build, mode);\n            routes = derived.routes;\n            serverMode = derived.serverMode;\n            staticHandler = derived.staticHandler;\n            errorHandler = derived.errorHandler;\n        } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n            let derived = $c5b33ec0dccca72b$var$derive(_build, mode);\n            routes = derived.routes;\n            serverMode = derived.serverMode;\n            staticHandler = derived.staticHandler;\n            errorHandler = derived.errorHandler;\n        }\n        let url = new URL(request.url);\n        let normalizedPath = url.pathname.replace(/\\.data$/, \"\").replace(/^\\/_root$/, \"/\");\n        if (normalizedPath !== \"/\" && normalizedPath.endsWith(\"/\")) normalizedPath = normalizedPath.slice(0, -1);\n        let params = {};\n        let handleError = (error)=>{\n            if (mode === \"development\" /* Development */ ) $c5b33ec0dccca72b$var$getDevServerHooks()?.processRequestError?.(error);\n            errorHandler(error, {\n                context: loadContext,\n                params: params,\n                request: request\n            });\n        };\n        if (!_build.ssr) {\n            if (_build.prerender.length === 0) request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\n            else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\n                if (url.pathname.endsWith(\".data\")) {\n                    errorHandler(new $c5b33ec0dccca72b$export$f2680fa305b734ca(404, \"Not Found\", `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`), {\n                        context: loadContext,\n                        params: params,\n                        request: request\n                    });\n                    return new Response(\"Not Found\", {\n                        status: 404,\n                        statusText: \"Not Found\"\n                    });\n                } else request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\n            }\n        }\n        let manifestUrl = `${_build.basename ?? \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n        if (url.pathname === manifestUrl) try {\n            let res = await $c5b33ec0dccca72b$var$handleManifestRequest(_build, routes, url);\n            return res;\n        } catch (e) {\n            handleError(e);\n            return new Response(\"Unknown Server Error\", {\n                status: 500\n            });\n        }\n        let matches = $c5b33ec0dccca72b$var$matchServerRoutes(routes, url.pathname, _build.basename);\n        if (matches && matches.length > 0) Object.assign(params, matches[0].params);\n        let response;\n        if (url.pathname.endsWith(\".data\")) {\n            let handlerUrl = new URL(request.url);\n            handlerUrl.pathname = normalizedPath;\n            let singleFetchMatches = $c5b33ec0dccca72b$var$matchServerRoutes(routes, handlerUrl.pathname, _build.basename);\n            response = await $c5b33ec0dccca72b$var$handleSingleFetchRequest(serverMode, _build, staticHandler, request, handlerUrl, loadContext, handleError);\n            if (_build.entry.module.handleDataRequest) {\n                response = await _build.entry.module.handleDataRequest(response, {\n                    context: loadContext,\n                    params: singleFetchMatches ? singleFetchMatches[0].params : {},\n                    request: request\n                });\n                if ($c5b33ec0dccca72b$var$isRedirectResponse(response)) {\n                    let result = $c5b33ec0dccca72b$var$getSingleFetchRedirect(response.status, response.headers, _build.basename);\n                    if (request.method === \"GET\") result = {\n                        [$c5b33ec0dccca72b$export$60644022b8b46aaa]: result\n                    };\n                    let headers = new Headers(response.headers);\n                    headers.set(\"Content-Type\", \"text/x-script\");\n                    return new Response($c5b33ec0dccca72b$var$encodeViaTurboStream(result, request.signal, _build.entry.module.streamTimeout, serverMode), {\n                        status: $c5b33ec0dccca72b$var$SINGLE_FETCH_REDIRECT_STATUS,\n                        headers: headers\n                    });\n                }\n            }\n        } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) response = await $c5b33ec0dccca72b$var$handleResourceRequest(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError);\n        else {\n            let criticalCss = mode === \"development\" /* Development */  ? await $c5b33ec0dccca72b$var$getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;\n            response = await $c5b33ec0dccca72b$var$handleDocumentRequest(serverMode, _build, staticHandler, request, loadContext, handleError, criticalCss);\n        }\n        if (request.method === \"HEAD\") return new Response(null, {\n            headers: response.headers,\n            status: response.status,\n            statusText: response.statusText\n        });\n        return response;\n    };\n};\nasync function $c5b33ec0dccca72b$var$handleManifestRequest(build, routes, url) {\n    let patches = {};\n    if (url.searchParams.has(\"p\")) {\n        for (let path of url.searchParams.getAll(\"p\")){\n            let matches = $c5b33ec0dccca72b$var$matchServerRoutes(routes, path, build.basename);\n            if (matches) for (let match of matches){\n                let routeId = match.route.id;\n                let route = build.assets.routes[routeId];\n                if (route) patches[routeId] = route;\n            }\n        }\n        return Response.json(patches, {\n            headers: {\n                \"Cache-Control\": \"public, max-age=31536000, immutable\"\n            }\n        });\n    }\n    return new Response(\"Invalid Request\", {\n        status: 400\n    });\n}\nasync function $c5b33ec0dccca72b$var$handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\n    let { result: result, headers: headers, status: status } = request.method !== \"GET\" ? await $c5b33ec0dccca72b$var$singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) : await $c5b33ec0dccca72b$var$singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError);\n    let resultHeaders = new Headers(headers);\n    resultHeaders.set(\"X-Remix-Response\", \"yes\");\n    if ($c5b33ec0dccca72b$var$NO_BODY_STATUS_CODES.has(status)) return new Response(null, {\n        status: status,\n        headers: resultHeaders\n    });\n    resultHeaders.set(\"Content-Type\", \"text/x-script\");\n    return new Response($c5b33ec0dccca72b$var$encodeViaTurboStream(result, request.signal, build.entry.module.streamTimeout, serverMode), {\n        status: status || 200,\n        headers: resultHeaders\n    });\n}\nasync function $c5b33ec0dccca72b$var$handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\n    let isSpaMode = request.headers.has(\"X-React-Router-SPA-Mode\");\n    let context;\n    try {\n        context = await staticHandler.query(request, {\n            requestContext: loadContext\n        });\n    } catch (error) {\n        handleError(error);\n        return new Response(null, {\n            status: 500\n        });\n    }\n    if ($c5b33ec0dccca72b$var$isResponse(context)) return context;\n    let headers = $c5b33ec0dccca72b$var$getDocumentHeaders(build, context);\n    if ($c5b33ec0dccca72b$var$NO_BODY_STATUS_CODES.has(context.statusCode)) return new Response(null, {\n        status: context.statusCode,\n        headers: headers\n    });\n    if (context.errors) {\n        Object.values(context.errors).forEach((err)=>{\n            if (!$c5b33ec0dccca72b$export$972111febbeef05b(err) || err.error) handleError(err);\n        });\n        context.errors = $c5b33ec0dccca72b$var$sanitizeErrors(context.errors, serverMode);\n    }\n    let state = {\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: $c5b33ec0dccca72b$var$serializeErrors2(context.errors, serverMode)\n    };\n    let entryContext = {\n        manifest: build.assets,\n        routeModules: $c5b33ec0dccca72b$var$createEntryRouteModules(build.routes),\n        staticHandlerContext: context,\n        criticalCss: criticalCss,\n        serverHandoffString: $c5b33ec0dccca72b$var$createServerHandoffString({\n            basename: build.basename,\n            criticalCss: criticalCss,\n            future: build.future,\n            ssr: build.ssr,\n            isSpaMode: isSpaMode\n        }),\n        serverHandoffStream: $c5b33ec0dccca72b$var$encodeViaTurboStream(state, request.signal, build.entry.module.streamTimeout, serverMode),\n        renderMeta: {},\n        future: build.future,\n        ssr: build.ssr,\n        isSpaMode: isSpaMode,\n        serializeError: (err)=>$c5b33ec0dccca72b$var$serializeError(err, serverMode)\n    };\n    let handleDocumentRequestFunction = build.entry.module.default;\n    try {\n        return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);\n    } catch (error) {\n        handleError(error);\n        let errorForSecondRender = error;\n        if ($c5b33ec0dccca72b$var$isResponse(error)) try {\n            let data2 = await $c5b33ec0dccca72b$var$unwrapResponse(error);\n            errorForSecondRender = new $c5b33ec0dccca72b$export$f2680fa305b734ca(error.status, error.statusText, data2);\n        } catch (e) {}\n        context = $c5b33ec0dccca72b$var$getStaticContextFromError(staticHandler.dataRoutes, context, errorForSecondRender);\n        if (context.errors) context.errors = $c5b33ec0dccca72b$var$sanitizeErrors(context.errors, serverMode);\n        let state2 = {\n            loaderData: context.loaderData,\n            actionData: context.actionData,\n            errors: $c5b33ec0dccca72b$var$serializeErrors2(context.errors, serverMode)\n        };\n        entryContext = {\n            ...entryContext,\n            staticHandlerContext: context,\n            serverHandoffString: $c5b33ec0dccca72b$var$createServerHandoffString({\n                basename: build.basename,\n                future: build.future,\n                ssr: build.ssr,\n                isSpaMode: isSpaMode\n            }),\n            serverHandoffStream: $c5b33ec0dccca72b$var$encodeViaTurboStream(state2, request.signal, build.entry.module.streamTimeout, serverMode),\n            renderMeta: {}\n        };\n        try {\n            return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);\n        } catch (error2) {\n            handleError(error2);\n            return $c5b33ec0dccca72b$var$returnLastResortErrorResponse(error2, serverMode);\n        }\n    }\n}\nasync function $c5b33ec0dccca72b$var$handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {\n    try {\n        let response = await staticHandler.queryRoute(request, {\n            routeId: routeId,\n            requestContext: loadContext\n        });\n        if ($c5b33ec0dccca72b$var$isResponse(response)) return response;\n        if (typeof response === \"string\") return new Response(response);\n        return Response.json(response);\n    } catch (error) {\n        if ($c5b33ec0dccca72b$var$isResponse(error)) {\n            error.headers.set(\"X-Remix-Catch\", \"yes\");\n            return error;\n        }\n        if ($c5b33ec0dccca72b$export$972111febbeef05b(error)) {\n            if (error) handleError(error);\n            return $c5b33ec0dccca72b$var$errorResponseToJson(error, serverMode);\n        }\n        handleError(error);\n        return $c5b33ec0dccca72b$var$returnLastResortErrorResponse(error, serverMode);\n    }\n}\nfunction $c5b33ec0dccca72b$var$errorResponseToJson(errorResponse, serverMode) {\n    return Response.json($c5b33ec0dccca72b$var$serializeError(// @ts-expect-error This is \"private\" from users but intended for internal use\n    errorResponse.error || new Error(\"Unexpected Server Error\"), serverMode), {\n        status: errorResponse.status,\n        statusText: errorResponse.statusText,\n        headers: {\n            \"X-Remix-Error\": \"yes\"\n        }\n    });\n}\nfunction $c5b33ec0dccca72b$var$returnLastResortErrorResponse(error, serverMode) {\n    let message = \"Unexpected Server Error\";\n    if (serverMode !== \"production\" /* Production */ ) message += `\n\n${String(error)}`;\n    return new Response(message, {\n        status: 500,\n        headers: {\n            \"Content-Type\": \"text/plain\"\n        }\n    });\n}\nfunction $c5b33ec0dccca72b$var$unwrapResponse(response) {\n    let contentType = response.headers.get(\"Content-Type\");\n    return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\n}\n// lib/server-runtime/sessions.ts\nfunction $c5b33ec0dccca72b$var$flash(name) {\n    return `__flash_${name}__`;\n}\nvar $c5b33ec0dccca72b$export$f7c62c73429afa28 = (initialData = {}, id = \"\")=>{\n    let map = new Map(Object.entries(initialData));\n    return {\n        get id () {\n            return id;\n        },\n        get data () {\n            return Object.fromEntries(map);\n        },\n        has (name) {\n            return map.has(name) || map.has($c5b33ec0dccca72b$var$flash(name));\n        },\n        get (name) {\n            if (map.has(name)) return map.get(name);\n            let flashName = $c5b33ec0dccca72b$var$flash(name);\n            if (map.has(flashName)) {\n                let value = map.get(flashName);\n                map.delete(flashName);\n                return value;\n            }\n            return void 0;\n        },\n        set (name, value) {\n            map.set(name, value);\n        },\n        flash (name, value) {\n            map.set($c5b33ec0dccca72b$var$flash(name), value);\n        },\n        unset (name) {\n            map.delete(name);\n        }\n    };\n};\nvar $c5b33ec0dccca72b$export$548944bd211b425f = (object)=>{\n    return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nfunction $c5b33ec0dccca72b$export$1f1c547b06207ca3({ cookie: cookieArg, createData: createData, readData: readData, updateData: updateData, deleteData: deleteData }) {\n    let cookie = $c5b33ec0dccca72b$export$f00768c7d8d5ffdb(cookieArg) ? cookieArg : $c5b33ec0dccca72b$export$7892c26d6c7a7447(cookieArg?.name || \"__session\", cookieArg);\n    $c5b33ec0dccca72b$var$warnOnceAboutSigningSessionCookie(cookie);\n    return {\n        async getSession (cookieHeader, options) {\n            let id = cookieHeader && await cookie.parse(cookieHeader, options);\n            let data2 = id && await readData(id);\n            return $c5b33ec0dccca72b$export$f7c62c73429afa28(data2 || {}, id || \"\");\n        },\n        async commitSession (session, options) {\n            let { id: id, data: data2 } = session;\n            let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\n            if (id) await updateData(id, data2, expires);\n            else id = await createData(data2, expires);\n            return cookie.serialize(id, options);\n        },\n        async destroySession (session, options) {\n            await deleteData(session.id);\n            return cookie.serialize(\"\", {\n                ...options,\n                maxAge: void 0,\n                expires: /* @__PURE__ */ new Date(0)\n            });\n        }\n    };\n}\nfunction $c5b33ec0dccca72b$var$warnOnceAboutSigningSessionCookie(cookie) {\n    $c5b33ec0dccca72b$var$warnOnce(cookie.isSigned, `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);\n}\n// lib/server-runtime/sessions/cookieStorage.ts\nfunction $c5b33ec0dccca72b$export$2641c3ccec6bd360({ cookie: cookieArg } = {}) {\n    let cookie = $c5b33ec0dccca72b$export$f00768c7d8d5ffdb(cookieArg) ? cookieArg : $c5b33ec0dccca72b$export$7892c26d6c7a7447(cookieArg?.name || \"__session\", cookieArg);\n    $c5b33ec0dccca72b$var$warnOnceAboutSigningSessionCookie(cookie);\n    return {\n        async getSession (cookieHeader, options) {\n            return $c5b33ec0dccca72b$export$f7c62c73429afa28(cookieHeader && await cookie.parse(cookieHeader, options) || {});\n        },\n        async commitSession (session, options) {\n            let serializedCookie = await cookie.serialize(session.data, options);\n            if (serializedCookie.length > 4096) throw new Error(\"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length);\n            return serializedCookie;\n        },\n        async destroySession (_session, options) {\n            return cookie.serialize(\"\", {\n                ...options,\n                maxAge: void 0,\n                expires: /* @__PURE__ */ new Date(0)\n            });\n        }\n    };\n}\n// lib/server-runtime/sessions/memoryStorage.ts\nfunction $c5b33ec0dccca72b$export$abd1f21611468758({ cookie: cookie } = {}) {\n    let map = /* @__PURE__ */ new Map();\n    return $c5b33ec0dccca72b$export$1f1c547b06207ca3({\n        cookie: cookie,\n        async createData (data2, expires) {\n            let id = Math.random().toString(36).substring(2, 10);\n            map.set(id, {\n                data: data2,\n                expires: expires\n            });\n            return id;\n        },\n        async readData (id) {\n            if (map.has(id)) {\n                let { data: data2, expires: expires } = map.get(id);\n                if (!expires || expires > /* @__PURE__ */ new Date()) return data2;\n                if (expires) map.delete(id);\n            }\n            return null;\n        },\n        async updateData (id, data2, expires) {\n            map.set(id, {\n                data: data2,\n                expires: expires\n            });\n        },\n        async deleteData (id) {\n            map.delete(id);\n        }\n    });\n}\n// lib/href.ts\nfunction $c5b33ec0dccca72b$export$8f51af5840e0602a(path, ...args) {\n    let params = args[0];\n    return path.split(\"/\").map((segment)=>{\n        const match = segment.match(/^:([\\w-]+)(\\?)?/);\n        if (!match) return segment;\n        const param = match[1];\n        const value = params ? params[param] : void 0;\n        const isRequired = match[2] === void 0;\n        if (isRequired && value === void 0) throw Error(`Path '${path}' requires param '${param}' but it was not provided`);\n        return value;\n    }).filter((segment)=>segment !== void 0).join(\"/\");\n}\n// lib/dom/ssr/errors.ts\nfunction $c5b33ec0dccca72b$export$c923cb491441bb56(errors) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries){\n        if (val && val.__type === \"RouteErrorResponse\") serialized[key] = new $c5b33ec0dccca72b$export$f2680fa305b734ca(val.status, val.statusText, val.data, val.internal === true);\n        else if (val && val.__type === \"Error\") {\n            if (val.__subType) {\n                let ErrorConstructor = window[val.__subType];\n                if (typeof ErrorConstructor === \"function\") try {\n                    let error = new ErrorConstructor(val.message);\n                    error.stack = val.stack;\n                    serialized[key] = error;\n                } catch (e) {}\n            }\n            if (serialized[key] == null) {\n                let error = new Error(val.message);\n                error.stack = val.stack;\n                serialized[key] = error;\n            }\n        } else serialized[key] = val;\n    }\n    return serialized;\n}\n\n\n\nconst $7517ceb1eddd3a02$export$463d32b91de8b4d = ()=>[\n        {\n            rel: \"preconnect\",\n            href: \"https://fonts.googleapis.com\"\n        },\n        {\n            rel: \"preconnect\",\n            href: \"https://fonts.gstatic.com\",\n            crossOrigin: \"anonymous\"\n        },\n        {\n            rel: \"stylesheet\",\n            href: \"https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\"\n        }\n    ];\nfunction $7517ceb1eddd3a02$export$c84671f46d6a1ca({ children: children }) {\n    return /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsxs)(\"html\", {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsxs)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"meta\", {\n                        charSet: \"utf-8\"\n                    }),\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }),\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)((0, $c5b33ec0dccca72b$export$b08a9033b36413fb), {}),\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)((0, $c5b33ec0dccca72b$export$b2e089eb3692b073), {})\n                ]\n            }),\n            /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsxs)(\"body\", {\n                children: [\n                    children,\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)((0, $c5b33ec0dccca72b$export$11aac1aab828f1fa), {}),\n                    /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)((0, $c5b33ec0dccca72b$export$ff0bf87698939488), {})\n                ]\n            })\n        ]\n    });\n}\nfunction $7517ceb1eddd3a02$export$2e2bcd8739ae039() {\n    return /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)((0, $c5b33ec0dccca72b$export$910ae8079b2c2852), {});\n}\nfunction $7517ceb1eddd3a02$export$e926676385687eaf({ error: error }) {\n    let message = \"Oops!\";\n    let details = \"An unexpected error occurred.\";\n    let stack;\n    if ((0, $c5b33ec0dccca72b$export$972111febbeef05b)(error)) {\n        message = error.status === 404 ? \"404\" : \"Error\";\n        details = error.status === 404 ? \"The requested page could not be found.\" : error.statusText || details;\n    }\n    return /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsxs)(\"main\", {\n        className: \"pt-16 p-4 container mx-auto\",\n        children: [\n            /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"h1\", {\n                children: message\n            }),\n            /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"p\", {\n                children: details\n            }),\n            stack && /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"pre\", {\n                className: \"w-full p-4 overflow-x-auto\",\n                children: /*#__PURE__*/ (0, $7ead0b1397a835ed$exports.jsx)(\"code\", {\n                    children: stack\n                })\n            })\n        ]\n    });\n}\n\n})();\n//# sourceMappingURL=root.js.map\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {\r\n    isRouteErrorResponse,\r\n    Links,\r\n    Meta,\r\n    Outlet,\r\n    Scripts,\r\n    ScrollRestoration,\r\n  } from \"react-router\";\r\n  \r\n  import type { Route } from \"./+types/root\";\r\n  import \"./style.css\";\r\n  \r\n  export const links: Route.LinksFunction = () => [\r\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\r\n    {\r\n      rel: \"preconnect\",\r\n      href: \"https://fonts.gstatic.com\",\r\n      crossOrigin: \"anonymous\",\r\n    },\r\n    {\r\n      rel: \"stylesheet\",\r\n      href: \"https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\",\r\n    },\r\n  ];\r\n  \r\n  export function Layout({ children }: { children: React.ReactNode }) {\r\n    return (\r\n      <html lang=\"en\">\r\n        <head>\r\n          <meta charSet=\"utf-8\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <Meta />\r\n          <Links />\r\n        </head>\r\n        <body>\r\n          {children}\r\n          <ScrollRestoration />\r\n          <Scripts />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n  \r\n  export default function App() {\r\n    return <Outlet />;\r\n  }\r\n  \r\n  export function ErrorBoundary({ error }: Route.ErrorBoundaryProps) {\r\n    let message = \"Oops!\";\r\n    let details = \"An unexpected error occurred.\";\r\n    let stack: string | undefined;\r\n  \r\n    if (isRouteErrorResponse(error)) {\r\n      message = error.status === 404 ? \"404\" : \"Error\";\r\n      details =\r\n        error.status === 404\r\n          ? \"The requested page could not be found.\"\r\n          : error.statusText || details;\r\n    } else if (process.env.NODE_ENV === 'development' && error && error instanceof Error) {\r\n      details = error.message;\r\n      stack = error.stack;\r\n    }\r\n  \r\n    return (\r\n      <main className=\"pt-16 p-4 container mx-auto\">\r\n        <h1>{message}</h1>\r\n        <p>{details}</p>\r\n        {stack && (\r\n          <pre className=\"w-full p-4 overflow-x-auto\">\r\n            <code>{stack}</code>\r\n          </pre>\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n  ","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * react-router v7.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href2 = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href2 = typeof to === \"string\" ? to : createPath(to);\n    href2 = href2.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href2}`\n    );\n    return new URL(href2, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(\n      null,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors[m.route.id] !== void 0\n      );\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      state,\n      matches,\n      matchesToLoad,\n      revalidatingFetchers,\n      request\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href2, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href2,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      state,\n      matches,\n      matchesToLoad,\n      revalidatingFetchers,\n      revalidationRequest\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state2,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties2\n      );\n    } catch (e) {\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state2,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state2,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    skipLoaderErrorBubbling,\n    dataStrategy\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\n    if (error !== void 0) {\n      throw error;\n    }\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      return Object.values(result.loaderData)[0];\n    }\n    return void 0;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...context2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    let executedLoaders = new Set(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return {\n      ...context,\n      matches\n    };\n  }\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties2,\n      requestContext\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          throw result;\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  };\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      return true;\n    }\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n      )\n    });\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      });\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  Object.assign(routeToUpdate, routeUpdates);\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n    // since the logic will differ between frameworks.\n    ...mapRouteProperties2(routeToUpdate),\n    lazy: void 0\n  });\n}\nasync function defaultDataStrategy({\n  matches\n}) {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\n  );\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    let resolve = async (handlerOverride) => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(\n        type,\n        request,\n        match,\n        loadRoutePromise,\n        handlerOverride,\n        requestContext\n      ) : Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    };\n    return {\n      ...match,\n      shouldLoad,\n      resolve\n    };\n  });\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (loadRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nvar ENABLE_DEV_WARNINGS = true;\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator2.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator2.replace : navigator2.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator2,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  return React2.useMemo(\n    () => ({\n      async revalidate() {\n        await dataRouterContext.router.revalidate();\n      },\n      state: state.revalidation\n    }),\n    [dataRouterContext.router, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator: navigator2,\n      static: false,\n      basename\n    }),\n    [router, navigator2, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator2\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(_props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator: navigator2,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator2, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/components.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\nimport { decode } from \"turbo-stream\";\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getSingleFetchDataStrategy(manifest, routeModules, ssr, getRouter) {\n  return async ({ request, matches, fetcherKey }) => {\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(request, matches);\n    }\n    if (!ssr) {\n      let foundRevalidatingServerLoader = matches.some(\n        (m) => m.shouldLoad && manifest.routes[m.route.id]?.hasLoader && !manifest.routes[m.route.id]?.hasClientLoader\n      );\n      if (!foundRevalidatingServerLoader) {\n        let matchesToLoad = matches.filter((m) => m.shouldLoad);\n        let url = stripIndexParam(singleFetchUrl(request.url));\n        let init = await createRequestInit(request);\n        let results = {};\n        await Promise.all(\n          matchesToLoad.map(\n            (m) => m.resolve(async (handler) => {\n              try {\n                let result = manifest.routes[m.route.id]?.hasClientLoader ? await fetchSingleLoader(handler, url, init, m.route.id) : await handler();\n                results[m.route.id] = { type: \"data\", result };\n              } catch (e) {\n                results[m.route.id] = { type: \"error\", result: e };\n              }\n            })\n          )\n        );\n        return results;\n      }\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(request, matches);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      manifest,\n      routeModules,\n      ssr,\n      getRouter(),\n      request,\n      matches\n    );\n  };\n}\nasync function singleFetchActionStrategy(request, matches) {\n  let actionMatch = matches.find((m) => m.shouldLoad);\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let url = singleFetchUrl(request.url);\n      let init = await createRequestInit(request);\n      let { data: data2, status } = await fetchAndDecode(url, init);\n      actionStatus = status;\n      return unwrapSingleFetchResult(\n        data2,\n        actionMatch.route.id\n      );\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, router, request, matches) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = matches.map(() => createDeferred2());\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\n  let singleFetchDfd = createDeferred2();\n  let url = stripIndexParam(singleFetchUrl(request.url));\n  let init = await createRequestInit(request);\n  let results = {};\n  let resolvePromise = Promise.all(\n    matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let manifestRoute = manifest.routes[m.route.id];\n        if (!m.shouldLoad) {\n          if (!router.state.initialized) {\n            return;\n          }\n          if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\n            foundOptOutRoute = true;\n            return;\n          }\n        }\n        if (manifestRoute && manifestRoute.hasClientLoader) {\n          if (manifestRoute.hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await fetchSingleLoader(\n              handler,\n              url,\n              init,\n              m.route.id\n            );\n            results[m.route.id] = { type: \"data\", result };\n          } catch (e) {\n            results[m.route.id] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (manifestRoute && manifestRoute.hasLoader) {\n          routesParams.add(m.route.id);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResults(data2, m.route.id);\n          });\n          results[m.route.id] = {\n            type: \"data\",\n            result\n          };\n        } catch (e) {\n          results[m.route.id] = {\n            type: \"error\",\n            result: e\n          };\n        }\n      })\n    )\n  );\n  await routesLoadedPromise;\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    try {\n      if (ssr && foundOptOutRoute && routesParams.size > 0) {\n        url.searchParams.set(\n          \"_routes\",\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n        );\n      }\n      let data2 = await fetchAndDecode(url, init);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let result = await fetcherMatch.resolve(async (handler) => {\n    let url = stripIndexParam(singleFetchUrl(request.url));\n    let init = await createRequestInit(request);\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\n  });\n  return { [fetcherMatch.route.id]: result };\n}\nfunction fetchSingleLoader(handler, url, init, routeId) {\n  return handler(async () => {\n    let singleLoaderUrl = new URL(url);\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\n    return unwrapSingleFetchResults(data2, routeId);\n  });\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecode(url, init) {\n  let res = await fetch(url, init);\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  const NO_BODY_STATUS_CODES2 = /* @__PURE__ */ new Set([100, 101, 204, 205]);\n  if (NO_BODY_STATUS_CODES2.has(res.status)) {\n    if (!init.method || init.method === \"GET\") {\n      return { status: res.status, data: {} };\n    } else {\n      return { status: res.status, data: { data: void 0 } };\n    }\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    return { status: res.status, data: decoded.value };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global2) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global2 && typeof global2[name] === \"function\") {\n            Constructor = global2[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResults(results, routeId) {\n  let redirect2 = results[SingleFetchRedirectSymbol];\n  if (redirect2) {\n    return unwrapSingleFetchResult(redirect2, routeId);\n  }\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"error\" in result) {\n    throw result.error;\n  } else if (\"redirect\" in result) {\n    let headers = {};\n    if (result.revalidate) {\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\n    }\n    if (result.reload) {\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\n    }\n    if (result.replace) {\n      headers[\"X-Remix-Replace\"] = \"yes\";\n    }\n    throw redirect(result.redirect, { status: result.status, headers });\n  } else if (\"data\" in result) {\n    return result.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React5 from \"react\";\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nimport * as React6 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need action/shouldRevalidate on these routes since they're\n      // for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route,\n        routeModule,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      } else if (route.clientLoaderModule) {\n        dataRoute.loader = async (args, singleFetch) => {\n          invariant2(route.clientLoaderModule);\n          let { clientLoader } = await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          );\n          return clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        };\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      } else if (route.clientActionModule) {\n        dataRoute.action = async (args, singleFetch) => {\n          invariant2(route.clientActionModule);\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          );\n          return clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        };\n      }\n      dataRoute.lazy = async () => {\n        if (route.clientLoaderModule || route.clientActionModule) {\n          await new Promise((resolve) => setTimeout(resolve, 0));\n        }\n        let modPromise = loadRouteModuleWithBlockingLinks(\n          route,\n          routeModulesCache\n        );\n        prefetchRouteModuleChunks(route);\n        let mod = await modPromise;\n        let lazyRoute = { ...mod };\n        if (mod.clientLoader) {\n          let clientLoader = mod.clientLoader;\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        }\n        if (mod.clientAction) {\n          let clientAction = mod.clientAction;\n          lazyRoute.action = (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        }\n        return {\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\n          shouldRevalidate: getShouldRevalidateFunction(\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          ),\n          handle: lazyRoute.handle,\n          // No need to wrap these in layout since the root route is never\n          // loaded via route.lazy()\n          Component: lazyRoute.Component,\n          ErrorBoundary: lazyRoute.ErrorBoundary\n        };\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({ ...opts, defaultShouldRevalidate: false });\n    } else {\n      return () => false;\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(ssr) {\n  return ssr === true;\n}\nfunction getPartialManifest(manifest, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router]);\n}\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\n    /\\/+/g,\n    \"/\"\n  );\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React9.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React9.useRef(null);\n  React9.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React9.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nfunction Links() {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React9.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, criticalCss ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  ));\n}\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let { router } = useDataRouterContext2();\n  let matches = React9.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\n  React9.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React9.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page);\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React9.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React9.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(\n    getModuleLinkHrefs(matches, manifest, {\n      includeHydrateFallback: true\n    })\n  );\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin\n    }\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/lib.tsx\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = \"7.2.0\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href2 = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href2,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href2, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href2, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, opts = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\n// lib/dom/ssr/server.tsx\nimport * as React12 from \"react\";\nfunction ServerRouter({\n  context,\n  url,\n  nonce\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\n  let routes = createServerRoutes(\n    manifest.routes,\n    routeModules,\n    context.future,\n    context.isSpaMode\n  );\n  context.staticHandlerContext.loaderData = {\n    ...context.staticHandlerContext.loaderData\n  };\n  for (let match of context.staticHandlerContext.matches) {\n    let routeId = match.route.id;\n    let route = routeModules[routeId];\n    let manifestRoute = context.manifest.routes[routeId];\n    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n      delete context.staticHandlerContext.loaderData[routeId];\n    }\n  }\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\n    FrameworkContext.Provider,\n    {\n      value: {\n        manifest,\n        routeModules,\n        criticalCss,\n        serverHandoffString,\n        future: context.future,\n        ssr: context.ssr,\n        isSpaMode: context.isSpaMode,\n        serializeError: context.serializeError,\n        renderMeta: context.renderMeta\n      }\n    },\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\n      StaticRouterProvider,\n      {\n        router,\n        context: context.staticHandlerContext,\n        hydrate: false\n      }\n    ))\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\n    StreamTransfer,\n    {\n      context,\n      identifier: 0,\n      reader: context.serverHandoffStream.getReader(),\n      textDecoder: new TextDecoder(),\n      nonce\n    }\n  )) : null);\n}\n\n// lib/dom/ssr/routes-test-stub.tsx\nimport * as React13 from \"react\";\nfunction createRoutesStub(routes, context = {}) {\n  return function RoutesTestStub({\n    initialEntries,\n    initialIndex,\n    hydrationData,\n    future\n  }) {\n    let routerRef = React13.useRef();\n    let remixContextRef = React13.useRef();\n    if (routerRef.current == null) {\n      remixContextRef.current = {\n        future: {},\n        manifest: {\n          routes: {},\n          entry: { imports: [], module: \"\" },\n          url: \"\",\n          version: \"\"\n        },\n        routeModules: {},\n        ssr: false,\n        isSpaMode: false\n      };\n      let patched = processRoutes(\n        // @ts-expect-error loader/action context types don't match :/\n        convertRoutesToDataRoutes(routes, (r) => r),\n        context,\n        remixContextRef.current.manifest,\n        remixContextRef.current.routeModules\n      );\n      routerRef.current = createMemoryRouter(patched, {\n        initialEntries,\n        initialIndex,\n        hydrationData\n      });\n    }\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\n  };\n}\nfunction processRoutes(routes, context, manifest, routeModules, parentId) {\n  return routes.map((route) => {\n    if (!route.id) {\n      throw new Error(\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\n      );\n    }\n    let { loader, action } = route;\n    let newRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      Component: route.Component,\n      HydrateFallback: route.HydrateFallback,\n      ErrorBoundary: route.ErrorBoundary,\n      action: action ? (args) => action({ ...args, context }) : void 0,\n      loader: loader ? (args) => loader({ ...args, context }) : void 0,\n      handle: route.handle,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    let entryRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      parentId,\n      hasAction: route.action != null,\n      hasLoader: route.loader != null,\n      // When testing routes, you should just be stubbing loader/action, not\n      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\n      // That is better tested via E2E tests.\n      hasClientAction: false,\n      hasClientLoader: false,\n      hasErrorBoundary: route.ErrorBoundary != null,\n      // any need for these?\n      module: \"build/stub-path-to-module.js\",\n      clientActionModule: void 0,\n      clientLoaderModule: void 0,\n      hydrateFallbackModule: void 0\n    };\n    manifest.routes[newRoute.id] = entryRoute;\n    routeModules[route.id] = {\n      default: route.Component || Outlet,\n      ErrorBoundary: route.ErrorBoundary || void 0,\n      handle: route.handle,\n      links: route.links,\n      meta: route.meta,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    if (route.children) {\n      newRoute.children = processRoutes(\n        route.children,\n        context,\n        manifest,\n        routeModules,\n        newRoute.id\n      );\n    }\n    return newRoute;\n  });\n}\n\n// lib/server-runtime/cookies.ts\nimport { parse, serialize } from \"cookie\";\n\n// lib/server-runtime/crypto.ts\nvar encoder = new TextEncoder();\nvar sign = async (value, secret) => {\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"sign\"]);\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\n    /=+$/,\n    \"\"\n  );\n  return value + \".\" + hash;\n};\nvar unsign = async (cookie, secret) => {\n  let index = cookie.lastIndexOf(\".\");\n  let value = cookie.slice(0, index);\n  let hash = cookie.slice(index + 1);\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"verify\"]);\n  let signature = byteStringToUint8Array(atob(hash));\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\n  return valid ? value : false;\n};\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\n  \"raw\",\n  encoder.encode(secret),\n  { name: \"HMAC\", hash: \"SHA-256\" },\n  false,\n  usages\n);\nfunction byteStringToUint8Array(byteString) {\n  let array = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    array[i] = byteString.charCodeAt(i);\n  }\n  return array;\n}\n\n// lib/server-runtime/cookies.ts\nvar createCookie = (name, cookieOptions = {}) => {\n  let { secrets = [], ...options } = {\n    path: \"/\",\n    sameSite: \"lax\",\n    ...cookieOptions\n  };\n  warnOnceAboutExpiresCookie(name, options.expires);\n  return {\n    get name() {\n      return name;\n    },\n    get isSigned() {\n      return secrets.length > 0;\n    },\n    get expires() {\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n    },\n    async parse(cookieHeader, parseOptions) {\n      if (!cookieHeader) return null;\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\n      if (name in cookies) {\n        let value = cookies[name];\n        if (typeof value === \"string\" && value !== \"\") {\n          let decoded = await decodeCookieValue(value, secrets);\n          return decoded;\n        } else {\n          return \"\";\n        }\n      } else {\n        return null;\n      }\n    },\n    async serialize(value, serializeOptions) {\n      return serialize(\n        name,\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\n        {\n          ...options,\n          ...serializeOptions\n        }\n      );\n    }\n  };\n};\nvar isCookie = (object) => {\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function encodeCookieValue(value, secrets) {\n  let encoded = encodeData(value);\n  if (secrets.length > 0) {\n    encoded = await sign(encoded, secrets[0]);\n  }\n  return encoded;\n}\nasync function decodeCookieValue(value, secrets) {\n  if (secrets.length > 0) {\n    for (let secret of secrets) {\n      let unsignedValue = await unsign(value, secret);\n      if (unsignedValue !== false) {\n        return decodeData(unsignedValue);\n      }\n    }\n    return null;\n  }\n  return decodeData(value);\n}\nfunction encodeData(value) {\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction decodeData(value) {\n  try {\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\n  } catch (error) {\n    return {};\n  }\n}\nfunction myEscape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, code;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (/[\\w*+\\-./@]/.exec(chr)) {\n      result += chr;\n    } else {\n      code = chr.charCodeAt(0);\n      if (code < 256) {\n        result += \"%\" + hex(code, 2);\n      } else {\n        result += \"%u\" + hex(code, 4).toUpperCase();\n      }\n    }\n  }\n  return result;\n}\nfunction hex(code, length) {\n  let result = code.toString(16);\n  while (result.length < length) result = \"0\" + result;\n  return result;\n}\nfunction myUnescape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, part;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (chr === \"%\") {\n      if (str.charAt(index) === \"u\") {\n        part = str.slice(index + 1, index + 5);\n        if (/^[\\da-f]{4}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 5;\n          continue;\n        }\n      } else {\n        part = str.slice(index, index + 2);\n        if (/^[\\da-f]{2}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 2;\n          continue;\n        }\n      }\n    }\n    result += chr;\n  }\n  return result;\n}\nfunction warnOnceAboutExpiresCookie(name, expires) {\n  warnOnce(\n    !expires,\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\n  );\n}\n\n// lib/server-runtime/entry.ts\nfunction createEntryRouteModules(manifest) {\n  return Object.keys(manifest).reduce((memo2, routeId) => {\n    let route = manifest[routeId];\n    if (route) {\n      memo2[routeId] = route.module;\n    }\n    return memo2;\n  }, {});\n}\n\n// lib/server-runtime/mode.ts\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\n  ServerMode2[\"Development\"] = \"development\";\n  ServerMode2[\"Production\"] = \"production\";\n  ServerMode2[\"Test\"] = \"test\";\n  return ServerMode2;\n})(ServerMode || {});\nfunction isServerMode(value) {\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\n}\n\n// lib/server-runtime/errors.ts\nfunction sanitizeError(error, serverMode) {\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\n    let sanitized = new Error(\"Unexpected Server Error\");\n    sanitized.stack = void 0;\n    return sanitized;\n  }\n  return error;\n}\nfunction sanitizeErrors(errors, serverMode) {\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\n  }, {});\n}\nfunction serializeError(error, serverMode) {\n  let sanitized = sanitizeError(error, serverMode);\n  return {\n    message: sanitized.message,\n    stack: sanitized.stack\n  };\n}\nfunction serializeErrors2(errors, serverMode) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      let sanitized = sanitizeError(val, serverMode);\n      serialized[key] = {\n        message: sanitized.message,\n        stack: sanitized.stack,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.  This will only apply\n        // in dev mode since all production errors are sanitized to normal\n        // Error instances\n        ...sanitized.name !== \"Error\" ? {\n          __subType: sanitized.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/server-runtime/routeMatching.ts\nfunction matchServerRoutes(routes, pathname, basename) {\n  let matches = matchRoutes(\n    routes,\n    pathname,\n    basename\n  );\n  if (!matches) return null;\n  return matches.map((match) => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\n// lib/server-runtime/data.ts\nasync function callRouteHandler(handler, args) {\n  let result = await handler({\n    request: stripRoutesParam(stripIndexParam2(args.request)),\n    params: args.params,\n    context: args.context\n  });\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\n    throw new Response(null, result.init);\n  }\n  return result;\n}\nfunction stripIndexParam2(request) {\n  let url = new URL(request.url);\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nfunction stripRoutesParam(request) {\n  let url = new URL(request.url);\n  url.searchParams.delete(\"_routes\");\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\n\n// lib/server-runtime/invariant.ts\nfunction invariant3(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    console.error(\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\n    );\n    throw new Error(message);\n  }\n}\n\n// lib/server-runtime/routes.ts\nfunction groupRoutesByParentId2(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => ({\n    ...route,\n    children: createRoutes(manifest, route.id, routesByParentId)\n  }));\n}\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let commonRoute = {\n      // Always include root due to default boundaries\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n      id: route.id,\n      path: route.path,\n      // Need to use RR's version in the param typed here to permit the optional\n      // context even though we know it'll always be provided in remix\n      loader: route.module.loader ? async (args) => {\n        if (args.request.headers.has(\"X-React-Router-Prerender-Data\")) {\n          const preRenderedData = args.request.headers.get(\n            \"X-React-Router-Prerender-Data\"\n          );\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\n          invariant3(encoded, \"Missing prerendered data for route\");\n          let uint8array = new TextEncoder().encode(encoded);\n          let stream = new ReadableStream({\n            start(controller) {\n              controller.enqueue(uint8array);\n              controller.close();\n            }\n          });\n          let decoded = await decodeViaTurboStream(stream, global);\n          let data2 = decoded.value;\n          invariant3(\n            data2 && route.id in data2,\n            \"Unable to decode prerendered data\"\n          );\n          let result = data2[route.id];\n          invariant3(\"data\" in result, \"Unable to process prerendered data\");\n          return result.data;\n        }\n        let val = await callRouteHandler(route.module.loader, args);\n        return val;\n      } : void 0,\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\n      handle: route.module.handle\n    };\n    return route.index ? {\n      index: true,\n      ...commonRoute\n    } : {\n      caseSensitive: route.caseSensitive,\n      children: createStaticHandlerDataRoutes(\n        manifest,\n        future,\n        route.id,\n        routesByParentId\n      ),\n      ...commonRoute\n    };\n  });\n}\n\n// lib/server-runtime/markup.ts\nvar ESCAPE_LOOKUP3 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml2(html) {\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\n}\n\n// lib/server-runtime/serverHandoff.ts\nfunction createServerHandoffString(serverHandoff) {\n  return escapeHtml2(JSON.stringify(serverHandoff));\n}\n\n// lib/server-runtime/dev.ts\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\nfunction setDevServerHooks(devServerHooks) {\n  globalThis[globalDevServerHooksKey] = devServerHooks;\n}\nfunction getDevServerHooks() {\n  return globalThis[globalDevServerHooksKey];\n}\n\n// lib/server-runtime/single-fetch.ts\nimport { encode } from \"turbo-stream\";\n\n// lib/server-runtime/headers.ts\nimport { splitCookiesString } from \"set-cookie-parser\";\nfunction getDocumentHeaders(build, context) {\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n  let errorHeaders;\n  if (boundaryIdx >= 0) {\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\n    context.matches.slice(boundaryIdx).some((match) => {\n      let id = match.route.id;\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\n        errorHeaders = actionHeaders[id];\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\n        errorHeaders = loaderHeaders[id];\n      }\n      return errorHeaders != null;\n    });\n  }\n  return matches.reduce((parentHeaders, match, idx) => {\n    let { id } = match.route;\n    let route = build.routes[id];\n    invariant3(route, `Route with id \"${id}\" not found in build`);\n    let routeModule = route.module;\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\n    let actionHeaders = context.actionHeaders[id] || new Headers();\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n    if (routeModule.headers == null) {\n      let headers2 = new Headers(parentHeaders);\n      if (includeErrorCookies) {\n        prependCookies(errorHeaders, headers2);\n      }\n      prependCookies(actionHeaders, headers2);\n      prependCookies(loaderHeaders, headers2);\n      return headers2;\n    }\n    let headers = new Headers(\n      routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\n        loaderHeaders,\n        parentHeaders,\n        actionHeaders,\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n      }) : routeModule.headers : void 0\n    );\n    if (includeErrorCookies) {\n      prependCookies(errorHeaders, headers);\n    }\n    prependCookies(actionHeaders, headers);\n    prependCookies(loaderHeaders, headers);\n    prependCookies(parentHeaders, headers);\n    return headers;\n  }, new Headers());\n}\nfunction prependCookies(parentHeaders, childHeaders) {\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n  if (parentSetCookieString) {\n    let cookies = splitCookiesString(parentSetCookieString);\n    let childCookies = new Set(childHeaders.getSetCookie());\n    cookies.forEach((cookie) => {\n      if (!childCookies.has(cookie)) {\n        childHeaders.append(\"Set-Cookie\", cookie);\n      }\n    });\n  }\n}\n\n// lib/server-runtime/single-fetch.ts\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nfunction getSingleFetchDataStrategy2({\n  isActionDataRequest,\n  loadRouteIds\n} = {}) {\n  return async ({ request, matches }) => {\n    if (isActionDataRequest && request.method === \"GET\") {\n      return {};\n    }\n    let matchesToLoad = loadRouteIds ? matches.filter((m) => loadRouteIds.includes(m.route.id)) : matches;\n    let results = await Promise.all(\n      matchesToLoad.map((match) => match.resolve())\n    );\n    return results.reduce(\n      (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n      {}\n    );\n  };\n}\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...request.body ? { duplex: \"half\" } : void 0\n    });\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      dataStrategy: getSingleFetchDataStrategy2({\n        isActionDataRequest: true\n      })\n    });\n    if (isResponse(result)) {\n      return {\n        result: getSingleFetchRedirect(\n          result.status,\n          result.headers,\n          build.basename\n        ),\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    let context = result;\n    let headers = getDocumentHeaders(build, context);\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n      return {\n        result: getSingleFetchRedirect(\n          context.statusCode,\n          headers,\n          build.basename\n        ),\n        headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    if (context.errors) {\n      Object.values(context.errors).forEach((err) => {\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let singleFetchResult;\n    if (context.errors) {\n      singleFetchResult = { error: Object.values(context.errors)[0] };\n    } else {\n      singleFetchResult = { data: Object.values(context.actionData || {})[0] };\n    }\n    return {\n      result: singleFetchResult,\n      headers,\n      status: context.statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    return {\n      result: { error },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let loadRouteIds = new URL(request.url).searchParams.get(\"_routes\")?.split(\",\") || void 0;\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      dataStrategy: getSingleFetchDataStrategy2({\n        loadRouteIds\n      })\n    });\n    if (isResponse(result)) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n            result.status,\n            result.headers,\n            build.basename\n          )\n        },\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    let context = result;\n    let headers = getDocumentHeaders(build, context);\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n            context.statusCode,\n            headers,\n            build.basename\n          )\n        },\n        headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    if (context.errors) {\n      Object.values(context.errors).forEach((err) => {\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let results = {};\n    let loadedMatches = loadRouteIds ? context.matches.filter(\n      (m) => m.route.loader && loadRouteIds.includes(m.route.id)\n    ) : context.matches;\n    loadedMatches.forEach((m) => {\n      let { id } = m.route;\n      if (context.errors && context.errors.hasOwnProperty(id)) {\n        results[id] = { error: context.errors[id] };\n      } else if (context.loaderData.hasOwnProperty(id)) {\n        results[id] = { data: context.loaderData[id] };\n      }\n    });\n    return {\n      result: results,\n      headers,\n      status: context.statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    return {\n      result: { root: { error } },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nfunction getSingleFetchRedirect(status, headers, basename) {\n  let redirect2 = headers.get(\"Location\");\n  if (basename) {\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\n  }\n  return {\n    redirect: redirect2,\n    status,\n    revalidate: (\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n      // detail of ?_data requests as our way to tell the front end to revalidate when\n      // we didn't have a response body to include that information in.\n      // With single fetch, we tell the front end via this revalidate boolean field.\n      // However, we're respecting it for now because it may be something folks have\n      // used in their own responses\n      // TODO(v3): Consider removing or making this official public API\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\n    ),\n    reload: headers.has(\"X-Remix-Reload-Document\"),\n    replace: headers.has(\"X-Remix-Replace\")\n  };\n}\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  let timeoutId = setTimeout(\n    () => controller.abort(new Error(\"Server Timeout\")),\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\n  );\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data2, {\n    signal: controller.signal,\n    plugins: [\n      (value) => {\n        if (value instanceof Error) {\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\n          return [\"SanitizedError\", name, message, stack];\n        }\n        if (value instanceof ErrorResponseImpl) {\n          let { data: data3, status, statusText } = value;\n          return [\"ErrorResponse\", data3, status, statusText];\n        }\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n        }\n      }\n    ],\n    postPlugins: [\n      (value) => {\n        if (!value) return;\n        if (typeof value !== \"object\") return;\n        return [\n          \"SingleFetchClassInstance\",\n          Object.fromEntries(Object.entries(value))\n        ];\n      },\n      () => [\"SingleFetchFallback\"]\n    ]\n  });\n}\n\n// lib/server-runtime/server.ts\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205, 304]);\nfunction derive(build, mode) {\n  let routes = createRoutes(build.routes);\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\n  let staticHandler = createStaticHandler(dataRoutes, {\n    basename: build.basename\n  });\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\n      console.error(\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        isRouteErrorResponse(error) && error.error ? error.error : error\n      );\n    }\n  });\n  return {\n    routes,\n    dataRoutes,\n    serverMode,\n    staticHandler,\n    errorHandler\n  };\n}\nvar createRequestHandler = (build, mode) => {\n  let _build;\n  let routes;\n  let serverMode;\n  let staticHandler;\n  let errorHandler;\n  return async function requestHandler(request, loadContext = {}) {\n    _build = typeof build === \"function\" ? await build() : build;\n    if (typeof build === \"function\") {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    }\n    let url = new URL(request.url);\n    let normalizedPath = url.pathname.replace(/\\.data$/, \"\").replace(/^\\/_root$/, \"/\");\n    if (normalizedPath !== \"/\" && normalizedPath.endsWith(\"/\")) {\n      normalizedPath = normalizedPath.slice(0, -1);\n    }\n    let params = {};\n    let handleError = (error) => {\n      if (mode === \"development\" /* Development */) {\n        getDevServerHooks()?.processRequestError?.(error);\n      }\n      errorHandler(error, {\n        context: loadContext,\n        params,\n        request\n      });\n    };\n    if (!_build.ssr) {\n      if (_build.prerender.length === 0) {\n        request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\n        if (url.pathname.endsWith(\".data\")) {\n          errorHandler(\n            new ErrorResponseImpl(\n              404,\n              \"Not Found\",\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\n            ),\n            {\n              context: loadContext,\n              params,\n              request\n            }\n          );\n          return new Response(\"Not Found\", {\n            status: 404,\n            statusText: \"Not Found\"\n          });\n        } else {\n          request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\n        }\n      }\n    }\n    let manifestUrl = `${_build.basename ?? \"/\"}/__manifest`.replace(\n      /\\/+/g,\n      \"/\"\n    );\n    if (url.pathname === manifestUrl) {\n      try {\n        let res = await handleManifestRequest(_build, routes, url);\n        return res;\n      } catch (e) {\n        handleError(e);\n        return new Response(\"Unknown Server Error\", { status: 500 });\n      }\n    }\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\n    if (matches && matches.length > 0) {\n      Object.assign(params, matches[0].params);\n    }\n    let response;\n    if (url.pathname.endsWith(\".data\")) {\n      let handlerUrl = new URL(request.url);\n      handlerUrl.pathname = normalizedPath;\n      let singleFetchMatches = matchServerRoutes(\n        routes,\n        handlerUrl.pathname,\n        _build.basename\n      );\n      response = await handleSingleFetchRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        handlerUrl,\n        loadContext,\n        handleError\n      );\n      if (_build.entry.module.handleDataRequest) {\n        response = await _build.entry.module.handleDataRequest(response, {\n          context: loadContext,\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\n          request\n        });\n        if (isRedirectResponse(response)) {\n          let result = getSingleFetchRedirect(\n            response.status,\n            response.headers,\n            _build.basename\n          );\n          if (request.method === \"GET\") {\n            result = {\n              [SingleFetchRedirectSymbol]: result\n            };\n          }\n          let headers = new Headers(response.headers);\n          headers.set(\"Content-Type\", \"text/x-script\");\n          return new Response(\n            encodeViaTurboStream(\n              result,\n              request.signal,\n              _build.entry.module.streamTimeout,\n              serverMode\n            ),\n            {\n              status: SINGLE_FETCH_REDIRECT_STATUS,\n              headers\n            }\n          );\n        }\n      }\n    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\n      response = await handleResourceRequest(\n        serverMode,\n        staticHandler,\n        matches.slice(-1)[0].route.id,\n        request,\n        loadContext,\n        handleError\n      );\n    } else {\n      let criticalCss = mode === \"development\" /* Development */ ? await getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;\n      response = await handleDocumentRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        loadContext,\n        handleError,\n        criticalCss\n      );\n    }\n    if (request.method === \"HEAD\") {\n      return new Response(null, {\n        headers: response.headers,\n        status: response.status,\n        statusText: response.statusText\n      });\n    }\n    return response;\n  };\n};\nasync function handleManifestRequest(build, routes, url) {\n  let patches = {};\n  if (url.searchParams.has(\"p\")) {\n    for (let path of url.searchParams.getAll(\"p\")) {\n      let matches = matchServerRoutes(routes, path, build.basename);\n      if (matches) {\n        for (let match of matches) {\n          let routeId = match.route.id;\n          let route = build.assets.routes[routeId];\n          if (route) {\n            patches[routeId] = route;\n          }\n        }\n      }\n    }\n    return Response.json(patches, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\n      }\n    });\n  }\n  return new Response(\"Invalid Request\", { status: 400 });\n}\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\n  let { result, headers, status } = request.method !== \"GET\" ? await singleFetchAction(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  ) : await singleFetchLoaders(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  );\n  let resultHeaders = new Headers(headers);\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\n  if (NO_BODY_STATUS_CODES.has(status)) {\n    return new Response(null, { status, headers: resultHeaders });\n  }\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\n  return new Response(\n    encodeViaTurboStream(\n      result,\n      request.signal,\n      build.entry.module.streamTimeout,\n      serverMode\n    ),\n    {\n      status: status || 200,\n      headers: resultHeaders\n    }\n  );\n}\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\n  let isSpaMode = request.headers.has(\"X-React-Router-SPA-Mode\");\n  let context;\n  try {\n    context = await staticHandler.query(request, {\n      requestContext: loadContext\n    });\n  } catch (error) {\n    handleError(error);\n    return new Response(null, { status: 500 });\n  }\n  if (isResponse(context)) {\n    return context;\n  }\n  let headers = getDocumentHeaders(build, context);\n  if (NO_BODY_STATUS_CODES.has(context.statusCode)) {\n    return new Response(null, { status: context.statusCode, headers });\n  }\n  if (context.errors) {\n    Object.values(context.errors).forEach((err) => {\n      if (!isRouteErrorResponse(err) || err.error) {\n        handleError(err);\n      }\n    });\n    context.errors = sanitizeErrors(context.errors, serverMode);\n  }\n  let state = {\n    loaderData: context.loaderData,\n    actionData: context.actionData,\n    errors: serializeErrors2(context.errors, serverMode)\n  };\n  let entryContext = {\n    manifest: build.assets,\n    routeModules: createEntryRouteModules(build.routes),\n    staticHandlerContext: context,\n    criticalCss,\n    serverHandoffString: createServerHandoffString({\n      basename: build.basename,\n      criticalCss,\n      future: build.future,\n      ssr: build.ssr,\n      isSpaMode\n    }),\n    serverHandoffStream: encodeViaTurboStream(\n      state,\n      request.signal,\n      build.entry.module.streamTimeout,\n      serverMode\n    ),\n    renderMeta: {},\n    future: build.future,\n    ssr: build.ssr,\n    isSpaMode,\n    serializeError: (err) => serializeError(err, serverMode)\n  };\n  let handleDocumentRequestFunction = build.entry.module.default;\n  try {\n    return await handleDocumentRequestFunction(\n      request,\n      context.statusCode,\n      headers,\n      entryContext,\n      loadContext\n    );\n  } catch (error) {\n    handleError(error);\n    let errorForSecondRender = error;\n    if (isResponse(error)) {\n      try {\n        let data2 = await unwrapResponse(error);\n        errorForSecondRender = new ErrorResponseImpl(\n          error.status,\n          error.statusText,\n          data2\n        );\n      } catch (e) {\n      }\n    }\n    context = getStaticContextFromError(\n      staticHandler.dataRoutes,\n      context,\n      errorForSecondRender\n    );\n    if (context.errors) {\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let state2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors2(context.errors, serverMode)\n    };\n    entryContext = {\n      ...entryContext,\n      staticHandlerContext: context,\n      serverHandoffString: createServerHandoffString({\n        basename: build.basename,\n        future: build.future,\n        ssr: build.ssr,\n        isSpaMode\n      }),\n      serverHandoffStream: encodeViaTurboStream(\n        state2,\n        request.signal,\n        build.entry.module.streamTimeout,\n        serverMode\n      ),\n      renderMeta: {}\n    };\n    try {\n      return await handleDocumentRequestFunction(\n        request,\n        context.statusCode,\n        headers,\n        entryContext,\n        loadContext\n      );\n    } catch (error2) {\n      handleError(error2);\n      return returnLastResortErrorResponse(error2, serverMode);\n    }\n  }\n}\nasync function handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext\n    });\n    if (isResponse(response)) {\n      return response;\n    }\n    if (typeof response === \"string\") {\n      return new Response(response);\n    }\n    return Response.json(response);\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    handleError(error);\n    return returnLastResortErrorResponse(error, serverMode);\n  }\n}\nfunction errorResponseToJson(errorResponse, serverMode) {\n  return Response.json(\n    serializeError(\n      // @ts-expect-error This is \"private\" from users but intended for internal use\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\n      serverMode\n    ),\n    {\n      status: errorResponse.status,\n      statusText: errorResponse.statusText,\n      headers: {\n        \"X-Remix-Error\": \"yes\"\n      }\n    }\n  );\n}\nfunction returnLastResortErrorResponse(error, serverMode) {\n  let message = \"Unexpected Server Error\";\n  if (serverMode !== \"production\" /* Production */) {\n    message += `\n\n${String(error)}`;\n  }\n  return new Response(message, {\n    status: 500,\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  });\n}\nfunction unwrapResponse(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\n}\n\n// lib/server-runtime/sessions.ts\nfunction flash(name) {\n  return `__flash_${name}__`;\n}\nvar createSession = (initialData = {}, id = \"\") => {\n  let map = new Map(Object.entries(initialData));\n  return {\n    get id() {\n      return id;\n    },\n    get data() {\n      return Object.fromEntries(map);\n    },\n    has(name) {\n      return map.has(name) || map.has(flash(name));\n    },\n    get(name) {\n      if (map.has(name)) return map.get(name);\n      let flashName = flash(name);\n      if (map.has(flashName)) {\n        let value = map.get(flashName);\n        map.delete(flashName);\n        return value;\n      }\n      return void 0;\n    },\n    set(name, value) {\n      map.set(name, value);\n    },\n    flash(name, value) {\n      map.set(flash(name), value);\n    },\n    unset(name) {\n      map.delete(name);\n    }\n  };\n};\nvar isSession = (object) => {\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nfunction createSessionStorage({\n  cookie: cookieArg,\n  createData,\n  readData,\n  updateData,\n  deleteData\n}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\n      let data2 = id && await readData(id);\n      return createSession(data2 || {}, id || \"\");\n    },\n    async commitSession(session, options) {\n      let { id, data: data2 } = session;\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\n      if (id) {\n        await updateData(id, data2, expires);\n      } else {\n        id = await createData(data2, expires);\n      }\n      return cookie.serialize(id, options);\n    },\n    async destroySession(session, options) {\n      await deleteData(session.id);\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\nfunction warnOnceAboutSigningSessionCookie(cookie) {\n  warnOnce(\n    cookie.isSigned,\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`\n  );\n}\n\n// lib/server-runtime/sessions/cookieStorage.ts\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      return createSession(\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\n      );\n    },\n    async commitSession(session, options) {\n      let serializedCookie = await cookie.serialize(session.data, options);\n      if (serializedCookie.length > 4096) {\n        throw new Error(\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\n        );\n      }\n      return serializedCookie;\n    },\n    async destroySession(_session, options) {\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\n\n// lib/server-runtime/sessions/memoryStorage.ts\nfunction createMemorySessionStorage({ cookie } = {}) {\n  let map = /* @__PURE__ */ new Map();\n  return createSessionStorage({\n    cookie,\n    async createData(data2, expires) {\n      let id = Math.random().toString(36).substring(2, 10);\n      map.set(id, { data: data2, expires });\n      return id;\n    },\n    async readData(id) {\n      if (map.has(id)) {\n        let { data: data2, expires } = map.get(id);\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data2;\n        }\n        if (expires) map.delete(id);\n      }\n      return null;\n    },\n    async updateData(id, data2, expires) {\n      map.set(id, { data: data2, expires });\n    },\n    async deleteData(id) {\n      map.delete(id);\n    }\n  });\n}\n\n// lib/href.ts\nfunction href(path, ...args) {\n  let params = args[0];\n  return path.split(\"/\").map((segment) => {\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\n    if (!match) return segment;\n    const param = match[1];\n    const value = params ? params[param] : void 0;\n    const isRequired = match[2] === void 0;\n    if (isRequired && value === void 0) {\n      throw Error(\n        `Path '${path}' requires param '${param}' but it was not provided`\n      );\n    }\n    return value;\n  }).filter((segment) => segment !== void 0).join(\"/\");\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors2(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  mapRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  createSearchParams,\n  SingleFetchRedirectSymbol,\n  getSingleFetchDataStrategy,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  FrameworkContext,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2 as createStaticHandler,\n  createStaticRouter,\n  ServerRouter,\n  createRoutesStub,\n  createCookie,\n  isCookie,\n  ServerMode,\n  setDevServerHooks,\n  createRequestHandler,\n  createSession,\n  isSession,\n  createSessionStorage,\n  createCookieSessionStorage,\n  createMemorySessionStorage,\n  href,\n  deserializeErrors2 as deserializeErrors\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = exports.decode = void 0;\nconst flatten_js_1 = require(\"./flatten.js\");\nconst unflatten_js_1 = require(\"./unflatten.js\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function decode(readable, options) {\n    const { plugins } = options ?? {};\n    const done = new utils_js_1.Deferred();\n    const reader = readable\n        .pipeThrough((0, utils_js_1.createLineSplittingTransform)())\n        .getReader();\n    const decoder = {\n        values: [],\n        hydrated: [],\n        deferred: {},\n        plugins,\n    };\n    const decoded = await decodeInitial.call(decoder, reader);\n    let donePromise = done.promise;\n    if (decoded.done) {\n        done.resolve();\n    }\n    else {\n        donePromise = decodeDeferred\n            .call(decoder, reader)\n            .then(done.resolve)\n            .catch((reason) => {\n            for (const deferred of Object.values(decoder.deferred)) {\n                deferred.reject(reason);\n            }\n            done.reject(reason);\n        });\n    }\n    return {\n        done: donePromise.then(() => reader.closed),\n        value: decoded.value,\n    };\n}\nexports.decode = decode;\nasync function decodeInitial(reader) {\n    const read = await reader.read();\n    if (!read.value) {\n        throw new SyntaxError();\n    }\n    let line;\n    try {\n        line = JSON.parse(read.value);\n    }\n    catch (reason) {\n        throw new SyntaxError();\n    }\n    return {\n        done: read.done,\n        value: unflatten_js_1.unflatten.call(this, line),\n    };\n}\nasync function decodeDeferred(reader) {\n    let read = await reader.read();\n    while (!read.done) {\n        if (!read.value)\n            continue;\n        const line = read.value;\n        switch (line[0]) {\n            case utils_js_1.TYPE_PROMISE: {\n                const colonIndex = line.indexOf(\":\");\n                const deferredId = Number(line.slice(1, colonIndex));\n                const deferred = this.deferred[deferredId];\n                if (!deferred) {\n                    throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                }\n                const lineData = line.slice(colonIndex + 1);\n                let jsonLine;\n                try {\n                    jsonLine = JSON.parse(lineData);\n                }\n                catch (reason) {\n                    throw new SyntaxError();\n                }\n                const value = unflatten_js_1.unflatten.call(this, jsonLine);\n                deferred.resolve(value);\n                break;\n            }\n            case utils_js_1.TYPE_ERROR: {\n                const colonIndex = line.indexOf(\":\");\n                const deferredId = Number(line.slice(1, colonIndex));\n                const deferred = this.deferred[deferredId];\n                if (!deferred) {\n                    throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                }\n                const lineData = line.slice(colonIndex + 1);\n                let jsonLine;\n                try {\n                    jsonLine = JSON.parse(lineData);\n                }\n                catch (reason) {\n                    throw new SyntaxError();\n                }\n                const value = unflatten_js_1.unflatten.call(this, jsonLine);\n                deferred.reject(value);\n                break;\n            }\n            default:\n                throw new SyntaxError();\n        }\n        read = await reader.read();\n    }\n}\nfunction encode(input, options) {\n    const { plugins, postPlugins, signal } = options ?? {};\n    const encoder = {\n        deferred: {},\n        index: 0,\n        indices: new Map(),\n        stringified: [],\n        plugins,\n        postPlugins,\n        signal,\n    };\n    const textEncoder = new TextEncoder();\n    let lastSentIndex = 0;\n    const readable = new ReadableStream({\n        async start(controller) {\n            const id = flatten_js_1.flatten.call(encoder, input);\n            if (Array.isArray(id)) {\n                throw new Error(\"This should never happen\");\n            }\n            if (id < 0) {\n                controller.enqueue(textEncoder.encode(`${id}\\n`));\n            }\n            else {\n                controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(\",\")}]\\n`));\n                lastSentIndex = encoder.stringified.length - 1;\n            }\n            const seenPromises = new WeakSet();\n            while (Object.keys(encoder.deferred).length > 0) {\n                for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n                    if (seenPromises.has(deferred))\n                        continue;\n                    seenPromises.add((encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal)\n                        .then((resolved) => {\n                        const id = flatten_js_1.flatten.call(encoder, resolved);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[[\"${utils_js_1.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        }\n                        else if (id < 0) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:${id}\\n`));\n                        }\n                        else {\n                            const values = encoder.stringified\n                                .slice(lastSentIndex + 1)\n                                .join(\",\");\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    }, (reason) => {\n                        if (!reason ||\n                            typeof reason !== \"object\" ||\n                            !(reason instanceof Error)) {\n                            reason = new Error(\"An unknown error occurred\");\n                        }\n                        const id = flatten_js_1.flatten.call(encoder, reason);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[[\"${utils_js_1.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        }\n                        else if (id < 0) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:${id}\\n`));\n                        }\n                        else {\n                            const values = encoder.stringified\n                                .slice(lastSentIndex + 1)\n                                .join(\",\");\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    })\n                        .finally(() => {\n                        delete encoder.deferred[Number(deferredId)];\n                    })));\n                }\n                await Promise.race(Object.values(encoder.deferred));\n            }\n            await Promise.all(Object.values(encoder.deferred));\n            controller.close();\n        },\n    });\n    return readable;\n}\nexports.encode = encode;\nfunction raceSignal(promise, signal) {\n    if (!signal)\n        return promise;\n    if (signal.aborted)\n        return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n    const abort = new Promise((resolve, reject) => {\n        signal.addEventListener(\"abort\", (event) => {\n            reject(signal.reason || new Error(\"Signal was aborted.\"));\n        });\n        promise.then(resolve).catch(reject);\n    });\n    abort.catch(() => { });\n    return Promise.race([abort, promise]);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flatten = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nfunction flatten(input) {\n    const { indices } = this;\n    const existing = indices.get(input);\n    if (existing)\n        return [existing];\n    if (input === undefined)\n        return utils_js_1.UNDEFINED;\n    if (input === null)\n        return utils_js_1.NULL;\n    if (Number.isNaN(input))\n        return utils_js_1.NAN;\n    if (input === Number.POSITIVE_INFINITY)\n        return utils_js_1.POSITIVE_INFINITY;\n    if (input === Number.NEGATIVE_INFINITY)\n        return utils_js_1.NEGATIVE_INFINITY;\n    if (input === 0 && 1 / input < 0)\n        return utils_js_1.NEGATIVE_ZERO;\n    const index = this.index++;\n    indices.set(input, index);\n    stringify.call(this, input, index);\n    return index;\n}\nexports.flatten = flatten;\nfunction stringify(input, index) {\n    const { deferred, plugins, postPlugins } = this;\n    const str = this.stringified;\n    const stack = [[input, index]];\n    while (stack.length > 0) {\n        const [input, index] = stack.pop();\n        const partsForObj = (obj) => Object.keys(obj)\n            .map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`)\n            .join(\",\");\n        let error = null;\n        switch (typeof input) {\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                str[index] = JSON.stringify(input);\n                break;\n            case \"bigint\":\n                str[index] = `[\"${utils_js_1.TYPE_BIGINT}\",\"${input}\"]`;\n                break;\n            case \"symbol\": {\n                const keyFor = Symbol.keyFor(input);\n                if (!keyFor) {\n                    error = new Error(\"Cannot encode symbol unless created with Symbol.for()\");\n                }\n                else {\n                    str[index] = `[\"${utils_js_1.TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n                }\n                break;\n            }\n            case \"object\": {\n                if (!input) {\n                    str[index] = `${utils_js_1.NULL}`;\n                    break;\n                }\n                const isArray = Array.isArray(input);\n                let pluginHandled = false;\n                if (!isArray && plugins) {\n                    for (const plugin of plugins) {\n                        const pluginResult = plugin(input);\n                        if (Array.isArray(pluginResult)) {\n                            pluginHandled = true;\n                            const [pluginIdentifier, ...rest] = pluginResult;\n                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                            if (rest.length > 0) {\n                                str[index] += `,${rest\n                                    .map((v) => flatten.call(this, v))\n                                    .join(\",\")}`;\n                            }\n                            str[index] += \"]\";\n                            break;\n                        }\n                    }\n                }\n                if (!pluginHandled) {\n                    let result = isArray ? \"[\" : \"{\";\n                    if (isArray) {\n                        for (let i = 0; i < input.length; i++)\n                            result +=\n                                (i ? \",\" : \"\") +\n                                    (i in input ? flatten.call(this, input[i]) : utils_js_1.HOLE);\n                        str[index] = `${result}]`;\n                    }\n                    else if (input instanceof Date) {\n                        str[index] = `[\"${utils_js_1.TYPE_DATE}\",${input.getTime()}]`;\n                    }\n                    else if (input instanceof URL) {\n                        str[index] = `[\"${utils_js_1.TYPE_URL}\",${JSON.stringify(input.href)}]`;\n                    }\n                    else if (input instanceof RegExp) {\n                        str[index] = `[\"${utils_js_1.TYPE_REGEXP}\",${JSON.stringify(input.source)},${JSON.stringify(input.flags)}]`;\n                    }\n                    else if (input instanceof Set) {\n                        if (input.size > 0) {\n                            str[index] = `[\"${utils_js_1.TYPE_SET}\",${[...input]\n                                .map((val) => flatten.call(this, val))\n                                .join(\",\")}]`;\n                        }\n                        else {\n                            str[index] = `[\"${utils_js_1.TYPE_SET}\"]`;\n                        }\n                    }\n                    else if (input instanceof Map) {\n                        if (input.size > 0) {\n                            str[index] = `[\"${utils_js_1.TYPE_MAP}\",${[...input]\n                                .flatMap(([k, v]) => [\n                                flatten.call(this, k),\n                                flatten.call(this, v),\n                            ])\n                                .join(\",\")}]`;\n                        }\n                        else {\n                            str[index] = `[\"${utils_js_1.TYPE_MAP}\"]`;\n                        }\n                    }\n                    else if (input instanceof Promise) {\n                        str[index] = `[\"${utils_js_1.TYPE_PROMISE}\",${index}]`;\n                        deferred[index] = input;\n                    }\n                    else if (input instanceof Error) {\n                        str[index] = `[\"${utils_js_1.TYPE_ERROR}\",${JSON.stringify(input.message)}`;\n                        if (input.name !== \"Error\") {\n                            str[index] += `,${JSON.stringify(input.name)}`;\n                        }\n                        str[index] += \"]\";\n                    }\n                    else if (Object.getPrototypeOf(input) === null) {\n                        str[index] = `[\"${utils_js_1.TYPE_NULL_OBJECT}\",{${partsForObj(input)}}]`;\n                    }\n                    else if (isPlainObject(input)) {\n                        str[index] = `{${partsForObj(input)}}`;\n                    }\n                    else {\n                        error = new Error(\"Cannot encode object with prototype\");\n                    }\n                }\n                break;\n            }\n            default: {\n                const isArray = Array.isArray(input);\n                let pluginHandled = false;\n                if (!isArray && plugins) {\n                    for (const plugin of plugins) {\n                        const pluginResult = plugin(input);\n                        if (Array.isArray(pluginResult)) {\n                            pluginHandled = true;\n                            const [pluginIdentifier, ...rest] = pluginResult;\n                            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                            if (rest.length > 0) {\n                                str[index] += `,${rest\n                                    .map((v) => flatten.call(this, v))\n                                    .join(\",\")}`;\n                            }\n                            str[index] += \"]\";\n                            break;\n                        }\n                    }\n                }\n                if (!pluginHandled) {\n                    error = new Error(\"Cannot encode function or unexpected type\");\n                }\n            }\n        }\n        if (error) {\n            let pluginHandled = false;\n            if (postPlugins) {\n                for (const plugin of postPlugins) {\n                    const pluginResult = plugin(input);\n                    if (Array.isArray(pluginResult)) {\n                        pluginHandled = true;\n                        const [pluginIdentifier, ...rest] = pluginResult;\n                        str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n                        if (rest.length > 0) {\n                            str[index] += `,${rest\n                                .map((v) => flatten.call(this, v))\n                                .join(\",\")}`;\n                        }\n                        str[index] += \"]\";\n                        break;\n                    }\n                }\n            }\n            if (!pluginHandled) {\n                throw error;\n            }\n        }\n    }\n}\nconst objectProtoNames = Object.getOwnPropertyNames(Object.prototype)\n    .sort()\n    .join(\"\\0\");\nfunction isPlainObject(thing) {\n    const proto = Object.getPrototypeOf(thing);\n    return (proto === Object.prototype ||\n        proto === null ||\n        Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLineSplittingTransform = exports.Deferred = exports.TYPE_PREVIOUS_RESOLVED = exports.TYPE_URL = exports.TYPE_SYMBOL = exports.TYPE_SET = exports.TYPE_REGEXP = exports.TYPE_PROMISE = exports.TYPE_NULL_OBJECT = exports.TYPE_MAP = exports.TYPE_ERROR = exports.TYPE_DATE = exports.TYPE_BIGINT = exports.UNDEFINED = exports.POSITIVE_INFINITY = exports.NULL = exports.NEGATIVE_ZERO = exports.NEGATIVE_INFINITY = exports.NAN = exports.HOLE = void 0;\nexports.HOLE = -1;\nexports.NAN = -2;\nexports.NEGATIVE_INFINITY = -3;\nexports.NEGATIVE_ZERO = -4;\nexports.NULL = -5;\nexports.POSITIVE_INFINITY = -6;\nexports.UNDEFINED = -7;\nexports.TYPE_BIGINT = \"B\";\nexports.TYPE_DATE = \"D\";\nexports.TYPE_ERROR = \"E\";\nexports.TYPE_MAP = \"M\";\nexports.TYPE_NULL_OBJECT = \"N\";\nexports.TYPE_PROMISE = \"P\";\nexports.TYPE_REGEXP = \"R\";\nexports.TYPE_SET = \"S\";\nexports.TYPE_SYMBOL = \"Y\";\nexports.TYPE_URL = \"U\";\nexports.TYPE_PREVIOUS_RESOLVED = \"Z\";\nclass Deferred {\n    promise;\n    resolve;\n    reject;\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexports.Deferred = Deferred;\nfunction createLineSplittingTransform() {\n    const decoder = new TextDecoder();\n    let leftover = \"\";\n    return new TransformStream({\n        transform(chunk, controller) {\n            const str = decoder.decode(chunk, { stream: true });\n            const parts = (leftover + str).split(\"\\n\");\n            // The last part might be a partial line, so keep it for the next chunk.\n            leftover = parts.pop() || \"\";\n            for (const part of parts) {\n                controller.enqueue(part);\n            }\n        },\n        flush(controller) {\n            // If there's any leftover data, enqueue it before closing.\n            if (leftover) {\n                controller.enqueue(leftover);\n            }\n        },\n    });\n}\nexports.createLineSplittingTransform = createLineSplittingTransform;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unflatten = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst globalObj = (typeof window !== \"undefined\"\n    ? window\n    : typeof globalThis !== \"undefined\"\n        ? globalThis\n        : undefined);\nfunction unflatten(parsed) {\n    const { hydrated, values } = this;\n    if (typeof parsed === \"number\")\n        return hydrate.call(this, parsed);\n    if (!Array.isArray(parsed) || !parsed.length)\n        throw new SyntaxError();\n    const startIndex = values.length;\n    for (const value of parsed) {\n        values.push(value);\n    }\n    hydrated.length = values.length;\n    return hydrate.call(this, startIndex);\n}\nexports.unflatten = unflatten;\nfunction hydrate(index) {\n    const { hydrated, values, deferred, plugins } = this;\n    let result;\n    const stack = [\n        [\n            index,\n            (v) => {\n                result = v;\n            },\n        ],\n    ];\n    let postRun = [];\n    while (stack.length > 0) {\n        const [index, set] = stack.pop();\n        switch (index) {\n            case utils_js_1.UNDEFINED:\n                set(undefined);\n                continue;\n            case utils_js_1.NULL:\n                set(null);\n                continue;\n            case utils_js_1.NAN:\n                set(NaN);\n                continue;\n            case utils_js_1.POSITIVE_INFINITY:\n                set(Infinity);\n                continue;\n            case utils_js_1.NEGATIVE_INFINITY:\n                set(-Infinity);\n                continue;\n            case utils_js_1.NEGATIVE_ZERO:\n                set(-0);\n                continue;\n        }\n        if (hydrated[index]) {\n            set(hydrated[index]);\n            continue;\n        }\n        const value = values[index];\n        if (!value || typeof value !== \"object\") {\n            hydrated[index] = value;\n            set(value);\n            continue;\n        }\n        if (Array.isArray(value)) {\n            if (typeof value[0] === \"string\") {\n                const [type, b, c] = value;\n                switch (type) {\n                    case utils_js_1.TYPE_DATE:\n                        set((hydrated[index] = new Date(b)));\n                        continue;\n                    case utils_js_1.TYPE_URL:\n                        set((hydrated[index] = new URL(b)));\n                        continue;\n                    case utils_js_1.TYPE_BIGINT:\n                        set((hydrated[index] = BigInt(b)));\n                        continue;\n                    case utils_js_1.TYPE_REGEXP:\n                        set((hydrated[index] = new RegExp(b, c)));\n                        continue;\n                    case utils_js_1.TYPE_SYMBOL:\n                        set((hydrated[index] = Symbol.for(b)));\n                        continue;\n                    case utils_js_1.TYPE_SET:\n                        const newSet = new Set();\n                        hydrated[index] = newSet;\n                        for (let i = 1; i < value.length; i++)\n                            stack.push([\n                                value[i],\n                                (v) => {\n                                    newSet.add(v);\n                                },\n                            ]);\n                        set(newSet);\n                        continue;\n                    case utils_js_1.TYPE_MAP:\n                        const map = new Map();\n                        hydrated[index] = map;\n                        for (let i = 1; i < value.length; i += 2) {\n                            const r = [];\n                            stack.push([\n                                value[i + 1],\n                                (v) => {\n                                    r[1] = v;\n                                },\n                            ]);\n                            stack.push([\n                                value[i],\n                                (k) => {\n                                    r[0] = k;\n                                },\n                            ]);\n                            postRun.push(() => {\n                                map.set(r[0], r[1]);\n                            });\n                        }\n                        set(map);\n                        continue;\n                    case utils_js_1.TYPE_NULL_OBJECT:\n                        const obj = Object.create(null);\n                        hydrated[index] = obj;\n                        for (const key of Object.keys(b).reverse()) {\n                            const r = [];\n                            stack.push([\n                                b[key],\n                                (v) => {\n                                    r[1] = v;\n                                },\n                            ]);\n                            stack.push([\n                                Number(key.slice(1)),\n                                (k) => {\n                                    r[0] = k;\n                                },\n                            ]);\n                            postRun.push(() => {\n                                obj[r[0]] = r[1];\n                            });\n                        }\n                        set(obj);\n                        continue;\n                    case utils_js_1.TYPE_PROMISE:\n                        if (hydrated[b]) {\n                            set((hydrated[index] = hydrated[b]));\n                        }\n                        else {\n                            const d = new utils_js_1.Deferred();\n                            deferred[b] = d;\n                            set((hydrated[index] = d.promise));\n                        }\n                        continue;\n                    case utils_js_1.TYPE_ERROR:\n                        const [, message, errorType] = value;\n                        let error = errorType && globalObj && globalObj[errorType]\n                            ? new globalObj[errorType](message)\n                            : new Error(message);\n                        hydrated[index] = error;\n                        set(error);\n                        continue;\n                    case utils_js_1.TYPE_PREVIOUS_RESOLVED:\n                        set((hydrated[index] = hydrated[b]));\n                        continue;\n                    default:\n                        // Run plugins at the end so we have a chance to resolve primitives\n                        // without running into a loop\n                        if (Array.isArray(plugins)) {\n                            const r = [];\n                            const vals = value.slice(1);\n                            for (let i = 0; i < vals.length; i++) {\n                                const v = vals[i];\n                                stack.push([\n                                    v,\n                                    (v) => {\n                                        r[i] = v;\n                                    },\n                                ]);\n                            }\n                            postRun.push(() => {\n                                for (const plugin of plugins) {\n                                    const result = plugin(value[0], ...r);\n                                    if (result) {\n                                        set((hydrated[index] = result.value));\n                                        return;\n                                    }\n                                }\n                                throw new SyntaxError();\n                            });\n                            continue;\n                        }\n                        throw new SyntaxError();\n                }\n            }\n            else {\n                const array = [];\n                hydrated[index] = array;\n                for (let i = 0; i < value.length; i++) {\n                    const n = value[i];\n                    if (n !== utils_js_1.HOLE) {\n                        stack.push([\n                            n,\n                            (v) => {\n                                array[i] = v;\n                            },\n                        ]);\n                    }\n                }\n                set(array);\n                continue;\n            }\n        }\n        else {\n            const object = {};\n            hydrated[index] = object;\n            for (const key of Object.keys(value).reverse()) {\n                const r = [];\n                stack.push([\n                    value[key],\n                    (v) => {\n                        r[1] = v;\n                    },\n                ]);\n                stack.push([\n                    Number(key.slice(1)),\n                    (k) => {\n                        r[0] = k;\n                    },\n                ]);\n                postRun.push(() => {\n                    object[r[0]] = r[1];\n                });\n            }\n            set(object);\n            continue;\n        }\n    }\n    while (postRun.length > 0) {\n        postRun.pop()();\n    }\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (() => {\n    const C = function () { };\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2)\n        return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1)\n            break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    } while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index;\n    } while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while (index > min) {\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options)\n        return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) ||\n            !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\"\n            ? options.priority.toLowerCase()\n            : undefined;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\"\n            ? options.sameSite.toLowerCase()\n            : options.sameSite;\n        switch (sameSite) {\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n    if (str.indexOf(\"%\") === -1)\n        return str;\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n}\n//# sourceMappingURL=index.js.map","/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n","\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","Action2","ServerMode2","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1143dd7f04075183$export$ffb0004e005737fa","$1143dd7f04075183$export$34b9dba7ce09269b","$1143dd7f04075183$export$25062201e9e25d76","$1143dd7f04075183$var$REACT_ELEMENT_TYPE","Symbol","for","$1143dd7f04075183$var$jsxProd","type","config","maybeKey","key","propName","$$typeof","ref","props","$bd5028e33dce7343$export$dca3b0875bd9a954","$bd5028e33dce7343$export$16fa2f45be04daa8","$bd5028e33dce7343$export$ffb0004e005737fa","$bd5028e33dce7343$export$e2c29f18771995cb","$bd5028e33dce7343$export$221d75b3f55bb0bd","$bd5028e33dce7343$export$5f8d39834fd61797","$bd5028e33dce7343$export$74bf444e3cd11ea5","$bd5028e33dce7343$export$1ced07cd6b1985ce","$bd5028e33dce7343$export$3ba232387fd5d6dd","$bd5028e33dce7343$export$69a3209f1a06c04d","$bd5028e33dce7343$export$e530037191fcd5d7","$bd5028e33dce7343$export$fd42f52fd3ae1109","$bd5028e33dce7343$export$c8a8987d4410bf2d","$bd5028e33dce7343$export$7d1e3a5e95ceca43","$bd5028e33dce7343$export$257a8862b851cb5b","$bd5028e33dce7343$export$a8257692ac88316c","$bd5028e33dce7343$export$488013bae63b21da","$bd5028e33dce7343$export$7c73462e0d25e514","$bd5028e33dce7343$export$7568632d0d33d16d","$bd5028e33dce7343$export$f93f40ac0ca7e3a8","$bd5028e33dce7343$export$1f96ae73734a86cc","$bd5028e33dce7343$export$9a47ced3238df325","$bd5028e33dce7343$export$35808ee640e87ca7","$bd5028e33dce7343$export$fae74005e78b1a27","$bd5028e33dce7343$export$dc8fbce3eb94dc1e","$bd5028e33dce7343$export$6a7bc4e911dc01cf","$bd5028e33dce7343$export$6d9c69b0de29b591","$bd5028e33dce7343$export$f680877a34711e37","$bd5028e33dce7343$export$d5a552a76deda3c2","$bd5028e33dce7343$export$aaabe4eda9ed9969","$bd5028e33dce7343$export$e5c5a5f917a5871c","$bd5028e33dce7343$export$1538c33de8887b59","$bd5028e33dce7343$export$fca7f784ae7a249a","$bd5028e33dce7343$export$13e3392192263954","$bd5028e33dce7343$export$b8f5890fc79d6aca","$bd5028e33dce7343$export$60241385465d0a34","$bd5028e33dce7343$export$306c0aa65ff9ec16","$bd5028e33dce7343$export$7b286972b8d8ccbf","$bd5028e33dce7343$export$83d89fbfd8236492","$6qd2L","$bd5028e33dce7343$var$REACT_ELEMENT_TYPE","$bd5028e33dce7343$var$REACT_PORTAL_TYPE","$bd5028e33dce7343$var$REACT_FRAGMENT_TYPE","$bd5028e33dce7343$var$REACT_STRICT_MODE_TYPE","$bd5028e33dce7343$var$REACT_PROFILER_TYPE","$bd5028e33dce7343$var$REACT_CONSUMER_TYPE","$bd5028e33dce7343$var$REACT_CONTEXT_TYPE","$bd5028e33dce7343$var$REACT_FORWARD_REF_TYPE","$bd5028e33dce7343$var$REACT_SUSPENSE_TYPE","$bd5028e33dce7343$var$REACT_MEMO_TYPE","$bd5028e33dce7343$var$REACT_LAZY_TYPE","$bd5028e33dce7343$var$MAYBE_ITERATOR_SYMBOL","iterator","$bd5028e33dce7343$var$ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","$bd5028e33dce7343$var$assign","assign","$bd5028e33dce7343$var$emptyObject","$bd5028e33dce7343$var$Component","context","updater","refs","$bd5028e33dce7343$var$ComponentDummy","$bd5028e33dce7343$var$PureComponent","prototype","isReactComponent","setState","partialState","callback","forceUpdate","$bd5028e33dce7343$var$pureComponentPrototype","constructor","isPureReactComponent","$bd5028e33dce7343$var$isArrayImpl","Array","isArray","$bd5028e33dce7343$var$ReactSharedInternals","H","A","T","S","$bd5028e33dce7343$var$hasOwnProperty","hasOwnProperty","$bd5028e33dce7343$var$ReactElement","source","owner","$bd5028e33dce7343$var$isValidElement","object","$bd5028e33dce7343$var$userProvidedKeyEscapeRegex","$bd5028e33dce7343$var$getElementKey","element","index","escaperLookup","replace","match","toString","$bd5028e33dce7343$var$noop$1","$bd5028e33dce7343$var$mapChildren","children","func","result","count","$bd5028e33dce7343$var$mapIntoArray","array","escapedPrefix","nameSoFar","oldElement","newKey","maybeIterable","invokeCallback","_init","_payload","c","push","nextNamePrefix","i","length","next","done","value","then","$bd5028e33dce7343$var$resolveThenable","thenable","status","reason","fulfilledValue","error","String","keys","join","child","$bd5028e33dce7343$var$lazyInitializer","payload","_status","ctor","_result","moduleObject","default","$bd5028e33dce7343$var$reportGlobalError","reportError","ErrorEvent","event","bubbles","cancelable","message","dispatchEvent","emit","console","$bd5028e33dce7343$var$noop","map","forEach","forEachFunc","forEachContext","apply","arguments","toArray","only","fn","childArray","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","childrenLength","defaultProps","current","render","compare","scope","prevTransition","currentTransition","returnValue","onStartTransitionFinish","useCacheRefresh","usable","use","action","initialState","permalink","useActionState","deps","useCallback","Context","useContext","initialValue","useDeferredValue","create","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","passthrough","reducer","useOptimistic","initialArg","useReducer","useRef","useState","subscribe","getSnapshot","getServerSnapshot","useSyncExternalStore","useTransition","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","setTimeout","clearTimeout","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","concat","$4acf49f6c3e67aec$var$drainQueue","timeout","len","run","$4acf49f6c3e67aec$var$runClearTimeout","marker","$4acf49f6c3e67aec$var$Item","$4acf49f6c3e67aec$var$noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$a972dfa956833003$exports","$38eecd17912935e8$exports","encode","decode","$d1b31b0f03c5a789$exports","flatten","$54d317bdb58f6810$exports","$d1b31b0f03c5a789$var$flatten","input","indices","existing","undefined","UNDEFINED","NULL","Number","isNaN","NAN","POSITIVE_INFINITY","NEGATIVE_INFINITY","NEGATIVE_ZERO","$d1b31b0f03c5a789$var$stringify","deferred","plugins","postPlugins","str","stringified","stack","pop","partsForObj","obj","k","JSON","stringify","TYPE_BIGINT","keyFor","TYPE_SYMBOL","pluginHandled","plugin","pluginResult","pluginIdentifier","rest","HOLE","Date","TYPE_DATE","getTime","URL","TYPE_URL","href","RegExp","TYPE_REGEXP","flags","Set","size","TYPE_SET","val","Map","TYPE_MAP","flatMap","Promise","TYPE_PROMISE","TYPE_ERROR","getPrototypeOf","TYPE_NULL_OBJECT","$d1b31b0f03c5a789$var$isPlainObject","thing","proto","getOwnPropertyNames","sort","$d1b31b0f03c5a789$var$objectProtoNames","createLineSplittingTransform","Deferred","TYPE_PREVIOUS_RESOLVED","promise","resolve","reject","decoder","TextDecoder","leftover","TransformStream","transform","chunk","controller","stream","parts","split","part","enqueue","flush","$0eb00b0aa785b1a2$exports","unflatten","$0eb00b0aa785b1a2$var$globalObj","$0eb00b0aa785b1a2$var$hydrate","hydrated","values","postRun","NaN","Infinity","b","BigInt","newSet","add","r","reverse","slice","d","errorType","vals","SyntaxError","$38eecd17912935e8$var$decodeInitial","reader","line","read","parse","$38eecd17912935e8$var$decodeDeferred","jsonLine","colonIndex","indexOf","deferredId","lineData","parsed","startIndex","readable","options","pipeThrough","getReader","decoded","donePromise","catch","closed","signal","encoder","textEncoder","TextEncoder","lastSentIndex","ReadableStream","start","seenPromises","WeakSet","entries","has","$38eecd17912935e8$var$raceSignal","aborted","abort","addEventListener","race","resolved","finally","all","close","$70f23939d76c0480$exports","$70f23939d76c0480$var$NullObject","dec","$70f23939d76c0480$var$decode","eqIdx","colonIdx","endIdx","lastIndexOf","keyStartIdx","$70f23939d76c0480$var$startIndex","keyEndIdx","$70f23939d76c0480$var$endIndex","valStartIdx","valEndIdx","serialize","enc","encodeURIComponent","$70f23939d76c0480$var$cookieNameRegExp","test","TypeError","$70f23939d76c0480$var$cookieValueRegExp","maxAge","isInteger","domain","$70f23939d76c0480$var$domainValueRegExp","path","$70f23939d76c0480$var$pathValueRegExp","expires","$70f23939d76c0480$var$__toString","isFinite","valueOf","toUTCString","httpOnly","secure","partitioned","priority","toLowerCase","sameSite","C","max","charCodeAt","min","decodeURIComponent","$5638fb5bd871bb7d$exports","$5638fb5bd871bb7d$var$defaultParseOptions","decodeValues","silent","$5638fb5bd871bb7d$var$isNonEmptyString","trim","$5638fb5bd871bb7d$var$parseString","setCookieValue","nameValuePairStr","nameValueArr","filter","shift","cookie","sides","trimLeft","parseInt","$5638fb5bd871bb7d$var$parse","headers","getSetCookie","sch","find","warn","reduce","cookies","parseString","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","charAt","substring","$c5b33ec0dccca72b$import_meta","url","$c5b33ec0dccca72b$export$e19cd5f9376f8cee","$c5b33ec0dccca72b$export$f5708dca728d7177","$c5b33ec0dccca72b$var$warning","cond","$c5b33ec0dccca72b$export$fe53371bee54353d","pathname","search","hash","$c5b33ec0dccca72b$export$8ccf933b0513f8d0","parsedPath","hashIndex","searchIndex","$c5b33ec0dccca72b$export$2708184779ceb39d","routes","locationArg","basename","$c5b33ec0dccca72b$var$matchRoutesImpl","allowPartial","$c5b33ec0dccca72b$var$stripBasename","location","branches","$c5b33ec0dccca72b$var$flattenRoutes","parentsMeta","parentPath","flattenRoute","route","relativePath","segments","initialScore","meta","caseSensitive","childrenIndex","startsWith","$c5b33ec0dccca72b$var$joinPaths","routesMeta","score","some","$c5b33ec0dccca72b$var$isSplat","segment","$c5b33ec0dccca72b$var$paramRe","includes","exploded","$c5b33ec0dccca72b$var$explodeOptionalSegments","first","isOptional","endsWith","required","restExploded","subpath","$c5b33ec0dccca72b$var$rankRouteBranches","a","siblings","every","matches","$c5b33ec0dccca72b$var$decodePath","$c5b33ec0dccca72b$var$matchRouteBranch","branch","matchedParams","matchedPathname","end","remainingPathname","$c5b33ec0dccca72b$export$81336c211d5ff295","params","pathnameBase","$c5b33ec0dccca72b$var$normalizePathname","pattern","matcher","compiledParams","$c5b33ec0dccca72b$var$compilePath","regexpSource","_","paramName","captureGroups","memo2","splatValue","nextChar","$c5b33ec0dccca72b$var$getInvalidPathError","char","field","dest","$c5b33ec0dccca72b$var$getResolveToMatches","pathMatches","idx","$c5b33ec0dccca72b$var$resolveTo","toArg","routePathnames","locationPathname","isPathRelative","to","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","$c5b33ec0dccca72b$export$b09f2ff0bbcb43c7","fromPathname","relativeSegments","$c5b33ec0dccca72b$var$normalizeSearch","$c5b33ec0dccca72b$var$normalizeHash","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","$c5b33ec0dccca72b$export$972111febbeef05b","statusText","internal","$c5b33ec0dccca72b$export$2eeee58951ff3c1c","createContext","displayName","$c5b33ec0dccca72b$export$315e3ffb01f217","$c5b33ec0dccca72b$export$3681f408decb40d1","isTransitioning","$c5b33ec0dccca72b$export$cb3f1df1bef00a39","$c5b33ec0dccca72b$var$AwaitContext","$c5b33ec0dccca72b$export$3044ab7fdabeaee6","$c5b33ec0dccca72b$export$e6a44b110a0c44d3","$c5b33ec0dccca72b$export$aac280ed165a4397","outlet","isDataRoute","$c5b33ec0dccca72b$var$RouteErrorContext","$c5b33ec0dccca72b$export$9c954a9d03d32f4a","$c5b33ec0dccca72b$export$45d76561a5302f2b","$c5b33ec0dccca72b$var$navigateEffectWarning","$c5b33ec0dccca72b$var$useIsomorphicLayoutEffect","cb","static","$c5b33ec0dccca72b$export$e75d2a2d1b3c245b","relative","routePathnamesJson","$c5b33ec0dccca72b$var$defaultErrorElement","createElement","state","routeId","$c5b33ec0dccca72b$var$useDataRouterState","$c5b33ec0dccca72b$var$useCurrentRouteId","errors","lightgrey","codeStyles","padding","backgroundColor","devInfo","Fragment","style","fontStyle","$c5b33ec0dccca72b$var$RenderErrorBoundary","Component","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","routeContext","component","$c5b33ec0dccca72b$var$RenderedRoute","dataRouterContext","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","$c5b33ec0dccca72b$var$getDataRouterConsoleError","hookName","thisRoute","$c5b33ec0dccca72b$var$alreadyWarned","$c5b33ec0dccca72b$var$warningOnce","memo","future","$c5b33ec0dccca72b$var$useRoutesImpl","dataRouterState","navigator","navigator2","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","locationFromContext","parsedLocationArg","parentSegments","lazy","renderedMatches","$c5b33ec0dccca72b$var$_renderMatches","initialized","errorIndex","findIndex","m","Math","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","encodeLocation","navigationType","$c5b33ec0dccca72b$var$defaultMethod","$c5b33ec0dccca72b$var$defaultEncType","$c5b33ec0dccca72b$var$isHtmlElement","tagName","$c5b33ec0dccca72b$var$_formDataSupportsSubmitter","$c5b33ec0dccca72b$var$supportedFormEncTypes","$c5b33ec0dccca72b$var$getFormEncType","encType","$c5b33ec0dccca72b$var$invariant2","$c5b33ec0dccca72b$var$loadRouteModule","routeModulesCache","routeModule","__reactRouterContext","isSpaMode","hot","reload","$c5b33ec0dccca72b$var$isHtmlLinkDescriptor","rel","imageSrcSet","imageSizes","$c5b33ec0dccca72b$var$getKeyedPrefetchLinks","manifest","routeModules","descriptors","preloads","preloadsSet","links","mod","flat","link","as","deduped","descriptor","page","$c5b33ec0dccca72b$var$sortKeys","sorted","$c5b33ec0dccca72b$var$getNewMatchesForLinks","nextMatches","currentMatches","mode","isNew","matchPathChanged","manifestRoute","hasLoader","shouldRevalidate","routeChoice","currentUrl","origin","currentParams","nextUrl","nextParams","defaultShouldRevalidate","$c5b33ec0dccca72b$var$getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","$c5b33ec0dccca72b$var$BoundaryShell","renderScripts","isOutsideRemixApp","$c5b33ec0dccca72b$var$useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","$c5b33ec0dccca72b$export$ff0bf87698939488","$c5b33ec0dccca72b$var$useDataRouterContext2","$c5b33ec0dccca72b$var$useDataRouterStateContext","$c5b33ec0dccca72b$export$208d6a3bc3aa62bd","$c5b33ec0dccca72b$var$composeEventHandlers","theirHandler","ourHandler","defaultPrevented","$c5b33ec0dccca72b$export$60dcec93e67386bd","dataLinkProps","router","$c5b33ec0dccca72b$var$PrefetchPageLinksImpl","linkProps","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","searchParams","moduleHrefs","keyedPrefetchLinks","$c5b33ec0dccca72b$var$useKeyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","href2","$c5b33ec0dccca72b$var$isHydrated","serverHandoffString","ssr","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","contextScript","routeModulesScript","hmr","runtime","routeIndex","routeVarName","manifestEntry","chunks","varName","$c5b33ec0dccca72b$var$getPartialManifest","routeIds","Boolean","initialRoutes","acc","entry","suppressHydrationWarning","dangerouslySetInnerHTML","__html","async","crossOrigin","$c5b33ec0dccca72b$var$dedupe","$c5b33ec0dccca72b$var$isBrowser","document","__reactRouterVersion","$c5b33ec0dccca72b$var$ABSOLUTE_URL_REGEX2","$c5b33ec0dccca72b$export$a6c7ac8248d6e38a","forwardRef","onClick","discover","prefetch","reloadDocument","replace2","target","preventScrollReset","viewTransition","forwardedRef","absoluteHref","isAbsolute","isExternal","targetUrl","protocol","$c5b33ec0dccca72b$export$b66bb29c5006f12f","joinedPathname","createHref","shouldPrefetch","prefetchRef","prefetchHandlers","$c5b33ec0dccca72b$var$usePrefetchBehavior","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","observer","IntersectionObserver","isIntersecting","threshold","observe","disconnect","setIntent","cancelIntent","internalOnClick","$c5b33ec0dccca72b$export$67621102c14d847","replaceProp","navigate","$c5b33ec0dccca72b$export$9770f232ac06a008","$c5b33ec0dccca72b$var$useNavigateStable","ctx","activeRef","fromRouteId","$c5b33ec0dccca72b$var$useNavigateUnstable","go","button","metaKey","altKey","ctrlKey","shiftKey","preventDefault","$c5b33ec0dccca72b$var$mergeRefs","$c5b33ec0dccca72b$export$b0d92dbee9b5b60d","ariaCurrentProp","className","classNameProp","styleProp","routerState","$c5b33ec0dccca72b$export$e262bd1977bea848","opts","vtContext","$c5b33ec0dccca72b$var$useDataRouterContext3","currentPath","currentLocation","nextPath","nextLocation","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","$c5b33ec0dccca72b$export$a7fed597f4b8afd8","fetcherKey","method","onSubmit","submit","$c5b33ec0dccca72b$export$47c85c6e3a081d3","currentRouteId","formData","body","$c5b33ec0dccca72b$var$getFormSubmissionInfo","attr","getAttribute","FormData","$c5b33ec0dccca72b$var$isButtonElement","$c5b33ec0dccca72b$var$isInputElement","form","$c5b33ec0dccca72b$var$isFormDataSubmitterSupported","prefix","append","$c5b33ec0dccca72b$var$getUniqueFetcherId","fetch","formMethod","formEncType","flushSync","formAction","$c5b33ec0dccca72b$export$89a6bd6db0d97c56","URLSearchParams","indexValues","getAll","delete","qs","submitter","nativeEvent","submitMethod","currentTarget","$c5b33ec0dccca72b$var$fetcherId","$c5b33ec0dccca72b$export$e7973f87fd96e4f2"],"version":3,"file":"root.js.map"}